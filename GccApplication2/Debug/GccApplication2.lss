
GccApplication2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000c06  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000026  00800060  00000c06  00000c9a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000003f  00800086  00800086  00000cc0  2**0
                  ALLOC
  3 .debug_aranges 00000070  00000000  00000000  00000cc0  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 000000b1  00000000  00000000  00000d30  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000509  00000000  00000000  00000de1  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000001b0  00000000  00000000  000012ea  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000499  00000000  00000000  0000149a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000a0  00000000  00000000  00001934  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000002b5  00000000  00000000  000019d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000122  00000000  00000000  00001c89  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000090  00000000  00000000  00001dab  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
		//}
	//}
}


void checkClipping(){//manage clipping indication
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	2c c0       	rjmp	.+88     	; 0x5c <__bad_interrupt>
   4:	2b c0       	rjmp	.+86     	; 0x5c <__bad_interrupt>
   6:	2a c0       	rjmp	.+84     	; 0x5c <__bad_interrupt>
   8:	29 c0       	rjmp	.+82     	; 0x5c <__bad_interrupt>
   a:	28 c0       	rjmp	.+80     	; 0x5c <__bad_interrupt>
   c:	27 c0       	rjmp	.+78     	; 0x5c <__bad_interrupt>
   e:	26 c0       	rjmp	.+76     	; 0x5c <__bad_interrupt>
  10:	25 c0       	rjmp	.+74     	; 0x5c <__bad_interrupt>
  12:	24 c0       	rjmp	.+72     	; 0x5c <__bad_interrupt>
  14:	23 c0       	rjmp	.+70     	; 0x5c <__bad_interrupt>
  16:	22 c0       	rjmp	.+68     	; 0x5c <__bad_interrupt>
  18:	21 c0       	rjmp	.+66     	; 0x5c <__bad_interrupt>
  1a:	20 c0       	rjmp	.+64     	; 0x5c <__bad_interrupt>
  1c:	88 c0       	rjmp	.+272    	; 0x12e <__vector_14>
  1e:	1e c0       	rjmp	.+60     	; 0x5c <__bad_interrupt>
  20:	1d c0       	rjmp	.+58     	; 0x5c <__bad_interrupt>
  22:	1c c0       	rjmp	.+56     	; 0x5c <__bad_interrupt>
  24:	1b c0       	rjmp	.+54     	; 0x5c <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	10 e0       	ldi	r17, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	e6 e0       	ldi	r30, 0x06	; 6
  3a:	fc e0       	ldi	r31, 0x0C	; 12
  3c:	02 c0       	rjmp	.+4      	; 0x42 <.do_copy_data_start>

0000003e <.do_copy_data_loop>:
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0

00000042 <.do_copy_data_start>:
  42:	a6 38       	cpi	r26, 0x86	; 134
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <.do_copy_data_loop>

00000048 <__do_clear_bss>:
  48:	10 e0       	ldi	r17, 0x00	; 0
  4a:	a6 e8       	ldi	r26, 0x86	; 134
  4c:	b0 e0       	ldi	r27, 0x00	; 0
  4e:	01 c0       	rjmp	.+2      	; 0x52 <.do_clear_bss_start>

00000050 <.do_clear_bss_loop>:
  50:	1d 92       	st	X+, r1

00000052 <.do_clear_bss_start>:
  52:	a5 3c       	cpi	r26, 0xC5	; 197
  54:	b1 07       	cpc	r27, r17
  56:	e1 f7       	brne	.-8      	; 0x50 <.do_clear_bss_loop>
  58:	29 d0       	rcall	.+82     	; 0xac <main>
  5a:	d3 c5       	rjmp	.+2982   	; 0xc02 <_exit>

0000005c <__bad_interrupt>:
  5c:	d1 cf       	rjmp	.-94     	; 0x0 <__vectors>

0000005e <_Z5setupv>:


//Note* currentNote = NULL;
//Display* displ = NULL;
void setup() {
	DDRC = 0b00000000; // SET C0 to iput
  5e:	14 ba       	out	0x14, r1	; 20
	//currentNote = new Note;
	
	// (mid, up, upright, downright, down, leftdown, rightdown, sharp, red0, red1, green, red2, red3)
	//displ = new Display(3, 19, 18, 17, 7, 4, 2, 16, 6, 9, 5, 10, 11);
	
	cli();//diable interrupts
  60:	f8 94       	cli
	
	//set up continuous sampling of analog pin 0 at 38.5kHz
	
	//clear ADCSRA register
	ADCSRA = 0;
  62:	a6 e2       	ldi	r26, 0x26	; 38
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	1c 92       	st	X, r1
	
	// 0b01100000;
	ADMUX |= (1 << REFS0); //set reference voltage
  68:	e7 e2       	ldi	r30, 0x27	; 39
  6a:	f0 e0       	ldi	r31, 0x00	; 0
  6c:	80 81       	ld	r24, Z
  6e:	80 64       	ori	r24, 0x40	; 64
  70:	80 83       	st	Z, r24
	ADMUX |= (1 << ADLAR); //left align the ADC value- so we can read highest 8 bits from ADCH register only
  72:	80 81       	ld	r24, Z
  74:	80 62       	ori	r24, 0x20	; 32
  76:	80 83       	st	Z, r24
	
	// 0b11101100
	ADCSRA |= (1 << ADPS2); //set ADC clock with 32 prescaler- 8mHz/16=500kHz
  78:	8c 91       	ld	r24, X
  7a:	84 60       	ori	r24, 0x04	; 4
  7c:	8c 93       	st	X, r24
	ADCSRA |= (1 << ADFR); //enabble auto trigger
  7e:	8c 91       	ld	r24, X
  80:	80 62       	ori	r24, 0x20	; 32
  82:	8c 93       	st	X, r24
	ADCSRA |= (1 << ADIE); //enable interrupts when measurement complete
  84:	8c 91       	ld	r24, X
  86:	88 60       	ori	r24, 0x08	; 8
  88:	8c 93       	st	X, r24
	ADCSRA |= (1 << ADEN); //enable ADC
  8a:	8c 91       	ld	r24, X
  8c:	80 68       	ori	r24, 0x80	; 128
  8e:	8c 93       	st	X, r24
	ADCSRA |= (1 << ADSC); //start ADC measurements
  90:	8c 91       	ld	r24, X
  92:	80 64       	ori	r24, 0x40	; 64
  94:	8c 93       	st	X, r24
	
	sei();//enable interrupts
  96:	78 94       	sei
}
  98:	08 95       	ret

0000009a <_Z5resetv>:
static volatile const char MID_POINT = 127; //2.5V

int vala = -1;

void reset(){//clean out some variables
	index = 0;//reset index
  9a:	10 92 96 00 	sts	0x0096, r1
	noMatch = 0;//reset match couner
  9e:	10 92 c1 00 	sts	0x00C1, r1
	maxSlope = 0;//reset slope
  a2:	10 92 95 00 	sts	0x0095, r1
  a6:	10 92 94 00 	sts	0x0094, r1
}
  aa:	08 95       	ret

000000ac <main>:
	}
}
// --------------------------------------------------------------- END PHYSICS -----------------------------------------------------------------------------


int main() {
  ac:	ef 92       	push	r14
  ae:	ff 92       	push	r15
  b0:	0f 93       	push	r16
  b2:	1f 93       	push	r17
  b4:	df 93       	push	r29
  b6:	cf 93       	push	r28
  b8:	00 d0       	rcall	.+0      	; 0xba <main+0xe>
  ba:	0f 92       	push	r0
  bc:	cd b7       	in	r28, 0x3d	; 61
  be:	de b7       	in	r29, 0x3e	; 62
	//DDRD = 0xFF;
	//PORTD = 0x00;
	
	setup();
  c0:	ce df       	rcall	.-100    	; 0x5e <_Z5setupv>
	
	char newLine[] = "\r\n";
  c2:	de 01       	movw	r26, r28
  c4:	11 96       	adiw	r26, 0x01	; 1
  c6:	e0 e6       	ldi	r30, 0x60	; 96
  c8:	f0 e0       	ldi	r31, 0x00	; 0
  ca:	83 e0       	ldi	r24, 0x03	; 3
  cc:	01 90       	ld	r0, Z+
  ce:	0d 92       	st	X+, r0
  d0:	81 50       	subi	r24, 0x01	; 1
  d2:	e1 f7       	brne	.-8      	; 0xcc <main+0x20>
	char maxAmpStr[] = "MaxAmp: ";
	char voltageStr[] = "New Data: ";
	char freqStr[] = "Frequency: ";
	
	USART_Init ( MYUBRR );
  d4:	83 e3       	ldi	r24, 0x33	; 51
  d6:	90 e0       	ldi	r25, 0x00	; 0
  d8:	c2 d1       	rcall	.+900    	; 0x45e <_Z10USART_Initj>
			//}
			
			
		}
		
		USART_Transmit_ar(newLine);
  da:	7e 01       	movw	r14, r28
  dc:	08 94       	sec
  de:	e1 1c       	adc	r14, r1
  e0:	f1 1c       	adc	r15, r1
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
  e2:	00 e2       	ldi	r16, 0x20	; 32
  e4:	1e e4       	ldi	r17, 0x4E	; 78
		//USART_Transmit_ar(vstr);
		//
		//USART_Transmit(' ');
		//
		
		float voltage = newData * (5.0 / 1023.0);
  e6:	80 91 88 00 	lds	r24, 0x0088
		
		//PORTD = 0;
		if (checkMaxAmp > ampThreshold) /* && checkMaxAmp < maxAmpThreshold) */ {
  ea:	90 91 89 00 	lds	r25, 0x0089
  ee:	80 91 81 00 	lds	r24, 0x0081
  f2:	89 17       	cp	r24, r25
  f4:	b0 f4       	brcc	.+44     	; 0x122 <main+0x76>
			frequency = 38462.0/float(period);//calculate frequency timer rate/period
  f6:	60 91 8a 00 	lds	r22, 0x008A
  fa:	70 91 8b 00 	lds	r23, 0x008B
  fe:	80 e0       	ldi	r24, 0x00	; 0
 100:	90 e0       	ldi	r25, 0x00	; 0
 102:	4c d2       	rcall	.+1176   	; 0x59c <__floatunsisf>
 104:	9b 01       	movw	r18, r22
 106:	ac 01       	movw	r20, r24
 108:	60 e0       	ldi	r22, 0x00	; 0
 10a:	7e e3       	ldi	r23, 0x3E	; 62
 10c:	86 e1       	ldi	r24, 0x16	; 22
 10e:	97 e4       	ldi	r25, 0x47	; 71
 110:	dd d1       	rcall	.+954    	; 0x4cc <__divsf3>
 112:	60 93 8c 00 	sts	0x008C, r22
 116:	70 93 8d 00 	sts	0x008D, r23
 11a:	80 93 8e 00 	sts	0x008E, r24
 11e:	90 93 8f 00 	sts	0x008F, r25
			//}
			
			
		}
		
		USART_Transmit_ar(newLine);
 122:	c7 01       	movw	r24, r14
 124:	ad d1       	rcall	.+858    	; 0x480 <_Z17USART_Transmit_arPc>
 126:	c8 01       	movw	r24, r16
 128:	01 97       	sbiw	r24, 0x01	; 1
 12a:	f1 f7       	brne	.-4      	; 0x128 <main+0x7c>
 12c:	dc cf       	rjmp	.-72     	; 0xe6 <main+0x3a>

0000012e <__vector_14>:
	index = 0;//reset index
	noMatch = 0;//reset match couner
	maxSlope = 0;//reset slope
}

ISR(ADC_vect) {//when new ADC value ready
 12e:	1f 92       	push	r1
 130:	0f 92       	push	r0
 132:	0f b6       	in	r0, 0x3f	; 63
 134:	0f 92       	push	r0
 136:	11 24       	eor	r1, r1
 138:	2f 93       	push	r18
 13a:	3f 93       	push	r19
 13c:	4f 93       	push	r20
 13e:	5f 93       	push	r21
 140:	6f 93       	push	r22
 142:	7f 93       	push	r23
 144:	8f 93       	push	r24
 146:	9f 93       	push	r25
 148:	af 93       	push	r26
 14a:	bf 93       	push	r27
 14c:	ef 93       	push	r30
 14e:	ff 93       	push	r31
 150:	df 93       	push	r29
 152:	cf 93       	push	r28
 154:	cd b7       	in	r28, 0x3d	; 61
 156:	de b7       	in	r29, 0x3e	; 62
 158:	6e 97       	sbiw	r28, 0x1e	; 30
 15a:	de bf       	out	0x3e, r29	; 62
 15c:	cd bf       	out	0x3d, r28	; 61
	//return; /////////////////////////////////// COMMENT!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
	prevData = newData;//store previous value
 15e:	80 91 88 00 	lds	r24, 0x0088
 162:	80 93 91 00 	sts	0x0091, r24
	newData = ADCH;//get value from A0
 166:	85 b1       	in	r24, 0x05	; 5
 168:	80 93 88 00 	sts	0x0088, r24
	//
	//  Serial.print("oldData: ");
	//  Serial.print(prevData);
	//  Serial.print("newData: ");
	//  Serial.println(newData);
	char str1[] = "I AM HERE 1 \r\n";
 16c:	de 01       	movw	r26, r28
 16e:	11 96       	adiw	r26, 0x01	; 1
 170:	e3 e6       	ldi	r30, 0x63	; 99
 172:	f0 e0       	ldi	r31, 0x00	; 0
 174:	8f e0       	ldi	r24, 0x0F	; 15
 176:	01 90       	ld	r0, Z+
 178:	0d 92       	st	X+, r0
 17a:	81 50       	subi	r24, 0x01	; 1
 17c:	e1 f7       	brne	.-8      	; 0x176 <__vector_14+0x48>
	USART_Transmit_ar(str1);
 17e:	ce 01       	movw	r24, r28
 180:	01 96       	adiw	r24, 0x01	; 1
 182:	7e d1       	rcall	.+764    	; 0x480 <_Z17USART_Transmit_arPc>
	
	if (prevData < MID_POINT && newData >= MID_POINT){//if increasing and crossing midpoint
 184:	90 91 91 00 	lds	r25, 0x0091
 188:	80 91 82 00 	lds	r24, 0x0082
 18c:	98 17       	cp	r25, r24
 18e:	08 f0       	brcs	.+2      	; 0x192 <__vector_14+0x64>
 190:	06 c1       	rjmp	.+524    	; 0x39e <__vector_14+0x270>
 192:	90 91 88 00 	lds	r25, 0x0088
 196:	80 91 82 00 	lds	r24, 0x0082
 19a:	98 17       	cp	r25, r24
 19c:	08 f4       	brcc	.+2      	; 0x1a0 <__vector_14+0x72>
 19e:	ff c0       	rjmp	.+510    	; 0x39e <__vector_14+0x270>
		newSlope = newData - prevData;//calculate slope
 1a0:	80 91 88 00 	lds	r24, 0x0088
 1a4:	20 91 91 00 	lds	r18, 0x0091
 1a8:	90 e0       	ldi	r25, 0x00	; 0
 1aa:	82 1b       	sub	r24, r18
 1ac:	91 09       	sbc	r25, r1
 1ae:	90 93 93 00 	sts	0x0093, r25
 1b2:	80 93 92 00 	sts	0x0092, r24
		//Serial.println(newSlope);
		if (abs(newSlope-maxSlope)<slopeTol){//if slopes are ==
 1b6:	20 91 92 00 	lds	r18, 0x0092
 1ba:	30 91 93 00 	lds	r19, 0x0093
 1be:	80 91 94 00 	lds	r24, 0x0094
 1c2:	90 91 95 00 	lds	r25, 0x0095
 1c6:	40 91 83 00 	lds	r20, 0x0083
 1ca:	28 1b       	sub	r18, r24
 1cc:	39 0b       	sbc	r19, r25
 1ce:	1a f4       	brpl	.+6      	; 0x1d6 <__vector_14+0xa8>
 1d0:	30 95       	com	r19
 1d2:	21 95       	neg	r18
 1d4:	3f 4f       	sbci	r19, 0xFF	; 255
 1d6:	84 2f       	mov	r24, r20
 1d8:	90 e0       	ldi	r25, 0x00	; 0
 1da:	28 17       	cp	r18, r24
 1dc:	39 07       	cpc	r19, r25
 1de:	0c f0       	brlt	.+2      	; 0x1e2 <__vector_14+0xb4>
 1e0:	b8 c0       	rjmp	.+368    	; 0x352 <__vector_14+0x224>
			//record new data and reset time
			slope[index] = newSlope;
 1e2:	e0 91 96 00 	lds	r30, 0x0096
 1e6:	f0 e0       	ldi	r31, 0x00	; 0
 1e8:	80 91 92 00 	lds	r24, 0x0092
 1ec:	90 91 93 00 	lds	r25, 0x0093
 1f0:	ee 0f       	add	r30, r30
 1f2:	ff 1f       	adc	r31, r31
 1f4:	e9 56       	subi	r30, 0x69	; 105
 1f6:	ff 4f       	sbci	r31, 0xFF	; 255
 1f8:	91 83       	std	Z+1, r25	; 0x01
 1fa:	80 83       	st	Z, r24
			timer[index] = time;
 1fc:	e0 91 96 00 	lds	r30, 0x0096
 200:	f0 e0       	ldi	r31, 0x00	; 0
 202:	80 91 ab 00 	lds	r24, 0x00AB
 206:	90 91 ac 00 	lds	r25, 0x00AC
 20a:	ee 0f       	add	r30, r30
 20c:	ff 1f       	adc	r31, r31
 20e:	e3 55       	subi	r30, 0x53	; 83
 210:	ff 4f       	sbci	r31, 0xFF	; 255
 212:	91 83       	std	Z+1, r25	; 0x01
 214:	80 83       	st	Z, r24
			time = 0;
 216:	10 92 ac 00 	sts	0x00AC, r1
 21a:	10 92 ab 00 	sts	0x00AB, r1
			if (index == 0){//new max slope just reset
 21e:	80 91 96 00 	lds	r24, 0x0096
 222:	88 23       	and	r24, r24
 224:	41 f4       	brne	.+16     	; 0x236 <__vector_14+0x108>
				//Serial.println("I AM HER1 ");
				noMatch = 0;
 226:	10 92 c1 00 	sts	0x00C1, r1
				index++;//increment index
 22a:	80 91 96 00 	lds	r24, 0x0096
 22e:	8f 5f       	subi	r24, 0xFF	; 255
 230:	80 93 96 00 	sts	0x0096, r24
 234:	b4 c0       	rjmp	.+360    	; 0x39e <__vector_14+0x270>
			}
			else if (abs(timer[0]-timer[index])<timerTol && abs(slope[0]-newSlope)<slopeTol){//if timer duration and slopes match
 236:	ed ea       	ldi	r30, 0xAD	; 173
 238:	f0 e0       	ldi	r31, 0x00	; 0
 23a:	20 81       	ld	r18, Z
 23c:	31 81       	ldd	r19, Z+1	; 0x01
 23e:	80 91 96 00 	lds	r24, 0x0096
 242:	90 e0       	ldi	r25, 0x00	; 0
 244:	88 0f       	add	r24, r24
 246:	99 1f       	adc	r25, r25
 248:	e8 0f       	add	r30, r24
 24a:	f9 1f       	adc	r31, r25
 24c:	80 81       	ld	r24, Z
 24e:	91 81       	ldd	r25, Z+1	; 0x01
 250:	40 91 84 00 	lds	r20, 0x0084
 254:	50 91 85 00 	lds	r21, 0x0085
 258:	28 1b       	sub	r18, r24
 25a:	39 0b       	sbc	r19, r25
 25c:	1a f4       	brpl	.+6      	; 0x264 <__vector_14+0x136>
 25e:	30 95       	com	r19
 260:	21 95       	neg	r18
 262:	3f 4f       	sbci	r19, 0xFF	; 255
 264:	24 17       	cp	r18, r20
 266:	35 07       	cpc	r19, r21
 268:	0c f0       	brlt	.+2      	; 0x26c <__vector_14+0x13e>
 26a:	d8 c0       	rjmp	.+432    	; 0x41c <__vector_14+0x2ee>
 26c:	20 91 97 00 	lds	r18, 0x0097
 270:	30 91 98 00 	lds	r19, 0x0098
 274:	80 91 92 00 	lds	r24, 0x0092
 278:	90 91 93 00 	lds	r25, 0x0093
 27c:	40 91 83 00 	lds	r20, 0x0083
 280:	28 1b       	sub	r18, r24
 282:	39 0b       	sbc	r19, r25
 284:	1a f4       	brpl	.+6      	; 0x28c <__vector_14+0x15e>
 286:	30 95       	com	r19
 288:	21 95       	neg	r18
 28a:	3f 4f       	sbci	r19, 0xFF	; 255
 28c:	84 2f       	mov	r24, r20
 28e:	90 e0       	ldi	r25, 0x00	; 0
 290:	28 17       	cp	r18, r24
 292:	39 07       	cpc	r19, r25
 294:	0c f0       	brlt	.+2      	; 0x298 <__vector_14+0x16a>
 296:	c2 c0       	rjmp	.+388    	; 0x41c <__vector_14+0x2ee>
				char str2[] = "I AM HERE 2 \r\n";
 298:	de 01       	movw	r26, r28
 29a:	50 96       	adiw	r26, 0x10	; 16
 29c:	e2 e7       	ldi	r30, 0x72	; 114
 29e:	f0 e0       	ldi	r31, 0x00	; 0
 2a0:	8f e0       	ldi	r24, 0x0F	; 15
 2a2:	01 90       	ld	r0, Z+
 2a4:	0d 92       	st	X+, r0
 2a6:	81 50       	subi	r24, 0x01	; 1
 2a8:	e1 f7       	brne	.-8      	; 0x2a2 <__vector_14+0x174>
				USART_Transmit_ar(str2);
 2aa:	ce 01       	movw	r24, r28
 2ac:	40 96       	adiw	r24, 0x10	; 16
 2ae:	e8 d0       	rcall	.+464    	; 0x480 <_Z17USART_Transmit_arPc>
				//sum timer values
				totalTimer = 0;
 2b0:	10 92 c3 00 	sts	0x00C3, r1
 2b4:	10 92 c2 00 	sts	0x00C2, r1
				for (unsigned char i=0;i<index;i++){
 2b8:	80 91 96 00 	lds	r24, 0x0096
 2bc:	88 23       	and	r24, r24
 2be:	d9 f0       	breq	.+54     	; 0x2f6 <__vector_14+0x1c8>
 2c0:	40 e0       	ldi	r20, 0x00	; 0
					totalTimer+=timer[i];
 2c2:	6d ea       	ldi	r22, 0xAD	; 173
 2c4:	70 e0       	ldi	r23, 0x00	; 0
 2c6:	84 2f       	mov	r24, r20
 2c8:	90 e0       	ldi	r25, 0x00	; 0
 2ca:	88 0f       	add	r24, r24
 2cc:	99 1f       	adc	r25, r25
 2ce:	fb 01       	movw	r30, r22
 2d0:	e8 0f       	add	r30, r24
 2d2:	f9 1f       	adc	r31, r25
 2d4:	80 81       	ld	r24, Z
 2d6:	91 81       	ldd	r25, Z+1	; 0x01
 2d8:	20 91 c2 00 	lds	r18, 0x00C2
 2dc:	30 91 c3 00 	lds	r19, 0x00C3
 2e0:	82 0f       	add	r24, r18
 2e2:	93 1f       	adc	r25, r19
 2e4:	90 93 c3 00 	sts	0x00C3, r25
 2e8:	80 93 c2 00 	sts	0x00C2, r24
			else if (abs(timer[0]-timer[index])<timerTol && abs(slope[0]-newSlope)<slopeTol){//if timer duration and slopes match
				char str2[] = "I AM HERE 2 \r\n";
				USART_Transmit_ar(str2);
				//sum timer values
				totalTimer = 0;
				for (unsigned char i=0;i<index;i++){
 2ec:	4f 5f       	subi	r20, 0xFF	; 255
 2ee:	80 91 96 00 	lds	r24, 0x0096
 2f2:	48 17       	cp	r20, r24
 2f4:	40 f3       	brcs	.-48     	; 0x2c6 <__vector_14+0x198>
					totalTimer+=timer[i];
				}
				period = totalTimer;//set period
 2f6:	80 91 c2 00 	lds	r24, 0x00C2
 2fa:	90 91 c3 00 	lds	r25, 0x00C3
 2fe:	90 93 8b 00 	sts	0x008B, r25
 302:	80 93 8a 00 	sts	0x008A, r24
				//reset new zero index values to compare with
				timer[0] = timer[index];
 306:	80 91 96 00 	lds	r24, 0x0096
 30a:	90 e0       	ldi	r25, 0x00	; 0
 30c:	ad ea       	ldi	r26, 0xAD	; 173
 30e:	b0 e0       	ldi	r27, 0x00	; 0
 310:	88 0f       	add	r24, r24
 312:	99 1f       	adc	r25, r25
 314:	fd 01       	movw	r30, r26
 316:	e8 0f       	add	r30, r24
 318:	f9 1f       	adc	r31, r25
 31a:	80 81       	ld	r24, Z
 31c:	91 81       	ldd	r25, Z+1	; 0x01
 31e:	11 96       	adiw	r26, 0x01	; 1
 320:	9c 93       	st	X, r25
 322:	8e 93       	st	-X, r24
				slope[0] = slope[index];
 324:	80 91 96 00 	lds	r24, 0x0096
 328:	90 e0       	ldi	r25, 0x00	; 0
 32a:	a7 e9       	ldi	r26, 0x97	; 151
 32c:	b0 e0       	ldi	r27, 0x00	; 0
 32e:	88 0f       	add	r24, r24
 330:	99 1f       	adc	r25, r25
 332:	fd 01       	movw	r30, r26
 334:	e8 0f       	add	r30, r24
 336:	f9 1f       	adc	r31, r25
 338:	80 81       	ld	r24, Z
 33a:	91 81       	ldd	r25, Z+1	; 0x01
 33c:	11 96       	adiw	r26, 0x01	; 1
 33e:	9c 93       	st	X, r25
 340:	8e 93       	st	-X, r24
				index = 1;//set index to 1
 342:	81 e0       	ldi	r24, 0x01	; 1
 344:	80 93 96 00 	sts	0x0096, r24
				noMatch = 0;
 348:	10 92 c1 00 	sts	0x00C1, r1
 34c:	28 c0       	rjmp	.+80     	; 0x39e <__vector_14+0x270>
			}
			else{//crossing midpoint but not match
				index++;//increment index
				if (index > 9){
					reset();
 34e:	a5 de       	rcall	.-694    	; 0x9a <_Z5resetv>
 350:	26 c0       	rjmp	.+76     	; 0x39e <__vector_14+0x270>
				}
			}
		}
		else if (newSlope>maxSlope){//if new slope is much larger than max slope
 352:	20 91 92 00 	lds	r18, 0x0092
 356:	30 91 93 00 	lds	r19, 0x0093
 35a:	80 91 94 00 	lds	r24, 0x0094
 35e:	90 91 95 00 	lds	r25, 0x0095
 362:	82 17       	cp	r24, r18
 364:	93 07       	cpc	r25, r19
 366:	8c f4       	brge	.+34     	; 0x38a <__vector_14+0x25c>
			maxSlope = newSlope;
 368:	80 91 92 00 	lds	r24, 0x0092
 36c:	90 91 93 00 	lds	r25, 0x0093
 370:	90 93 95 00 	sts	0x0095, r25
 374:	80 93 94 00 	sts	0x0094, r24
			time = 0;//reset clock
 378:	10 92 ac 00 	sts	0x00AC, r1
 37c:	10 92 ab 00 	sts	0x00AB, r1
			noMatch = 0;
 380:	10 92 c1 00 	sts	0x00C1, r1
			index = 0;//reset index
 384:	10 92 96 00 	sts	0x0096, r1
 388:	0a c0       	rjmp	.+20     	; 0x39e <__vector_14+0x270>
		}
		else{//slope not steep enough
			noMatch++;//increment no match counter
 38a:	80 91 c1 00 	lds	r24, 0x00C1
 38e:	8f 5f       	subi	r24, 0xFF	; 255
 390:	80 93 c1 00 	sts	0x00C1, r24
			if (noMatch>9){
 394:	80 91 c1 00 	lds	r24, 0x00C1
 398:	8a 30       	cpi	r24, 0x0A	; 10
 39a:	08 f0       	brcs	.+2      	; 0x39e <__vector_14+0x270>
				reset();
 39c:	7e de       	rcall	.-772    	; 0x9a <_Z5resetv>
			}
		}
	}
	
	if (newData == 0 || newData == 1023){//if clipping
 39e:	80 91 88 00 	lds	r24, 0x0088
 3a2:	88 23       	and	r24, r24
 3a4:	19 f0       	breq	.+6      	; 0x3ac <__vector_14+0x27e>
 3a6:	80 91 88 00 	lds	r24, 0x0088
 3aa:	03 c0       	rjmp	.+6      	; 0x3b2 <__vector_14+0x284>
		clipping = 1;//currently clipping
 3ac:	81 e0       	ldi	r24, 0x01	; 1
 3ae:	80 93 90 00 	sts	0x0090, r24
	}
	
	time++;//increment timer at rate of 38.5kHz
 3b2:	80 91 ab 00 	lds	r24, 0x00AB
 3b6:	90 91 ac 00 	lds	r25, 0x00AC
 3ba:	01 96       	adiw	r24, 0x01	; 1
 3bc:	90 93 ac 00 	sts	0x00AC, r25
 3c0:	80 93 ab 00 	sts	0x00AB, r24
	
	ampTimer++;//increment amplitude timer
 3c4:	80 91 86 00 	lds	r24, 0x0086
 3c8:	90 91 87 00 	lds	r25, 0x0087
 3cc:	ac 01       	movw	r20, r24
 3ce:	4f 5f       	subi	r20, 0xFF	; 255
 3d0:	5f 4f       	sbci	r21, 0xFF	; 255
 3d2:	50 93 87 00 	sts	0x0087, r21
 3d6:	40 93 86 00 	sts	0x0086, r20
	char newMaxAmp = abs(MID_POINT-newData);
 3da:	80 91 82 00 	lds	r24, 0x0082
 3de:	20 91 88 00 	lds	r18, 0x0088
 3e2:	90 e0       	ldi	r25, 0x00	; 0
 3e4:	82 1b       	sub	r24, r18
 3e6:	91 09       	sbc	r25, r1
 3e8:	99 23       	and	r25, r25
 3ea:	1c f4       	brge	.+6      	; 0x3f2 <__vector_14+0x2c4>
 3ec:	90 95       	com	r25
 3ee:	81 95       	neg	r24
 3f0:	9f 4f       	sbci	r25, 0xFF	; 255
 3f2:	98 2f       	mov	r25, r24
	if (newMaxAmp > maxAmp) {
 3f4:	80 91 c4 00 	lds	r24, 0x00C4
 3f8:	89 17       	cp	r24, r25
 3fa:	10 f4       	brcc	.+4      	; 0x400 <__vector_14+0x2d2>
		maxAmp = newMaxAmp;
 3fc:	90 93 c4 00 	sts	0x00C4, r25
	}
	if (ampTimer==1000) {
 400:	48 5e       	subi	r20, 0xE8	; 232
 402:	53 40       	sbci	r21, 0x03	; 3
 404:	b1 f4       	brne	.+44     	; 0x432 <__vector_14+0x304>
		ampTimer = 0;
 406:	10 92 87 00 	sts	0x0087, r1
 40a:	10 92 86 00 	sts	0x0086, r1
		checkMaxAmp = maxAmp;
 40e:	80 91 c4 00 	lds	r24, 0x00C4
 412:	80 93 89 00 	sts	0x0089, r24
		maxAmp = 0;
 416:	10 92 c4 00 	sts	0x00C4, r1
 41a:	0b c0       	rjmp	.+22     	; 0x432 <__vector_14+0x304>
				slope[0] = slope[index];
				index = 1;//set index to 1
				noMatch = 0;
			}
			else{//crossing midpoint but not match
				index++;//increment index
 41c:	80 91 96 00 	lds	r24, 0x0096
 420:	8f 5f       	subi	r24, 0xFF	; 255
 422:	80 93 96 00 	sts	0x0096, r24
				if (index > 9){
 426:	80 91 96 00 	lds	r24, 0x0096
 42a:	8a 30       	cpi	r24, 0x0A	; 10
 42c:	08 f4       	brcc	.+2      	; 0x430 <__vector_14+0x302>
 42e:	b7 cf       	rjmp	.-146    	; 0x39e <__vector_14+0x270>
 430:	8e cf       	rjmp	.-228    	; 0x34e <__vector_14+0x220>
		//}
		//if (frequency > 190) {
			//PORTD |= (1 << 3);
		//}
	//}
}
 432:	6e 96       	adiw	r28, 0x1e	; 30
 434:	de bf       	out	0x3e, r29	; 62
 436:	cd bf       	out	0x3d, r28	; 61
 438:	cf 91       	pop	r28
 43a:	df 91       	pop	r29
 43c:	ff 91       	pop	r31
 43e:	ef 91       	pop	r30
 440:	bf 91       	pop	r27
 442:	af 91       	pop	r26
 444:	9f 91       	pop	r25
 446:	8f 91       	pop	r24
 448:	7f 91       	pop	r23
 44a:	6f 91       	pop	r22
 44c:	5f 91       	pop	r21
 44e:	4f 91       	pop	r20
 450:	3f 91       	pop	r19
 452:	2f 91       	pop	r18
 454:	0f 90       	pop	r0
 456:	0f be       	out	0x3f, r0	; 63
 458:	0f 90       	pop	r0
 45a:	1f 90       	pop	r1
 45c:	18 95       	reti

0000045e <_Z10USART_Initj>:
#include "serial.h"

void USART_Init (unsigned int ubrr)
{
	/* Set baud rate */
	UBRRH = (unsigned char)(ubrr>>8);
 45e:	e0 e4       	ldi	r30, 0x40	; 64
 460:	f0 e0       	ldi	r31, 0x00	; 0
 462:	90 83       	st	Z, r25
	UBRRL = (unsigned char)ubrr;
 464:	89 b9       	out	0x09, r24	; 9
	/* Enable receiver and transmitter */
	UCSRB = (1<<RXEN)|(1<<TXEN);
 466:	88 e1       	ldi	r24, 0x18	; 24
 468:	8a b9       	out	0x0a, r24	; 10
	/* Set frame format: 8data, 2stop bit */
	UCSRC = (1<<URSEL)|(1<<USBS)|(3<<UCSZ0);
 46a:	8e e8       	ldi	r24, 0x8E	; 142
 46c:	80 83       	st	Z, r24
}
 46e:	08 95       	ret

00000470 <_Z14USART_Transmith>:

void USART_Transmit (unsigned char data) {
 470:	98 2f       	mov	r25, r24
	/* Wait for empty transmit buffer */
	while ( !( UCSRA & (1<<UDRE)) );
 472:	eb e2       	ldi	r30, 0x2B	; 43
 474:	f0 e0       	ldi	r31, 0x00	; 0
 476:	80 81       	ld	r24, Z
 478:	85 ff       	sbrs	r24, 5
 47a:	fd cf       	rjmp	.-6      	; 0x476 <_Z14USART_Transmith+0x6>
	/* Put data into buffer, sends the data */
	UDR = data;
 47c:	9c b9       	out	0x0c, r25	; 12
}
 47e:	08 95       	ret

00000480 <_Z17USART_Transmit_arPc>:

void USART_Transmit_ar (char* data) {
 480:	ef 92       	push	r14
 482:	ff 92       	push	r15
 484:	0f 93       	push	r16
 486:	1f 93       	push	r17
 488:	cf 93       	push	r28
 48a:	df 93       	push	r29
 48c:	8c 01       	movw	r16, r24
	int len = strlen(data);
 48e:	a8 2f       	mov	r26, r24
 490:	b1 2f       	mov	r27, r17
 492:	fd 01       	movw	r30, r26
 494:	01 90       	ld	r0, Z+
 496:	00 20       	and	r0, r0
 498:	e9 f7       	brne	.-6      	; 0x494 <_Z17USART_Transmit_arPc+0x14>
 49a:	31 97       	sbiw	r30, 0x01	; 1
 49c:	7f 01       	movw	r14, r30
 49e:	ea 1a       	sub	r14, r26
 4a0:	fb 0a       	sbc	r15, r27
	for (int i = 0; i < len; i++) {
 4a2:	1e 14       	cp	r1, r14
 4a4:	1f 04       	cpc	r1, r15
 4a6:	5c f4       	brge	.+22     	; 0x4be <_Z17USART_Transmit_arPc+0x3e>
 4a8:	c0 e0       	ldi	r28, 0x00	; 0
 4aa:	d0 e0       	ldi	r29, 0x00	; 0
		USART_Transmit(data[i]);
 4ac:	f8 01       	movw	r30, r16
 4ae:	ec 0f       	add	r30, r28
 4b0:	fd 1f       	adc	r31, r29
 4b2:	80 81       	ld	r24, Z
 4b4:	dd df       	rcall	.-70     	; 0x470 <_Z14USART_Transmith>
	UDR = data;
}

void USART_Transmit_ar (char* data) {
	int len = strlen(data);
	for (int i = 0; i < len; i++) {
 4b6:	21 96       	adiw	r28, 0x01	; 1
 4b8:	ce 15       	cp	r28, r14
 4ba:	df 05       	cpc	r29, r15
 4bc:	bc f3       	brlt	.-18     	; 0x4ac <_Z17USART_Transmit_arPc+0x2c>
		USART_Transmit(data[i]);
	}
 4be:	df 91       	pop	r29
 4c0:	cf 91       	pop	r28
 4c2:	1f 91       	pop	r17
 4c4:	0f 91       	pop	r16
 4c6:	ff 90       	pop	r15
 4c8:	ef 90       	pop	r14
 4ca:	08 95       	ret

000004cc <__divsf3>:
 4cc:	0c d0       	rcall	.+24     	; 0x4e6 <__divsf3x>
 4ce:	ba c0       	rjmp	.+372    	; 0x644 <__fp_round>
 4d0:	b2 d0       	rcall	.+356    	; 0x636 <__fp_pscB>
 4d2:	40 f0       	brcs	.+16     	; 0x4e4 <__divsf3+0x18>
 4d4:	a9 d0       	rcall	.+338    	; 0x628 <__fp_pscA>
 4d6:	30 f0       	brcs	.+12     	; 0x4e4 <__divsf3+0x18>
 4d8:	21 f4       	brne	.+8      	; 0x4e2 <__divsf3+0x16>
 4da:	5f 3f       	cpi	r21, 0xFF	; 255
 4dc:	19 f0       	breq	.+6      	; 0x4e4 <__divsf3+0x18>
 4de:	9b c0       	rjmp	.+310    	; 0x616 <__fp_inf>
 4e0:	51 11       	cpse	r21, r1
 4e2:	e4 c0       	rjmp	.+456    	; 0x6ac <__fp_szero>
 4e4:	9e c0       	rjmp	.+316    	; 0x622 <__fp_nan>

000004e6 <__divsf3x>:
 4e6:	bf d0       	rcall	.+382    	; 0x666 <__fp_split3>
 4e8:	98 f3       	brcs	.-26     	; 0x4d0 <__divsf3+0x4>

000004ea <__divsf3_pse>:
 4ea:	99 23       	and	r25, r25
 4ec:	c9 f3       	breq	.-14     	; 0x4e0 <__divsf3+0x14>
 4ee:	55 23       	and	r21, r21
 4f0:	b1 f3       	breq	.-20     	; 0x4de <__divsf3+0x12>
 4f2:	95 1b       	sub	r25, r21
 4f4:	55 0b       	sbc	r21, r21
 4f6:	bb 27       	eor	r27, r27
 4f8:	aa 27       	eor	r26, r26
 4fa:	62 17       	cp	r22, r18
 4fc:	73 07       	cpc	r23, r19
 4fe:	84 07       	cpc	r24, r20
 500:	38 f0       	brcs	.+14     	; 0x510 <__divsf3_pse+0x26>
 502:	9f 5f       	subi	r25, 0xFF	; 255
 504:	5f 4f       	sbci	r21, 0xFF	; 255
 506:	22 0f       	add	r18, r18
 508:	33 1f       	adc	r19, r19
 50a:	44 1f       	adc	r20, r20
 50c:	aa 1f       	adc	r26, r26
 50e:	a9 f3       	breq	.-22     	; 0x4fa <__divsf3_pse+0x10>
 510:	33 d0       	rcall	.+102    	; 0x578 <__divsf3_pse+0x8e>
 512:	0e 2e       	mov	r0, r30
 514:	3a f0       	brmi	.+14     	; 0x524 <__divsf3_pse+0x3a>
 516:	e0 e8       	ldi	r30, 0x80	; 128
 518:	30 d0       	rcall	.+96     	; 0x57a <__divsf3_pse+0x90>
 51a:	91 50       	subi	r25, 0x01	; 1
 51c:	50 40       	sbci	r21, 0x00	; 0
 51e:	e6 95       	lsr	r30
 520:	00 1c       	adc	r0, r0
 522:	ca f7       	brpl	.-14     	; 0x516 <__divsf3_pse+0x2c>
 524:	29 d0       	rcall	.+82     	; 0x578 <__divsf3_pse+0x8e>
 526:	fe 2f       	mov	r31, r30
 528:	27 d0       	rcall	.+78     	; 0x578 <__divsf3_pse+0x8e>
 52a:	66 0f       	add	r22, r22
 52c:	77 1f       	adc	r23, r23
 52e:	88 1f       	adc	r24, r24
 530:	bb 1f       	adc	r27, r27
 532:	26 17       	cp	r18, r22
 534:	37 07       	cpc	r19, r23
 536:	48 07       	cpc	r20, r24
 538:	ab 07       	cpc	r26, r27
 53a:	b0 e8       	ldi	r27, 0x80	; 128
 53c:	09 f0       	breq	.+2      	; 0x540 <__divsf3_pse+0x56>
 53e:	bb 0b       	sbc	r27, r27
 540:	80 2d       	mov	r24, r0
 542:	bf 01       	movw	r22, r30
 544:	ff 27       	eor	r31, r31
 546:	93 58       	subi	r25, 0x83	; 131
 548:	5f 4f       	sbci	r21, 0xFF	; 255
 54a:	2a f0       	brmi	.+10     	; 0x556 <__divsf3_pse+0x6c>
 54c:	9e 3f       	cpi	r25, 0xFE	; 254
 54e:	51 05       	cpc	r21, r1
 550:	68 f0       	brcs	.+26     	; 0x56c <__divsf3_pse+0x82>
 552:	61 c0       	rjmp	.+194    	; 0x616 <__fp_inf>
 554:	ab c0       	rjmp	.+342    	; 0x6ac <__fp_szero>
 556:	5f 3f       	cpi	r21, 0xFF	; 255
 558:	ec f3       	brlt	.-6      	; 0x554 <__divsf3_pse+0x6a>
 55a:	98 3e       	cpi	r25, 0xE8	; 232
 55c:	dc f3       	brlt	.-10     	; 0x554 <__divsf3_pse+0x6a>
 55e:	86 95       	lsr	r24
 560:	77 95       	ror	r23
 562:	67 95       	ror	r22
 564:	b7 95       	ror	r27
 566:	f7 95       	ror	r31
 568:	9f 5f       	subi	r25, 0xFF	; 255
 56a:	c9 f7       	brne	.-14     	; 0x55e <__divsf3_pse+0x74>
 56c:	88 0f       	add	r24, r24
 56e:	91 1d       	adc	r25, r1
 570:	96 95       	lsr	r25
 572:	87 95       	ror	r24
 574:	97 f9       	bld	r25, 7
 576:	08 95       	ret
 578:	e1 e0       	ldi	r30, 0x01	; 1
 57a:	66 0f       	add	r22, r22
 57c:	77 1f       	adc	r23, r23
 57e:	88 1f       	adc	r24, r24
 580:	bb 1f       	adc	r27, r27
 582:	62 17       	cp	r22, r18
 584:	73 07       	cpc	r23, r19
 586:	84 07       	cpc	r24, r20
 588:	ba 07       	cpc	r27, r26
 58a:	20 f0       	brcs	.+8      	; 0x594 <__divsf3_pse+0xaa>
 58c:	62 1b       	sub	r22, r18
 58e:	73 0b       	sbc	r23, r19
 590:	84 0b       	sbc	r24, r20
 592:	ba 0b       	sbc	r27, r26
 594:	ee 1f       	adc	r30, r30
 596:	88 f7       	brcc	.-30     	; 0x57a <__divsf3_pse+0x90>
 598:	e0 95       	com	r30
 59a:	08 95       	ret

0000059c <__floatunsisf>:
 59c:	e8 94       	clt
 59e:	09 c0       	rjmp	.+18     	; 0x5b2 <__floatsisf+0x12>

000005a0 <__floatsisf>:
 5a0:	97 fb       	bst	r25, 7
 5a2:	3e f4       	brtc	.+14     	; 0x5b2 <__floatsisf+0x12>
 5a4:	90 95       	com	r25
 5a6:	80 95       	com	r24
 5a8:	70 95       	com	r23
 5aa:	61 95       	neg	r22
 5ac:	7f 4f       	sbci	r23, 0xFF	; 255
 5ae:	8f 4f       	sbci	r24, 0xFF	; 255
 5b0:	9f 4f       	sbci	r25, 0xFF	; 255
 5b2:	99 23       	and	r25, r25
 5b4:	a9 f0       	breq	.+42     	; 0x5e0 <__floatsisf+0x40>
 5b6:	f9 2f       	mov	r31, r25
 5b8:	96 e9       	ldi	r25, 0x96	; 150
 5ba:	bb 27       	eor	r27, r27
 5bc:	93 95       	inc	r25
 5be:	f6 95       	lsr	r31
 5c0:	87 95       	ror	r24
 5c2:	77 95       	ror	r23
 5c4:	67 95       	ror	r22
 5c6:	b7 95       	ror	r27
 5c8:	f1 11       	cpse	r31, r1
 5ca:	f8 cf       	rjmp	.-16     	; 0x5bc <__floatsisf+0x1c>
 5cc:	fa f4       	brpl	.+62     	; 0x60c <__floatsisf+0x6c>
 5ce:	bb 0f       	add	r27, r27
 5d0:	11 f4       	brne	.+4      	; 0x5d6 <__floatsisf+0x36>
 5d2:	60 ff       	sbrs	r22, 0
 5d4:	1b c0       	rjmp	.+54     	; 0x60c <__floatsisf+0x6c>
 5d6:	6f 5f       	subi	r22, 0xFF	; 255
 5d8:	7f 4f       	sbci	r23, 0xFF	; 255
 5da:	8f 4f       	sbci	r24, 0xFF	; 255
 5dc:	9f 4f       	sbci	r25, 0xFF	; 255
 5de:	16 c0       	rjmp	.+44     	; 0x60c <__floatsisf+0x6c>
 5e0:	88 23       	and	r24, r24
 5e2:	11 f0       	breq	.+4      	; 0x5e8 <__floatsisf+0x48>
 5e4:	96 e9       	ldi	r25, 0x96	; 150
 5e6:	11 c0       	rjmp	.+34     	; 0x60a <__floatsisf+0x6a>
 5e8:	77 23       	and	r23, r23
 5ea:	21 f0       	breq	.+8      	; 0x5f4 <__floatsisf+0x54>
 5ec:	9e e8       	ldi	r25, 0x8E	; 142
 5ee:	87 2f       	mov	r24, r23
 5f0:	76 2f       	mov	r23, r22
 5f2:	05 c0       	rjmp	.+10     	; 0x5fe <__floatsisf+0x5e>
 5f4:	66 23       	and	r22, r22
 5f6:	71 f0       	breq	.+28     	; 0x614 <__floatsisf+0x74>
 5f8:	96 e8       	ldi	r25, 0x86	; 134
 5fa:	86 2f       	mov	r24, r22
 5fc:	70 e0       	ldi	r23, 0x00	; 0
 5fe:	60 e0       	ldi	r22, 0x00	; 0
 600:	2a f0       	brmi	.+10     	; 0x60c <__floatsisf+0x6c>
 602:	9a 95       	dec	r25
 604:	66 0f       	add	r22, r22
 606:	77 1f       	adc	r23, r23
 608:	88 1f       	adc	r24, r24
 60a:	da f7       	brpl	.-10     	; 0x602 <__floatsisf+0x62>
 60c:	88 0f       	add	r24, r24
 60e:	96 95       	lsr	r25
 610:	87 95       	ror	r24
 612:	97 f9       	bld	r25, 7
 614:	08 95       	ret

00000616 <__fp_inf>:
 616:	97 f9       	bld	r25, 7
 618:	9f 67       	ori	r25, 0x7F	; 127
 61a:	80 e8       	ldi	r24, 0x80	; 128
 61c:	70 e0       	ldi	r23, 0x00	; 0
 61e:	60 e0       	ldi	r22, 0x00	; 0
 620:	08 95       	ret

00000622 <__fp_nan>:
 622:	9f ef       	ldi	r25, 0xFF	; 255
 624:	80 ec       	ldi	r24, 0xC0	; 192
 626:	08 95       	ret

00000628 <__fp_pscA>:
 628:	00 24       	eor	r0, r0
 62a:	0a 94       	dec	r0
 62c:	16 16       	cp	r1, r22
 62e:	17 06       	cpc	r1, r23
 630:	18 06       	cpc	r1, r24
 632:	09 06       	cpc	r0, r25
 634:	08 95       	ret

00000636 <__fp_pscB>:
 636:	00 24       	eor	r0, r0
 638:	0a 94       	dec	r0
 63a:	12 16       	cp	r1, r18
 63c:	13 06       	cpc	r1, r19
 63e:	14 06       	cpc	r1, r20
 640:	05 06       	cpc	r0, r21
 642:	08 95       	ret

00000644 <__fp_round>:
 644:	09 2e       	mov	r0, r25
 646:	03 94       	inc	r0
 648:	00 0c       	add	r0, r0
 64a:	11 f4       	brne	.+4      	; 0x650 <__fp_round+0xc>
 64c:	88 23       	and	r24, r24
 64e:	52 f0       	brmi	.+20     	; 0x664 <__fp_round+0x20>
 650:	bb 0f       	add	r27, r27
 652:	40 f4       	brcc	.+16     	; 0x664 <__fp_round+0x20>
 654:	bf 2b       	or	r27, r31
 656:	11 f4       	brne	.+4      	; 0x65c <__fp_round+0x18>
 658:	60 ff       	sbrs	r22, 0
 65a:	04 c0       	rjmp	.+8      	; 0x664 <__fp_round+0x20>
 65c:	6f 5f       	subi	r22, 0xFF	; 255
 65e:	7f 4f       	sbci	r23, 0xFF	; 255
 660:	8f 4f       	sbci	r24, 0xFF	; 255
 662:	9f 4f       	sbci	r25, 0xFF	; 255
 664:	08 95       	ret

00000666 <__fp_split3>:
 666:	57 fd       	sbrc	r21, 7
 668:	90 58       	subi	r25, 0x80	; 128
 66a:	44 0f       	add	r20, r20
 66c:	55 1f       	adc	r21, r21
 66e:	59 f0       	breq	.+22     	; 0x686 <__fp_splitA+0x10>
 670:	5f 3f       	cpi	r21, 0xFF	; 255
 672:	71 f0       	breq	.+28     	; 0x690 <__fp_splitA+0x1a>
 674:	47 95       	ror	r20

00000676 <__fp_splitA>:
 676:	88 0f       	add	r24, r24
 678:	97 fb       	bst	r25, 7
 67a:	99 1f       	adc	r25, r25
 67c:	61 f0       	breq	.+24     	; 0x696 <__fp_splitA+0x20>
 67e:	9f 3f       	cpi	r25, 0xFF	; 255
 680:	79 f0       	breq	.+30     	; 0x6a0 <__fp_splitA+0x2a>
 682:	87 95       	ror	r24
 684:	08 95       	ret
 686:	12 16       	cp	r1, r18
 688:	13 06       	cpc	r1, r19
 68a:	14 06       	cpc	r1, r20
 68c:	55 1f       	adc	r21, r21
 68e:	f2 cf       	rjmp	.-28     	; 0x674 <__fp_split3+0xe>
 690:	46 95       	lsr	r20
 692:	f1 df       	rcall	.-30     	; 0x676 <__fp_splitA>
 694:	08 c0       	rjmp	.+16     	; 0x6a6 <__fp_splitA+0x30>
 696:	16 16       	cp	r1, r22
 698:	17 06       	cpc	r1, r23
 69a:	18 06       	cpc	r1, r24
 69c:	99 1f       	adc	r25, r25
 69e:	f1 cf       	rjmp	.-30     	; 0x682 <__fp_splitA+0xc>
 6a0:	86 95       	lsr	r24
 6a2:	71 05       	cpc	r23, r1
 6a4:	61 05       	cpc	r22, r1
 6a6:	08 94       	sec
 6a8:	08 95       	ret

000006aa <__fp_zero>:
 6aa:	e8 94       	clt

000006ac <__fp_szero>:
 6ac:	bb 27       	eor	r27, r27
 6ae:	66 27       	eor	r22, r22
 6b0:	77 27       	eor	r23, r23
 6b2:	cb 01       	movw	r24, r22
 6b4:	97 f9       	bld	r25, 7
 6b6:	08 95       	ret

000006b8 <vfprintf>:
 6b8:	ab e0       	ldi	r26, 0x0B	; 11
 6ba:	b0 e0       	ldi	r27, 0x00	; 0
 6bc:	e1 e6       	ldi	r30, 0x61	; 97
 6be:	f3 e0       	ldi	r31, 0x03	; 3
 6c0:	69 c2       	rjmp	.+1234   	; 0xb94 <__prologue_saves__>
 6c2:	3c 01       	movw	r6, r24
 6c4:	2b 01       	movw	r4, r22
 6c6:	5a 01       	movw	r10, r20
 6c8:	fc 01       	movw	r30, r24
 6ca:	17 82       	std	Z+7, r1	; 0x07
 6cc:	16 82       	std	Z+6, r1	; 0x06
 6ce:	83 81       	ldd	r24, Z+3	; 0x03
 6d0:	81 fd       	sbrc	r24, 1
 6d2:	03 c0       	rjmp	.+6      	; 0x6da <vfprintf+0x22>
 6d4:	6f ef       	ldi	r22, 0xFF	; 255
 6d6:	7f ef       	ldi	r23, 0xFF	; 255
 6d8:	b9 c1       	rjmp	.+882    	; 0xa4c <vfprintf+0x394>
 6da:	9a e0       	ldi	r25, 0x0A	; 10
 6dc:	89 2e       	mov	r8, r25
 6de:	1e 01       	movw	r2, r28
 6e0:	08 94       	sec
 6e2:	21 1c       	adc	r2, r1
 6e4:	31 1c       	adc	r3, r1
 6e6:	f3 01       	movw	r30, r6
 6e8:	23 81       	ldd	r18, Z+3	; 0x03
 6ea:	f2 01       	movw	r30, r4
 6ec:	23 fd       	sbrc	r18, 3
 6ee:	85 91       	lpm	r24, Z+
 6f0:	23 ff       	sbrs	r18, 3
 6f2:	81 91       	ld	r24, Z+
 6f4:	2f 01       	movw	r4, r30
 6f6:	88 23       	and	r24, r24
 6f8:	09 f4       	brne	.+2      	; 0x6fc <vfprintf+0x44>
 6fa:	a5 c1       	rjmp	.+842    	; 0xa46 <vfprintf+0x38e>
 6fc:	85 32       	cpi	r24, 0x25	; 37
 6fe:	39 f4       	brne	.+14     	; 0x70e <vfprintf+0x56>
 700:	23 fd       	sbrc	r18, 3
 702:	85 91       	lpm	r24, Z+
 704:	23 ff       	sbrs	r18, 3
 706:	81 91       	ld	r24, Z+
 708:	2f 01       	movw	r4, r30
 70a:	85 32       	cpi	r24, 0x25	; 37
 70c:	21 f4       	brne	.+8      	; 0x716 <vfprintf+0x5e>
 70e:	90 e0       	ldi	r25, 0x00	; 0
 710:	b3 01       	movw	r22, r6
 712:	b6 d1       	rcall	.+876    	; 0xa80 <fputc>
 714:	e8 cf       	rjmp	.-48     	; 0x6e6 <vfprintf+0x2e>
 716:	98 2f       	mov	r25, r24
 718:	ff 24       	eor	r15, r15
 71a:	ee 24       	eor	r14, r14
 71c:	99 24       	eor	r9, r9
 71e:	ff e1       	ldi	r31, 0x1F	; 31
 720:	ff 15       	cp	r31, r15
 722:	d0 f0       	brcs	.+52     	; 0x758 <vfprintf+0xa0>
 724:	9b 32       	cpi	r25, 0x2B	; 43
 726:	69 f0       	breq	.+26     	; 0x742 <vfprintf+0x8a>
 728:	9c 32       	cpi	r25, 0x2C	; 44
 72a:	28 f4       	brcc	.+10     	; 0x736 <vfprintf+0x7e>
 72c:	90 32       	cpi	r25, 0x20	; 32
 72e:	59 f0       	breq	.+22     	; 0x746 <vfprintf+0x8e>
 730:	93 32       	cpi	r25, 0x23	; 35
 732:	91 f4       	brne	.+36     	; 0x758 <vfprintf+0xa0>
 734:	0e c0       	rjmp	.+28     	; 0x752 <vfprintf+0x9a>
 736:	9d 32       	cpi	r25, 0x2D	; 45
 738:	49 f0       	breq	.+18     	; 0x74c <vfprintf+0x94>
 73a:	90 33       	cpi	r25, 0x30	; 48
 73c:	69 f4       	brne	.+26     	; 0x758 <vfprintf+0xa0>
 73e:	41 e0       	ldi	r20, 0x01	; 1
 740:	24 c0       	rjmp	.+72     	; 0x78a <vfprintf+0xd2>
 742:	52 e0       	ldi	r21, 0x02	; 2
 744:	f5 2a       	or	r15, r21
 746:	84 e0       	ldi	r24, 0x04	; 4
 748:	f8 2a       	or	r15, r24
 74a:	28 c0       	rjmp	.+80     	; 0x79c <vfprintf+0xe4>
 74c:	98 e0       	ldi	r25, 0x08	; 8
 74e:	f9 2a       	or	r15, r25
 750:	25 c0       	rjmp	.+74     	; 0x79c <vfprintf+0xe4>
 752:	e0 e1       	ldi	r30, 0x10	; 16
 754:	fe 2a       	or	r15, r30
 756:	22 c0       	rjmp	.+68     	; 0x79c <vfprintf+0xe4>
 758:	f7 fc       	sbrc	r15, 7
 75a:	29 c0       	rjmp	.+82     	; 0x7ae <vfprintf+0xf6>
 75c:	89 2f       	mov	r24, r25
 75e:	80 53       	subi	r24, 0x30	; 48
 760:	8a 30       	cpi	r24, 0x0A	; 10
 762:	70 f4       	brcc	.+28     	; 0x780 <vfprintf+0xc8>
 764:	f6 fe       	sbrs	r15, 6
 766:	05 c0       	rjmp	.+10     	; 0x772 <vfprintf+0xba>
 768:	98 9c       	mul	r9, r8
 76a:	90 2c       	mov	r9, r0
 76c:	11 24       	eor	r1, r1
 76e:	98 0e       	add	r9, r24
 770:	15 c0       	rjmp	.+42     	; 0x79c <vfprintf+0xe4>
 772:	e8 9c       	mul	r14, r8
 774:	e0 2c       	mov	r14, r0
 776:	11 24       	eor	r1, r1
 778:	e8 0e       	add	r14, r24
 77a:	f0 e2       	ldi	r31, 0x20	; 32
 77c:	ff 2a       	or	r15, r31
 77e:	0e c0       	rjmp	.+28     	; 0x79c <vfprintf+0xe4>
 780:	9e 32       	cpi	r25, 0x2E	; 46
 782:	29 f4       	brne	.+10     	; 0x78e <vfprintf+0xd6>
 784:	f6 fc       	sbrc	r15, 6
 786:	5f c1       	rjmp	.+702    	; 0xa46 <vfprintf+0x38e>
 788:	40 e4       	ldi	r20, 0x40	; 64
 78a:	f4 2a       	or	r15, r20
 78c:	07 c0       	rjmp	.+14     	; 0x79c <vfprintf+0xe4>
 78e:	9c 36       	cpi	r25, 0x6C	; 108
 790:	19 f4       	brne	.+6      	; 0x798 <vfprintf+0xe0>
 792:	50 e8       	ldi	r21, 0x80	; 128
 794:	f5 2a       	or	r15, r21
 796:	02 c0       	rjmp	.+4      	; 0x79c <vfprintf+0xe4>
 798:	98 36       	cpi	r25, 0x68	; 104
 79a:	49 f4       	brne	.+18     	; 0x7ae <vfprintf+0xf6>
 79c:	f2 01       	movw	r30, r4
 79e:	23 fd       	sbrc	r18, 3
 7a0:	95 91       	lpm	r25, Z+
 7a2:	23 ff       	sbrs	r18, 3
 7a4:	91 91       	ld	r25, Z+
 7a6:	2f 01       	movw	r4, r30
 7a8:	99 23       	and	r25, r25
 7aa:	09 f0       	breq	.+2      	; 0x7ae <vfprintf+0xf6>
 7ac:	b8 cf       	rjmp	.-144    	; 0x71e <vfprintf+0x66>
 7ae:	89 2f       	mov	r24, r25
 7b0:	85 54       	subi	r24, 0x45	; 69
 7b2:	83 30       	cpi	r24, 0x03	; 3
 7b4:	18 f0       	brcs	.+6      	; 0x7bc <vfprintf+0x104>
 7b6:	80 52       	subi	r24, 0x20	; 32
 7b8:	83 30       	cpi	r24, 0x03	; 3
 7ba:	38 f4       	brcc	.+14     	; 0x7ca <vfprintf+0x112>
 7bc:	44 e0       	ldi	r20, 0x04	; 4
 7be:	50 e0       	ldi	r21, 0x00	; 0
 7c0:	a4 0e       	add	r10, r20
 7c2:	b5 1e       	adc	r11, r21
 7c4:	5f e3       	ldi	r21, 0x3F	; 63
 7c6:	59 83       	std	Y+1, r21	; 0x01
 7c8:	0f c0       	rjmp	.+30     	; 0x7e8 <vfprintf+0x130>
 7ca:	93 36       	cpi	r25, 0x63	; 99
 7cc:	31 f0       	breq	.+12     	; 0x7da <vfprintf+0x122>
 7ce:	93 37       	cpi	r25, 0x73	; 115
 7d0:	79 f0       	breq	.+30     	; 0x7f0 <vfprintf+0x138>
 7d2:	93 35       	cpi	r25, 0x53	; 83
 7d4:	09 f0       	breq	.+2      	; 0x7d8 <vfprintf+0x120>
 7d6:	52 c0       	rjmp	.+164    	; 0x87c <vfprintf+0x1c4>
 7d8:	1f c0       	rjmp	.+62     	; 0x818 <vfprintf+0x160>
 7da:	f5 01       	movw	r30, r10
 7dc:	80 81       	ld	r24, Z
 7de:	89 83       	std	Y+1, r24	; 0x01
 7e0:	42 e0       	ldi	r20, 0x02	; 2
 7e2:	50 e0       	ldi	r21, 0x00	; 0
 7e4:	a4 0e       	add	r10, r20
 7e6:	b5 1e       	adc	r11, r21
 7e8:	61 01       	movw	r12, r2
 7ea:	01 e0       	ldi	r16, 0x01	; 1
 7ec:	10 e0       	ldi	r17, 0x00	; 0
 7ee:	11 c0       	rjmp	.+34     	; 0x812 <vfprintf+0x15a>
 7f0:	f5 01       	movw	r30, r10
 7f2:	c0 80       	ld	r12, Z
 7f4:	d1 80       	ldd	r13, Z+1	; 0x01
 7f6:	f6 fc       	sbrc	r15, 6
 7f8:	03 c0       	rjmp	.+6      	; 0x800 <vfprintf+0x148>
 7fa:	6f ef       	ldi	r22, 0xFF	; 255
 7fc:	7f ef       	ldi	r23, 0xFF	; 255
 7fe:	02 c0       	rjmp	.+4      	; 0x804 <vfprintf+0x14c>
 800:	69 2d       	mov	r22, r9
 802:	70 e0       	ldi	r23, 0x00	; 0
 804:	42 e0       	ldi	r20, 0x02	; 2
 806:	50 e0       	ldi	r21, 0x00	; 0
 808:	a4 0e       	add	r10, r20
 80a:	b5 1e       	adc	r11, r21
 80c:	c6 01       	movw	r24, r12
 80e:	2d d1       	rcall	.+602    	; 0xa6a <strnlen>
 810:	8c 01       	movw	r16, r24
 812:	5f e7       	ldi	r21, 0x7F	; 127
 814:	f5 22       	and	r15, r21
 816:	13 c0       	rjmp	.+38     	; 0x83e <vfprintf+0x186>
 818:	f5 01       	movw	r30, r10
 81a:	c0 80       	ld	r12, Z
 81c:	d1 80       	ldd	r13, Z+1	; 0x01
 81e:	f6 fc       	sbrc	r15, 6
 820:	03 c0       	rjmp	.+6      	; 0x828 <vfprintf+0x170>
 822:	6f ef       	ldi	r22, 0xFF	; 255
 824:	7f ef       	ldi	r23, 0xFF	; 255
 826:	02 c0       	rjmp	.+4      	; 0x82c <vfprintf+0x174>
 828:	69 2d       	mov	r22, r9
 82a:	70 e0       	ldi	r23, 0x00	; 0
 82c:	42 e0       	ldi	r20, 0x02	; 2
 82e:	50 e0       	ldi	r21, 0x00	; 0
 830:	a4 0e       	add	r10, r20
 832:	b5 1e       	adc	r11, r21
 834:	c6 01       	movw	r24, r12
 836:	0e d1       	rcall	.+540    	; 0xa54 <strnlen_P>
 838:	8c 01       	movw	r16, r24
 83a:	50 e8       	ldi	r21, 0x80	; 128
 83c:	f5 2a       	or	r15, r21
 83e:	f3 fe       	sbrs	r15, 3
 840:	06 c0       	rjmp	.+12     	; 0x84e <vfprintf+0x196>
 842:	18 c0       	rjmp	.+48     	; 0x874 <vfprintf+0x1bc>
 844:	80 e2       	ldi	r24, 0x20	; 32
 846:	90 e0       	ldi	r25, 0x00	; 0
 848:	b3 01       	movw	r22, r6
 84a:	1a d1       	rcall	.+564    	; 0xa80 <fputc>
 84c:	ea 94       	dec	r14
 84e:	8e 2d       	mov	r24, r14
 850:	90 e0       	ldi	r25, 0x00	; 0
 852:	08 17       	cp	r16, r24
 854:	19 07       	cpc	r17, r25
 856:	b0 f3       	brcs	.-20     	; 0x844 <vfprintf+0x18c>
 858:	0d c0       	rjmp	.+26     	; 0x874 <vfprintf+0x1bc>
 85a:	f6 01       	movw	r30, r12
 85c:	f7 fc       	sbrc	r15, 7
 85e:	85 91       	lpm	r24, Z+
 860:	f7 fe       	sbrs	r15, 7
 862:	81 91       	ld	r24, Z+
 864:	6f 01       	movw	r12, r30
 866:	90 e0       	ldi	r25, 0x00	; 0
 868:	b3 01       	movw	r22, r6
 86a:	0a d1       	rcall	.+532    	; 0xa80 <fputc>
 86c:	e1 10       	cpse	r14, r1
 86e:	ea 94       	dec	r14
 870:	01 50       	subi	r16, 0x01	; 1
 872:	10 40       	sbci	r17, 0x00	; 0
 874:	01 15       	cp	r16, r1
 876:	11 05       	cpc	r17, r1
 878:	81 f7       	brne	.-32     	; 0x85a <vfprintf+0x1a2>
 87a:	e2 c0       	rjmp	.+452    	; 0xa40 <vfprintf+0x388>
 87c:	94 36       	cpi	r25, 0x64	; 100
 87e:	11 f0       	breq	.+4      	; 0x884 <vfprintf+0x1cc>
 880:	99 36       	cpi	r25, 0x69	; 105
 882:	61 f5       	brne	.+88     	; 0x8dc <vfprintf+0x224>
 884:	f7 fe       	sbrs	r15, 7
 886:	08 c0       	rjmp	.+16     	; 0x898 <vfprintf+0x1e0>
 888:	f5 01       	movw	r30, r10
 88a:	20 81       	ld	r18, Z
 88c:	31 81       	ldd	r19, Z+1	; 0x01
 88e:	42 81       	ldd	r20, Z+2	; 0x02
 890:	53 81       	ldd	r21, Z+3	; 0x03
 892:	84 e0       	ldi	r24, 0x04	; 4
 894:	90 e0       	ldi	r25, 0x00	; 0
 896:	0a c0       	rjmp	.+20     	; 0x8ac <vfprintf+0x1f4>
 898:	f5 01       	movw	r30, r10
 89a:	80 81       	ld	r24, Z
 89c:	91 81       	ldd	r25, Z+1	; 0x01
 89e:	9c 01       	movw	r18, r24
 8a0:	44 27       	eor	r20, r20
 8a2:	37 fd       	sbrc	r19, 7
 8a4:	40 95       	com	r20
 8a6:	54 2f       	mov	r21, r20
 8a8:	82 e0       	ldi	r24, 0x02	; 2
 8aa:	90 e0       	ldi	r25, 0x00	; 0
 8ac:	a8 0e       	add	r10, r24
 8ae:	b9 1e       	adc	r11, r25
 8b0:	9f e6       	ldi	r25, 0x6F	; 111
 8b2:	f9 22       	and	r15, r25
 8b4:	57 ff       	sbrs	r21, 7
 8b6:	09 c0       	rjmp	.+18     	; 0x8ca <vfprintf+0x212>
 8b8:	50 95       	com	r21
 8ba:	40 95       	com	r20
 8bc:	30 95       	com	r19
 8be:	21 95       	neg	r18
 8c0:	3f 4f       	sbci	r19, 0xFF	; 255
 8c2:	4f 4f       	sbci	r20, 0xFF	; 255
 8c4:	5f 4f       	sbci	r21, 0xFF	; 255
 8c6:	e0 e8       	ldi	r30, 0x80	; 128
 8c8:	fe 2a       	or	r15, r30
 8ca:	ca 01       	movw	r24, r20
 8cc:	b9 01       	movw	r22, r18
 8ce:	a1 01       	movw	r20, r2
 8d0:	2a e0       	ldi	r18, 0x0A	; 10
 8d2:	30 e0       	ldi	r19, 0x00	; 0
 8d4:	01 d1       	rcall	.+514    	; 0xad8 <__ultoa_invert>
 8d6:	d8 2e       	mov	r13, r24
 8d8:	d2 18       	sub	r13, r2
 8da:	3f c0       	rjmp	.+126    	; 0x95a <vfprintf+0x2a2>
 8dc:	95 37       	cpi	r25, 0x75	; 117
 8de:	29 f4       	brne	.+10     	; 0x8ea <vfprintf+0x232>
 8e0:	1f 2d       	mov	r17, r15
 8e2:	1f 7e       	andi	r17, 0xEF	; 239
 8e4:	2a e0       	ldi	r18, 0x0A	; 10
 8e6:	30 e0       	ldi	r19, 0x00	; 0
 8e8:	1d c0       	rjmp	.+58     	; 0x924 <vfprintf+0x26c>
 8ea:	1f 2d       	mov	r17, r15
 8ec:	19 7f       	andi	r17, 0xF9	; 249
 8ee:	9f 36       	cpi	r25, 0x6F	; 111
 8f0:	61 f0       	breq	.+24     	; 0x90a <vfprintf+0x252>
 8f2:	90 37       	cpi	r25, 0x70	; 112
 8f4:	20 f4       	brcc	.+8      	; 0x8fe <vfprintf+0x246>
 8f6:	98 35       	cpi	r25, 0x58	; 88
 8f8:	09 f0       	breq	.+2      	; 0x8fc <vfprintf+0x244>
 8fa:	a5 c0       	rjmp	.+330    	; 0xa46 <vfprintf+0x38e>
 8fc:	0f c0       	rjmp	.+30     	; 0x91c <vfprintf+0x264>
 8fe:	90 37       	cpi	r25, 0x70	; 112
 900:	39 f0       	breq	.+14     	; 0x910 <vfprintf+0x258>
 902:	98 37       	cpi	r25, 0x78	; 120
 904:	09 f0       	breq	.+2      	; 0x908 <vfprintf+0x250>
 906:	9f c0       	rjmp	.+318    	; 0xa46 <vfprintf+0x38e>
 908:	04 c0       	rjmp	.+8      	; 0x912 <vfprintf+0x25a>
 90a:	28 e0       	ldi	r18, 0x08	; 8
 90c:	30 e0       	ldi	r19, 0x00	; 0
 90e:	0a c0       	rjmp	.+20     	; 0x924 <vfprintf+0x26c>
 910:	10 61       	ori	r17, 0x10	; 16
 912:	14 fd       	sbrc	r17, 4
 914:	14 60       	ori	r17, 0x04	; 4
 916:	20 e1       	ldi	r18, 0x10	; 16
 918:	30 e0       	ldi	r19, 0x00	; 0
 91a:	04 c0       	rjmp	.+8      	; 0x924 <vfprintf+0x26c>
 91c:	14 fd       	sbrc	r17, 4
 91e:	16 60       	ori	r17, 0x06	; 6
 920:	20 e1       	ldi	r18, 0x10	; 16
 922:	32 e0       	ldi	r19, 0x02	; 2
 924:	17 ff       	sbrs	r17, 7
 926:	08 c0       	rjmp	.+16     	; 0x938 <vfprintf+0x280>
 928:	f5 01       	movw	r30, r10
 92a:	60 81       	ld	r22, Z
 92c:	71 81       	ldd	r23, Z+1	; 0x01
 92e:	82 81       	ldd	r24, Z+2	; 0x02
 930:	93 81       	ldd	r25, Z+3	; 0x03
 932:	44 e0       	ldi	r20, 0x04	; 4
 934:	50 e0       	ldi	r21, 0x00	; 0
 936:	08 c0       	rjmp	.+16     	; 0x948 <vfprintf+0x290>
 938:	f5 01       	movw	r30, r10
 93a:	80 81       	ld	r24, Z
 93c:	91 81       	ldd	r25, Z+1	; 0x01
 93e:	bc 01       	movw	r22, r24
 940:	80 e0       	ldi	r24, 0x00	; 0
 942:	90 e0       	ldi	r25, 0x00	; 0
 944:	42 e0       	ldi	r20, 0x02	; 2
 946:	50 e0       	ldi	r21, 0x00	; 0
 948:	a4 0e       	add	r10, r20
 94a:	b5 1e       	adc	r11, r21
 94c:	a1 01       	movw	r20, r2
 94e:	c4 d0       	rcall	.+392    	; 0xad8 <__ultoa_invert>
 950:	d8 2e       	mov	r13, r24
 952:	d2 18       	sub	r13, r2
 954:	8f e7       	ldi	r24, 0x7F	; 127
 956:	f8 2e       	mov	r15, r24
 958:	f1 22       	and	r15, r17
 95a:	f6 fe       	sbrs	r15, 6
 95c:	0b c0       	rjmp	.+22     	; 0x974 <vfprintf+0x2bc>
 95e:	5e ef       	ldi	r21, 0xFE	; 254
 960:	f5 22       	and	r15, r21
 962:	d9 14       	cp	r13, r9
 964:	38 f4       	brcc	.+14     	; 0x974 <vfprintf+0x2bc>
 966:	f4 fe       	sbrs	r15, 4
 968:	07 c0       	rjmp	.+14     	; 0x978 <vfprintf+0x2c0>
 96a:	f2 fc       	sbrc	r15, 2
 96c:	05 c0       	rjmp	.+10     	; 0x978 <vfprintf+0x2c0>
 96e:	8f ee       	ldi	r24, 0xEF	; 239
 970:	f8 22       	and	r15, r24
 972:	02 c0       	rjmp	.+4      	; 0x978 <vfprintf+0x2c0>
 974:	1d 2d       	mov	r17, r13
 976:	01 c0       	rjmp	.+2      	; 0x97a <vfprintf+0x2c2>
 978:	19 2d       	mov	r17, r9
 97a:	f4 fe       	sbrs	r15, 4
 97c:	0d c0       	rjmp	.+26     	; 0x998 <vfprintf+0x2e0>
 97e:	fe 01       	movw	r30, r28
 980:	ed 0d       	add	r30, r13
 982:	f1 1d       	adc	r31, r1
 984:	80 81       	ld	r24, Z
 986:	80 33       	cpi	r24, 0x30	; 48
 988:	19 f4       	brne	.+6      	; 0x990 <vfprintf+0x2d8>
 98a:	99 ee       	ldi	r25, 0xE9	; 233
 98c:	f9 22       	and	r15, r25
 98e:	08 c0       	rjmp	.+16     	; 0x9a0 <vfprintf+0x2e8>
 990:	1f 5f       	subi	r17, 0xFF	; 255
 992:	f2 fe       	sbrs	r15, 2
 994:	05 c0       	rjmp	.+10     	; 0x9a0 <vfprintf+0x2e8>
 996:	03 c0       	rjmp	.+6      	; 0x99e <vfprintf+0x2e6>
 998:	8f 2d       	mov	r24, r15
 99a:	86 78       	andi	r24, 0x86	; 134
 99c:	09 f0       	breq	.+2      	; 0x9a0 <vfprintf+0x2e8>
 99e:	1f 5f       	subi	r17, 0xFF	; 255
 9a0:	0f 2d       	mov	r16, r15
 9a2:	f3 fc       	sbrc	r15, 3
 9a4:	13 c0       	rjmp	.+38     	; 0x9cc <vfprintf+0x314>
 9a6:	f0 fe       	sbrs	r15, 0
 9a8:	0e c0       	rjmp	.+28     	; 0x9c6 <vfprintf+0x30e>
 9aa:	1e 15       	cp	r17, r14
 9ac:	10 f0       	brcs	.+4      	; 0x9b2 <vfprintf+0x2fa>
 9ae:	9d 2c       	mov	r9, r13
 9b0:	0a c0       	rjmp	.+20     	; 0x9c6 <vfprintf+0x30e>
 9b2:	9d 2c       	mov	r9, r13
 9b4:	9e 0c       	add	r9, r14
 9b6:	91 1a       	sub	r9, r17
 9b8:	1e 2d       	mov	r17, r14
 9ba:	05 c0       	rjmp	.+10     	; 0x9c6 <vfprintf+0x30e>
 9bc:	80 e2       	ldi	r24, 0x20	; 32
 9be:	90 e0       	ldi	r25, 0x00	; 0
 9c0:	b3 01       	movw	r22, r6
 9c2:	5e d0       	rcall	.+188    	; 0xa80 <fputc>
 9c4:	1f 5f       	subi	r17, 0xFF	; 255
 9c6:	1e 15       	cp	r17, r14
 9c8:	c8 f3       	brcs	.-14     	; 0x9bc <vfprintf+0x304>
 9ca:	04 c0       	rjmp	.+8      	; 0x9d4 <vfprintf+0x31c>
 9cc:	1e 15       	cp	r17, r14
 9ce:	10 f4       	brcc	.+4      	; 0x9d4 <vfprintf+0x31c>
 9d0:	e1 1a       	sub	r14, r17
 9d2:	01 c0       	rjmp	.+2      	; 0x9d6 <vfprintf+0x31e>
 9d4:	ee 24       	eor	r14, r14
 9d6:	04 ff       	sbrs	r16, 4
 9d8:	0e c0       	rjmp	.+28     	; 0x9f6 <vfprintf+0x33e>
 9da:	80 e3       	ldi	r24, 0x30	; 48
 9dc:	90 e0       	ldi	r25, 0x00	; 0
 9de:	b3 01       	movw	r22, r6
 9e0:	4f d0       	rcall	.+158    	; 0xa80 <fputc>
 9e2:	02 ff       	sbrs	r16, 2
 9e4:	1b c0       	rjmp	.+54     	; 0xa1c <vfprintf+0x364>
 9e6:	01 fd       	sbrc	r16, 1
 9e8:	03 c0       	rjmp	.+6      	; 0x9f0 <vfprintf+0x338>
 9ea:	88 e7       	ldi	r24, 0x78	; 120
 9ec:	90 e0       	ldi	r25, 0x00	; 0
 9ee:	0e c0       	rjmp	.+28     	; 0xa0c <vfprintf+0x354>
 9f0:	88 e5       	ldi	r24, 0x58	; 88
 9f2:	90 e0       	ldi	r25, 0x00	; 0
 9f4:	0b c0       	rjmp	.+22     	; 0xa0c <vfprintf+0x354>
 9f6:	80 2f       	mov	r24, r16
 9f8:	86 78       	andi	r24, 0x86	; 134
 9fa:	81 f0       	breq	.+32     	; 0xa1c <vfprintf+0x364>
 9fc:	01 ff       	sbrs	r16, 1
 9fe:	02 c0       	rjmp	.+4      	; 0xa04 <vfprintf+0x34c>
 a00:	8b e2       	ldi	r24, 0x2B	; 43
 a02:	01 c0       	rjmp	.+2      	; 0xa06 <vfprintf+0x34e>
 a04:	80 e2       	ldi	r24, 0x20	; 32
 a06:	f7 fc       	sbrc	r15, 7
 a08:	8d e2       	ldi	r24, 0x2D	; 45
 a0a:	90 e0       	ldi	r25, 0x00	; 0
 a0c:	b3 01       	movw	r22, r6
 a0e:	38 d0       	rcall	.+112    	; 0xa80 <fputc>
 a10:	05 c0       	rjmp	.+10     	; 0xa1c <vfprintf+0x364>
 a12:	80 e3       	ldi	r24, 0x30	; 48
 a14:	90 e0       	ldi	r25, 0x00	; 0
 a16:	b3 01       	movw	r22, r6
 a18:	33 d0       	rcall	.+102    	; 0xa80 <fputc>
 a1a:	9a 94       	dec	r9
 a1c:	d9 14       	cp	r13, r9
 a1e:	c8 f3       	brcs	.-14     	; 0xa12 <vfprintf+0x35a>
 a20:	da 94       	dec	r13
 a22:	f1 01       	movw	r30, r2
 a24:	ed 0d       	add	r30, r13
 a26:	f1 1d       	adc	r31, r1
 a28:	80 81       	ld	r24, Z
 a2a:	90 e0       	ldi	r25, 0x00	; 0
 a2c:	b3 01       	movw	r22, r6
 a2e:	28 d0       	rcall	.+80     	; 0xa80 <fputc>
 a30:	dd 20       	and	r13, r13
 a32:	b1 f7       	brne	.-20     	; 0xa20 <vfprintf+0x368>
 a34:	05 c0       	rjmp	.+10     	; 0xa40 <vfprintf+0x388>
 a36:	80 e2       	ldi	r24, 0x20	; 32
 a38:	90 e0       	ldi	r25, 0x00	; 0
 a3a:	b3 01       	movw	r22, r6
 a3c:	21 d0       	rcall	.+66     	; 0xa80 <fputc>
 a3e:	ea 94       	dec	r14
 a40:	ee 20       	and	r14, r14
 a42:	c9 f7       	brne	.-14     	; 0xa36 <vfprintf+0x37e>
 a44:	50 ce       	rjmp	.-864    	; 0x6e6 <vfprintf+0x2e>
 a46:	f3 01       	movw	r30, r6
 a48:	66 81       	ldd	r22, Z+6	; 0x06
 a4a:	77 81       	ldd	r23, Z+7	; 0x07
 a4c:	cb 01       	movw	r24, r22
 a4e:	2b 96       	adiw	r28, 0x0b	; 11
 a50:	e2 e1       	ldi	r30, 0x12	; 18
 a52:	bc c0       	rjmp	.+376    	; 0xbcc <__epilogue_restores__>

00000a54 <strnlen_P>:
 a54:	fc 01       	movw	r30, r24
 a56:	05 90       	lpm	r0, Z+
 a58:	61 50       	subi	r22, 0x01	; 1
 a5a:	70 40       	sbci	r23, 0x00	; 0
 a5c:	01 10       	cpse	r0, r1
 a5e:	d8 f7       	brcc	.-10     	; 0xa56 <strnlen_P+0x2>
 a60:	80 95       	com	r24
 a62:	90 95       	com	r25
 a64:	8e 0f       	add	r24, r30
 a66:	9f 1f       	adc	r25, r31
 a68:	08 95       	ret

00000a6a <strnlen>:
 a6a:	fc 01       	movw	r30, r24
 a6c:	61 50       	subi	r22, 0x01	; 1
 a6e:	70 40       	sbci	r23, 0x00	; 0
 a70:	01 90       	ld	r0, Z+
 a72:	01 10       	cpse	r0, r1
 a74:	d8 f7       	brcc	.-10     	; 0xa6c <strnlen+0x2>
 a76:	80 95       	com	r24
 a78:	90 95       	com	r25
 a7a:	8e 0f       	add	r24, r30
 a7c:	9f 1f       	adc	r25, r31
 a7e:	08 95       	ret

00000a80 <fputc>:
 a80:	0f 93       	push	r16
 a82:	1f 93       	push	r17
 a84:	cf 93       	push	r28
 a86:	df 93       	push	r29
 a88:	8c 01       	movw	r16, r24
 a8a:	eb 01       	movw	r28, r22
 a8c:	8b 81       	ldd	r24, Y+3	; 0x03
 a8e:	81 ff       	sbrs	r24, 1
 a90:	1b c0       	rjmp	.+54     	; 0xac8 <fputc+0x48>
 a92:	82 ff       	sbrs	r24, 2
 a94:	0d c0       	rjmp	.+26     	; 0xab0 <fputc+0x30>
 a96:	2e 81       	ldd	r18, Y+6	; 0x06
 a98:	3f 81       	ldd	r19, Y+7	; 0x07
 a9a:	8c 81       	ldd	r24, Y+4	; 0x04
 a9c:	9d 81       	ldd	r25, Y+5	; 0x05
 a9e:	28 17       	cp	r18, r24
 aa0:	39 07       	cpc	r19, r25
 aa2:	64 f4       	brge	.+24     	; 0xabc <fputc+0x3c>
 aa4:	e8 81       	ld	r30, Y
 aa6:	f9 81       	ldd	r31, Y+1	; 0x01
 aa8:	01 93       	st	Z+, r16
 aaa:	f9 83       	std	Y+1, r31	; 0x01
 aac:	e8 83       	st	Y, r30
 aae:	06 c0       	rjmp	.+12     	; 0xabc <fputc+0x3c>
 ab0:	e8 85       	ldd	r30, Y+8	; 0x08
 ab2:	f9 85       	ldd	r31, Y+9	; 0x09
 ab4:	80 2f       	mov	r24, r16
 ab6:	09 95       	icall
 ab8:	89 2b       	or	r24, r25
 aba:	31 f4       	brne	.+12     	; 0xac8 <fputc+0x48>
 abc:	8e 81       	ldd	r24, Y+6	; 0x06
 abe:	9f 81       	ldd	r25, Y+7	; 0x07
 ac0:	01 96       	adiw	r24, 0x01	; 1
 ac2:	9f 83       	std	Y+7, r25	; 0x07
 ac4:	8e 83       	std	Y+6, r24	; 0x06
 ac6:	02 c0       	rjmp	.+4      	; 0xacc <fputc+0x4c>
 ac8:	0f ef       	ldi	r16, 0xFF	; 255
 aca:	1f ef       	ldi	r17, 0xFF	; 255
 acc:	c8 01       	movw	r24, r16
 ace:	df 91       	pop	r29
 ad0:	cf 91       	pop	r28
 ad2:	1f 91       	pop	r17
 ad4:	0f 91       	pop	r16
 ad6:	08 95       	ret

00000ad8 <__ultoa_invert>:
 ad8:	fa 01       	movw	r30, r20
 ada:	aa 27       	eor	r26, r26
 adc:	28 30       	cpi	r18, 0x08	; 8
 ade:	51 f1       	breq	.+84     	; 0xb34 <__ultoa_invert+0x5c>
 ae0:	20 31       	cpi	r18, 0x10	; 16
 ae2:	81 f1       	breq	.+96     	; 0xb44 <__ultoa_invert+0x6c>
 ae4:	e8 94       	clt
 ae6:	6f 93       	push	r22
 ae8:	6e 7f       	andi	r22, 0xFE	; 254
 aea:	6e 5f       	subi	r22, 0xFE	; 254
 aec:	7f 4f       	sbci	r23, 0xFF	; 255
 aee:	8f 4f       	sbci	r24, 0xFF	; 255
 af0:	9f 4f       	sbci	r25, 0xFF	; 255
 af2:	af 4f       	sbci	r26, 0xFF	; 255
 af4:	b1 e0       	ldi	r27, 0x01	; 1
 af6:	3e d0       	rcall	.+124    	; 0xb74 <__ultoa_invert+0x9c>
 af8:	b4 e0       	ldi	r27, 0x04	; 4
 afa:	3c d0       	rcall	.+120    	; 0xb74 <__ultoa_invert+0x9c>
 afc:	67 0f       	add	r22, r23
 afe:	78 1f       	adc	r23, r24
 b00:	89 1f       	adc	r24, r25
 b02:	9a 1f       	adc	r25, r26
 b04:	a1 1d       	adc	r26, r1
 b06:	68 0f       	add	r22, r24
 b08:	79 1f       	adc	r23, r25
 b0a:	8a 1f       	adc	r24, r26
 b0c:	91 1d       	adc	r25, r1
 b0e:	a1 1d       	adc	r26, r1
 b10:	6a 0f       	add	r22, r26
 b12:	71 1d       	adc	r23, r1
 b14:	81 1d       	adc	r24, r1
 b16:	91 1d       	adc	r25, r1
 b18:	a1 1d       	adc	r26, r1
 b1a:	20 d0       	rcall	.+64     	; 0xb5c <__ultoa_invert+0x84>
 b1c:	09 f4       	brne	.+2      	; 0xb20 <__ultoa_invert+0x48>
 b1e:	68 94       	set
 b20:	3f 91       	pop	r19
 b22:	2a e0       	ldi	r18, 0x0A	; 10
 b24:	26 9f       	mul	r18, r22
 b26:	11 24       	eor	r1, r1
 b28:	30 19       	sub	r19, r0
 b2a:	30 5d       	subi	r19, 0xD0	; 208
 b2c:	31 93       	st	Z+, r19
 b2e:	de f6       	brtc	.-74     	; 0xae6 <__ultoa_invert+0xe>
 b30:	cf 01       	movw	r24, r30
 b32:	08 95       	ret
 b34:	46 2f       	mov	r20, r22
 b36:	47 70       	andi	r20, 0x07	; 7
 b38:	40 5d       	subi	r20, 0xD0	; 208
 b3a:	41 93       	st	Z+, r20
 b3c:	b3 e0       	ldi	r27, 0x03	; 3
 b3e:	0f d0       	rcall	.+30     	; 0xb5e <__ultoa_invert+0x86>
 b40:	c9 f7       	brne	.-14     	; 0xb34 <__ultoa_invert+0x5c>
 b42:	f6 cf       	rjmp	.-20     	; 0xb30 <__ultoa_invert+0x58>
 b44:	46 2f       	mov	r20, r22
 b46:	4f 70       	andi	r20, 0x0F	; 15
 b48:	40 5d       	subi	r20, 0xD0	; 208
 b4a:	4a 33       	cpi	r20, 0x3A	; 58
 b4c:	18 f0       	brcs	.+6      	; 0xb54 <__ultoa_invert+0x7c>
 b4e:	49 5d       	subi	r20, 0xD9	; 217
 b50:	31 fd       	sbrc	r19, 1
 b52:	40 52       	subi	r20, 0x20	; 32
 b54:	41 93       	st	Z+, r20
 b56:	02 d0       	rcall	.+4      	; 0xb5c <__ultoa_invert+0x84>
 b58:	a9 f7       	brne	.-22     	; 0xb44 <__ultoa_invert+0x6c>
 b5a:	ea cf       	rjmp	.-44     	; 0xb30 <__ultoa_invert+0x58>
 b5c:	b4 e0       	ldi	r27, 0x04	; 4
 b5e:	a6 95       	lsr	r26
 b60:	97 95       	ror	r25
 b62:	87 95       	ror	r24
 b64:	77 95       	ror	r23
 b66:	67 95       	ror	r22
 b68:	ba 95       	dec	r27
 b6a:	c9 f7       	brne	.-14     	; 0xb5e <__ultoa_invert+0x86>
 b6c:	00 97       	sbiw	r24, 0x00	; 0
 b6e:	61 05       	cpc	r22, r1
 b70:	71 05       	cpc	r23, r1
 b72:	08 95       	ret
 b74:	9b 01       	movw	r18, r22
 b76:	ac 01       	movw	r20, r24
 b78:	0a 2e       	mov	r0, r26
 b7a:	06 94       	lsr	r0
 b7c:	57 95       	ror	r21
 b7e:	47 95       	ror	r20
 b80:	37 95       	ror	r19
 b82:	27 95       	ror	r18
 b84:	ba 95       	dec	r27
 b86:	c9 f7       	brne	.-14     	; 0xb7a <__ultoa_invert+0xa2>
 b88:	62 0f       	add	r22, r18
 b8a:	73 1f       	adc	r23, r19
 b8c:	84 1f       	adc	r24, r20
 b8e:	95 1f       	adc	r25, r21
 b90:	a0 1d       	adc	r26, r0
 b92:	08 95       	ret

00000b94 <__prologue_saves__>:
 b94:	2f 92       	push	r2
 b96:	3f 92       	push	r3
 b98:	4f 92       	push	r4
 b9a:	5f 92       	push	r5
 b9c:	6f 92       	push	r6
 b9e:	7f 92       	push	r7
 ba0:	8f 92       	push	r8
 ba2:	9f 92       	push	r9
 ba4:	af 92       	push	r10
 ba6:	bf 92       	push	r11
 ba8:	cf 92       	push	r12
 baa:	df 92       	push	r13
 bac:	ef 92       	push	r14
 bae:	ff 92       	push	r15
 bb0:	0f 93       	push	r16
 bb2:	1f 93       	push	r17
 bb4:	cf 93       	push	r28
 bb6:	df 93       	push	r29
 bb8:	cd b7       	in	r28, 0x3d	; 61
 bba:	de b7       	in	r29, 0x3e	; 62
 bbc:	ca 1b       	sub	r28, r26
 bbe:	db 0b       	sbc	r29, r27
 bc0:	0f b6       	in	r0, 0x3f	; 63
 bc2:	f8 94       	cli
 bc4:	de bf       	out	0x3e, r29	; 62
 bc6:	0f be       	out	0x3f, r0	; 63
 bc8:	cd bf       	out	0x3d, r28	; 61
 bca:	09 94       	ijmp

00000bcc <__epilogue_restores__>:
 bcc:	2a 88       	ldd	r2, Y+18	; 0x12
 bce:	39 88       	ldd	r3, Y+17	; 0x11
 bd0:	48 88       	ldd	r4, Y+16	; 0x10
 bd2:	5f 84       	ldd	r5, Y+15	; 0x0f
 bd4:	6e 84       	ldd	r6, Y+14	; 0x0e
 bd6:	7d 84       	ldd	r7, Y+13	; 0x0d
 bd8:	8c 84       	ldd	r8, Y+12	; 0x0c
 bda:	9b 84       	ldd	r9, Y+11	; 0x0b
 bdc:	aa 84       	ldd	r10, Y+10	; 0x0a
 bde:	b9 84       	ldd	r11, Y+9	; 0x09
 be0:	c8 84       	ldd	r12, Y+8	; 0x08
 be2:	df 80       	ldd	r13, Y+7	; 0x07
 be4:	ee 80       	ldd	r14, Y+6	; 0x06
 be6:	fd 80       	ldd	r15, Y+5	; 0x05
 be8:	0c 81       	ldd	r16, Y+4	; 0x04
 bea:	1b 81       	ldd	r17, Y+3	; 0x03
 bec:	aa 81       	ldd	r26, Y+2	; 0x02
 bee:	b9 81       	ldd	r27, Y+1	; 0x01
 bf0:	ce 0f       	add	r28, r30
 bf2:	d1 1d       	adc	r29, r1
 bf4:	0f b6       	in	r0, 0x3f	; 63
 bf6:	f8 94       	cli
 bf8:	de bf       	out	0x3e, r29	; 62
 bfa:	0f be       	out	0x3f, r0	; 63
 bfc:	cd bf       	out	0x3d, r28	; 61
 bfe:	ed 01       	movw	r28, r26
 c00:	08 95       	ret

00000c02 <_exit>:
 c02:	f8 94       	cli

00000c04 <__stop_program>:
 c04:	ff cf       	rjmp	.-2      	; 0xc04 <__stop_program>
