
GccApplication2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001334  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000004e  00800060  00001334  000013c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000016a  008000ae  008000ae  00001416  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001416  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001474  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c0  00000000  00000000  000014b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000123c  00000000  00000000  00001570  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000096a  00000000  00000000  000027ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000071a  00000000  00000000  00003116  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000028c  00000000  00000000  00003830  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007cf  00000000  00000000  00003abc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a01  00000000  00000000  0000428b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f8  00000000  00000000  00004c8c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	13 c0       	rjmp	.+38     	; 0x28 <__ctors_end>
       2:	37 c0       	rjmp	.+110    	; 0x72 <__bad_interrupt>
       4:	36 c0       	rjmp	.+108    	; 0x72 <__bad_interrupt>
       6:	35 c0       	rjmp	.+106    	; 0x72 <__bad_interrupt>
       8:	34 c0       	rjmp	.+104    	; 0x72 <__bad_interrupt>
       a:	33 c0       	rjmp	.+102    	; 0x72 <__bad_interrupt>
       c:	32 c0       	rjmp	.+100    	; 0x72 <__bad_interrupt>
       e:	31 c0       	rjmp	.+98     	; 0x72 <__bad_interrupt>
      10:	30 c0       	rjmp	.+96     	; 0x72 <__bad_interrupt>
      12:	2f c0       	rjmp	.+94     	; 0x72 <__bad_interrupt>
      14:	2e c0       	rjmp	.+92     	; 0x72 <__bad_interrupt>
      16:	2d c0       	rjmp	.+90     	; 0x72 <__bad_interrupt>
      18:	2c c0       	rjmp	.+88     	; 0x72 <__bad_interrupt>
      1a:	2b c0       	rjmp	.+86     	; 0x72 <__bad_interrupt>
      1c:	40 c0       	rjmp	.+128    	; 0x9e <__vector_14>
      1e:	29 c0       	rjmp	.+82     	; 0x72 <__bad_interrupt>
      20:	28 c0       	rjmp	.+80     	; 0x72 <__bad_interrupt>
      22:	27 c0       	rjmp	.+78     	; 0x72 <__bad_interrupt>
      24:	26 c0       	rjmp	.+76     	; 0x72 <__bad_interrupt>

00000026 <__ctors_start>:
      26:	cc 02       	muls	r28, r28

00000028 <__ctors_end>:
      28:	11 24       	eor	r1, r1
      2a:	1f be       	out	0x3f, r1	; 63
      2c:	cf e5       	ldi	r28, 0x5F	; 95
      2e:	d4 e0       	ldi	r29, 0x04	; 4
      30:	de bf       	out	0x3e, r29	; 62
      32:	cd bf       	out	0x3d, r28	; 61

00000034 <__do_copy_data>:
      34:	10 e0       	ldi	r17, 0x00	; 0
      36:	a0 e6       	ldi	r26, 0x60	; 96
      38:	b0 e0       	ldi	r27, 0x00	; 0
      3a:	e4 e3       	ldi	r30, 0x34	; 52
      3c:	f3 e1       	ldi	r31, 0x13	; 19
      3e:	02 c0       	rjmp	.+4      	; 0x44 <__SREG__+0x5>
      40:	05 90       	lpm	r0, Z+
      42:	0d 92       	st	X+, r0
      44:	ae 3a       	cpi	r26, 0xAE	; 174
      46:	b1 07       	cpc	r27, r17
      48:	d9 f7       	brne	.-10     	; 0x40 <__SREG__+0x1>

0000004a <__do_clear_bss>:
      4a:	22 e0       	ldi	r18, 0x02	; 2
      4c:	ae ea       	ldi	r26, 0xAE	; 174
      4e:	b0 e0       	ldi	r27, 0x00	; 0
      50:	01 c0       	rjmp	.+2      	; 0x54 <.do_clear_bss_start>

00000052 <.do_clear_bss_loop>:
      52:	1d 92       	st	X+, r1

00000054 <.do_clear_bss_start>:
      54:	a8 31       	cpi	r26, 0x18	; 24
      56:	b2 07       	cpc	r27, r18
      58:	e1 f7       	brne	.-8      	; 0x52 <.do_clear_bss_loop>

0000005a <__do_global_ctors>:
      5a:	10 e0       	ldi	r17, 0x00	; 0
      5c:	c4 e1       	ldi	r28, 0x14	; 20
      5e:	d0 e0       	ldi	r29, 0x00	; 0
      60:	03 c0       	rjmp	.+6      	; 0x68 <__do_global_ctors+0xe>
      62:	21 97       	sbiw	r28, 0x01	; 1
      64:	fe 01       	movw	r30, r28
      66:	a5 d6       	rcall	.+3402   	; 0xdb2 <__tablejump2__>
      68:	c3 31       	cpi	r28, 0x13	; 19
      6a:	d1 07       	cpc	r29, r17
      6c:	d1 f7       	brne	.-12     	; 0x62 <__do_global_ctors+0x8>
      6e:	d4 d1       	rcall	.+936    	; 0x418 <main>
      70:	5f c9       	rjmp	.-3394   	; 0xfffff330 <__eeprom_end+0xff7ef330>

00000072 <__bad_interrupt>:
      72:	c6 cf       	rjmp	.-116    	; 0x0 <__vectors>

00000074 <_Z5setupv>:
}


void checkClipping(){//manage clipping indication
	if (clipping){//if currently clipping
		clipping = 0;
      74:	14 ba       	out	0x14, r1	; 20
      76:	f8 94       	cli
      78:	16 b8       	out	0x06, r1	; 6
      7a:	3e 9a       	sbi	0x07, 6	; 7
      7c:	3d 9a       	sbi	0x07, 5	; 7
      7e:	32 9a       	sbi	0x06, 2	; 6
      80:	35 9a       	sbi	0x06, 5	; 6
      82:	33 9a       	sbi	0x06, 3	; 6
      84:	37 9a       	sbi	0x06, 7	; 6
      86:	36 9a       	sbi	0x06, 6	; 6
      88:	78 94       	sei
      8a:	08 95       	ret

0000008c <_Z5resetv>:
      8c:	10 92 d7 01 	sts	0x01D7, r1	; 0x8001d7 <_ZL5index>
      90:	10 92 ce 01 	sts	0x01CE, r1	; 0x8001ce <_ZL7noMatch>
      94:	10 92 d2 01 	sts	0x01D2, r1	; 0x8001d2 <_ZL8maxSlope+0x1>
      98:	10 92 d1 01 	sts	0x01D1, r1	; 0x8001d1 <_ZL8maxSlope>
      9c:	08 95       	ret

0000009e <__vector_14>:
      9e:	1f 92       	push	r1
      a0:	0f 92       	push	r0
      a2:	0f b6       	in	r0, 0x3f	; 63
      a4:	0f 92       	push	r0
      a6:	11 24       	eor	r1, r1
      a8:	2f 93       	push	r18
      aa:	3f 93       	push	r19
      ac:	4f 93       	push	r20
      ae:	5f 93       	push	r21
      b0:	6f 93       	push	r22
      b2:	7f 93       	push	r23
      b4:	8f 93       	push	r24
      b6:	9f 93       	push	r25
      b8:	af 93       	push	r26
      ba:	bf 93       	push	r27
      bc:	ef 93       	push	r30
      be:	ff 93       	push	r31
      c0:	80 91 07 02 	lds	r24, 0x0207	; 0x800207 <_ZL7newData>
      c4:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <_ZL8prevData>
      c8:	85 b1       	in	r24, 0x05	; 5
      ca:	80 93 07 02 	sts	0x0207, r24	; 0x800207 <_ZL7newData>
      ce:	90 91 06 02 	lds	r25, 0x0206	; 0x800206 <_ZL8prevData>
      d2:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__data_start>
      d6:	98 17       	cp	r25, r24
      d8:	08 f0       	brcs	.+2      	; 0xdc <__vector_14+0x3e>
      da:	d0 c0       	rjmp	.+416    	; 0x27c <__vector_14+0x1de>
      dc:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <_ZL7newData>
      e0:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__data_start>
      e4:	98 17       	cp	r25, r24
      e6:	08 f0       	brcs	.+2      	; 0xea <__vector_14+0x4c>
      e8:	05 c1       	rjmp	.+522    	; 0x2f4 <__vector_14+0x256>
      ea:	c8 c0       	rjmp	.+400    	; 0x27c <__vector_14+0x1de>
      ec:	e0 91 d7 01 	lds	r30, 0x01D7	; 0x8001d7 <_ZL5index>
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	80 91 cf 01 	lds	r24, 0x01CF	; 0x8001cf <_ZL8newSlope>
      f6:	90 91 d0 01 	lds	r25, 0x01D0	; 0x8001d0 <_ZL8newSlope+0x1>
      fa:	ee 0f       	add	r30, r30
      fc:	ff 1f       	adc	r31, r31
      fe:	e4 52       	subi	r30, 0x24	; 36
     100:	fe 4f       	sbci	r31, 0xFE	; 254
     102:	91 83       	std	Z+1, r25	; 0x01
     104:	80 83       	st	Z, r24
     106:	e0 91 d7 01 	lds	r30, 0x01D7	; 0x8001d7 <_ZL5index>
     10a:	f0 e0       	ldi	r31, 0x00	; 0
     10c:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <_ZL4time>
     110:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <_ZL4time+0x1>
     114:	ee 0f       	add	r30, r30
     116:	ff 1f       	adc	r31, r31
     118:	e0 51       	subi	r30, 0x10	; 16
     11a:	fe 4f       	sbci	r31, 0xFE	; 254
     11c:	91 83       	std	Z+1, r25	; 0x01
     11e:	80 83       	st	Z, r24
     120:	10 92 05 02 	sts	0x0205, r1	; 0x800205 <_ZL4time+0x1>
     124:	10 92 04 02 	sts	0x0204, r1	; 0x800204 <_ZL4time>
     128:	80 91 d7 01 	lds	r24, 0x01D7	; 0x8001d7 <_ZL5index>
     12c:	81 11       	cpse	r24, r1
     12e:	08 c0       	rjmp	.+16     	; 0x140 <__vector_14+0xa2>
     130:	10 92 ce 01 	sts	0x01CE, r1	; 0x8001ce <_ZL7noMatch>
     134:	80 91 d7 01 	lds	r24, 0x01D7	; 0x8001d7 <_ZL5index>
     138:	8f 5f       	subi	r24, 0xFF	; 255
     13a:	80 93 d7 01 	sts	0x01D7, r24	; 0x8001d7 <_ZL5index>
     13e:	9e c0       	rjmp	.+316    	; 0x27c <__vector_14+0x1de>
     140:	80 91 f0 01 	lds	r24, 0x01F0	; 0x8001f0 <_ZL5timer>
     144:	90 91 f1 01 	lds	r25, 0x01F1	; 0x8001f1 <_ZL5timer+0x1>
     148:	e0 91 d7 01 	lds	r30, 0x01D7	; 0x8001d7 <_ZL5index>
     14c:	f0 e0       	ldi	r31, 0x00	; 0
     14e:	ee 0f       	add	r30, r30
     150:	ff 1f       	adc	r31, r31
     152:	e0 51       	subi	r30, 0x10	; 16
     154:	fe 4f       	sbci	r31, 0xFE	; 254
     156:	20 81       	ld	r18, Z
     158:	31 81       	ldd	r19, Z+1	; 0x01
     15a:	40 91 62 00 	lds	r20, 0x0062	; 0x800062 <_ZL8timerTol>
     15e:	50 91 63 00 	lds	r21, 0x0063	; 0x800063 <_ZL8timerTol+0x1>
     162:	82 1b       	sub	r24, r18
     164:	93 0b       	sbc	r25, r19
     166:	9c 01       	movw	r18, r24
     168:	22 f4       	brpl	.+8      	; 0x172 <__vector_14+0xd4>
     16a:	22 27       	eor	r18, r18
     16c:	33 27       	eor	r19, r19
     16e:	28 1b       	sub	r18, r24
     170:	39 0b       	sbc	r19, r25
     172:	24 17       	cp	r18, r20
     174:	35 07       	cpc	r19, r21
     176:	0c f0       	brlt	.+2      	; 0x17a <__vector_14+0xdc>
     178:	e1 c0       	rjmp	.+450    	; 0x33c <__vector_14+0x29e>
     17a:	80 91 dc 01 	lds	r24, 0x01DC	; 0x8001dc <_ZL5slope>
     17e:	90 91 dd 01 	lds	r25, 0x01DD	; 0x8001dd <_ZL5slope+0x1>
     182:	40 91 cf 01 	lds	r20, 0x01CF	; 0x8001cf <_ZL8newSlope>
     186:	50 91 d0 01 	lds	r21, 0x01D0	; 0x8001d0 <_ZL8newSlope+0x1>
     18a:	20 91 64 00 	lds	r18, 0x0064	; 0x800064 <_ZL8slopeTol>
     18e:	84 1b       	sub	r24, r20
     190:	95 0b       	sbc	r25, r21
     192:	ac 01       	movw	r20, r24
     194:	22 f4       	brpl	.+8      	; 0x19e <__vector_14+0x100>
     196:	44 27       	eor	r20, r20
     198:	55 27       	eor	r21, r21
     19a:	48 1b       	sub	r20, r24
     19c:	59 0b       	sbc	r21, r25
     19e:	82 2f       	mov	r24, r18
     1a0:	90 e0       	ldi	r25, 0x00	; 0
     1a2:	48 17       	cp	r20, r24
     1a4:	59 07       	cpc	r21, r25
     1a6:	0c f4       	brge	.+2      	; 0x1aa <__vector_14+0x10c>
     1a8:	d4 c0       	rjmp	.+424    	; 0x352 <__vector_14+0x2b4>
     1aa:	c8 c0       	rjmp	.+400    	; 0x33c <__vector_14+0x29e>
     1ac:	80 e0       	ldi	r24, 0x00	; 0
     1ae:	e8 2f       	mov	r30, r24
     1b0:	f0 e0       	ldi	r31, 0x00	; 0
     1b2:	ee 0f       	add	r30, r30
     1b4:	ff 1f       	adc	r31, r31
     1b6:	e0 51       	subi	r30, 0x10	; 16
     1b8:	fe 4f       	sbci	r31, 0xFE	; 254
     1ba:	40 81       	ld	r20, Z
     1bc:	51 81       	ldd	r21, Z+1	; 0x01
     1be:	20 91 da 01 	lds	r18, 0x01DA	; 0x8001da <_ZL10totalTimer>
     1c2:	30 91 db 01 	lds	r19, 0x01DB	; 0x8001db <_ZL10totalTimer+0x1>
     1c6:	24 0f       	add	r18, r20
     1c8:	35 1f       	adc	r19, r21
     1ca:	30 93 db 01 	sts	0x01DB, r19	; 0x8001db <_ZL10totalTimer+0x1>
     1ce:	20 93 da 01 	sts	0x01DA, r18	; 0x8001da <_ZL10totalTimer>
     1d2:	8f 5f       	subi	r24, 0xFF	; 255
     1d4:	90 91 d7 01 	lds	r25, 0x01D7	; 0x8001d7 <_ZL5index>
     1d8:	89 17       	cp	r24, r25
     1da:	48 f3       	brcs	.-46     	; 0x1ae <__vector_14+0x110>
     1dc:	80 91 da 01 	lds	r24, 0x01DA	; 0x8001da <_ZL10totalTimer>
     1e0:	90 91 db 01 	lds	r25, 0x01DB	; 0x8001db <_ZL10totalTimer+0x1>
     1e4:	90 93 d9 01 	sts	0x01D9, r25	; 0x8001d9 <_ZL6period+0x1>
     1e8:	80 93 d8 01 	sts	0x01D8, r24	; 0x8001d8 <_ZL6period>
     1ec:	e0 91 d7 01 	lds	r30, 0x01D7	; 0x8001d7 <_ZL5index>
     1f0:	f0 e0       	ldi	r31, 0x00	; 0
     1f2:	ee 0f       	add	r30, r30
     1f4:	ff 1f       	adc	r31, r31
     1f6:	e0 51       	subi	r30, 0x10	; 16
     1f8:	fe 4f       	sbci	r31, 0xFE	; 254
     1fa:	80 81       	ld	r24, Z
     1fc:	91 81       	ldd	r25, Z+1	; 0x01
     1fe:	90 93 f1 01 	sts	0x01F1, r25	; 0x8001f1 <_ZL5timer+0x1>
     202:	80 93 f0 01 	sts	0x01F0, r24	; 0x8001f0 <_ZL5timer>
     206:	e0 91 d7 01 	lds	r30, 0x01D7	; 0x8001d7 <_ZL5index>
     20a:	f0 e0       	ldi	r31, 0x00	; 0
     20c:	ee 0f       	add	r30, r30
     20e:	ff 1f       	adc	r31, r31
     210:	e4 52       	subi	r30, 0x24	; 36
     212:	fe 4f       	sbci	r31, 0xFE	; 254
     214:	80 81       	ld	r24, Z
     216:	91 81       	ldd	r25, Z+1	; 0x01
     218:	90 93 dd 01 	sts	0x01DD, r25	; 0x8001dd <_ZL5slope+0x1>
     21c:	80 93 dc 01 	sts	0x01DC, r24	; 0x8001dc <_ZL5slope>
     220:	81 e0       	ldi	r24, 0x01	; 1
     222:	80 93 d7 01 	sts	0x01D7, r24	; 0x8001d7 <_ZL5index>
     226:	10 92 ce 01 	sts	0x01CE, r1	; 0x8001ce <_ZL7noMatch>
     22a:	28 c0       	rjmp	.+80     	; 0x27c <__vector_14+0x1de>
     22c:	2f df       	rcall	.-418    	; 0x8c <_Z5resetv>
     22e:	26 c0       	rjmp	.+76     	; 0x27c <__vector_14+0x1de>
     230:	20 91 cf 01 	lds	r18, 0x01CF	; 0x8001cf <_ZL8newSlope>
     234:	30 91 d0 01 	lds	r19, 0x01D0	; 0x8001d0 <_ZL8newSlope+0x1>
     238:	80 91 d1 01 	lds	r24, 0x01D1	; 0x8001d1 <_ZL8maxSlope>
     23c:	90 91 d2 01 	lds	r25, 0x01D2	; 0x8001d2 <_ZL8maxSlope+0x1>
     240:	82 17       	cp	r24, r18
     242:	93 07       	cpc	r25, r19
     244:	8c f4       	brge	.+34     	; 0x268 <__vector_14+0x1ca>
     246:	80 91 cf 01 	lds	r24, 0x01CF	; 0x8001cf <_ZL8newSlope>
     24a:	90 91 d0 01 	lds	r25, 0x01D0	; 0x8001d0 <_ZL8newSlope+0x1>
     24e:	90 93 d2 01 	sts	0x01D2, r25	; 0x8001d2 <_ZL8maxSlope+0x1>
     252:	80 93 d1 01 	sts	0x01D1, r24	; 0x8001d1 <_ZL8maxSlope>
     256:	10 92 05 02 	sts	0x0205, r1	; 0x800205 <_ZL4time+0x1>
     25a:	10 92 04 02 	sts	0x0204, r1	; 0x800204 <_ZL4time>
     25e:	10 92 ce 01 	sts	0x01CE, r1	; 0x8001ce <_ZL7noMatch>
     262:	10 92 d7 01 	sts	0x01D7, r1	; 0x8001d7 <_ZL5index>
     266:	0a c0       	rjmp	.+20     	; 0x27c <__vector_14+0x1de>
     268:	80 91 ce 01 	lds	r24, 0x01CE	; 0x8001ce <_ZL7noMatch>
     26c:	8f 5f       	subi	r24, 0xFF	; 255
     26e:	80 93 ce 01 	sts	0x01CE, r24	; 0x8001ce <_ZL7noMatch>
     272:	80 91 ce 01 	lds	r24, 0x01CE	; 0x8001ce <_ZL7noMatch>
     276:	8a 30       	cpi	r24, 0x0A	; 10
     278:	08 f0       	brcs	.+2      	; 0x27c <__vector_14+0x1de>
     27a:	08 df       	rcall	.-496    	; 0x8c <_Z5resetv>
     27c:	80 91 07 02 	lds	r24, 0x0207	; 0x800207 <_ZL7newData>
     280:	88 23       	and	r24, r24
     282:	09 f4       	brne	.+2      	; 0x286 <__vector_14+0x1e8>
     284:	6f c0       	rjmp	.+222    	; 0x364 <__vector_14+0x2c6>
     286:	80 91 07 02 	lds	r24, 0x0207	; 0x800207 <_ZL7newData>
     28a:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <_ZL4time>
     28e:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <_ZL4time+0x1>
     292:	01 96       	adiw	r24, 0x01	; 1
     294:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <_ZL4time+0x1>
     298:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <_ZL4time>
     29c:	20 91 cc 01 	lds	r18, 0x01CC	; 0x8001cc <ampTimer>
     2a0:	30 91 cd 01 	lds	r19, 0x01CD	; 0x8001cd <ampTimer+0x1>
     2a4:	2f 5f       	subi	r18, 0xFF	; 255
     2a6:	3f 4f       	sbci	r19, 0xFF	; 255
     2a8:	30 93 cd 01 	sts	0x01CD, r19	; 0x8001cd <ampTimer+0x1>
     2ac:	20 93 cc 01 	sts	0x01CC, r18	; 0x8001cc <ampTimer>
     2b0:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__data_start>
     2b4:	40 91 07 02 	lds	r20, 0x0207	; 0x800207 <_ZL7newData>
     2b8:	90 e0       	ldi	r25, 0x00	; 0
     2ba:	84 1b       	sub	r24, r20
     2bc:	91 09       	sbc	r25, r1
     2be:	ac 01       	movw	r20, r24
     2c0:	22 f4       	brpl	.+8      	; 0x2ca <__vector_14+0x22c>
     2c2:	44 27       	eor	r20, r20
     2c4:	55 27       	eor	r21, r21
     2c6:	48 1b       	sub	r20, r24
     2c8:	59 0b       	sbc	r21, r25
     2ca:	80 91 cb 01 	lds	r24, 0x01CB	; 0x8001cb <_ZL6maxAmp>
     2ce:	84 17       	cp	r24, r20
     2d0:	10 f4       	brcc	.+4      	; 0x2d6 <__vector_14+0x238>
     2d2:	40 93 cb 01 	sts	0x01CB, r20	; 0x8001cb <_ZL6maxAmp>
     2d6:	28 3e       	cpi	r18, 0xE8	; 232
     2d8:	33 40       	sbci	r19, 0x03	; 3
     2da:	09 f0       	breq	.+2      	; 0x2de <__vector_14+0x240>
     2dc:	47 c0       	rjmp	.+142    	; 0x36c <__vector_14+0x2ce>
     2de:	10 92 cd 01 	sts	0x01CD, r1	; 0x8001cd <ampTimer+0x1>
     2e2:	10 92 cc 01 	sts	0x01CC, r1	; 0x8001cc <ampTimer>
     2e6:	80 91 cb 01 	lds	r24, 0x01CB	; 0x8001cb <_ZL6maxAmp>
     2ea:	80 93 ca 01 	sts	0x01CA, r24	; 0x8001ca <_ZL11checkMaxAmp>
     2ee:	10 92 cb 01 	sts	0x01CB, r1	; 0x8001cb <_ZL6maxAmp>
     2f2:	3c c0       	rjmp	.+120    	; 0x36c <__vector_14+0x2ce>
     2f4:	80 91 07 02 	lds	r24, 0x0207	; 0x800207 <_ZL7newData>
     2f8:	20 91 06 02 	lds	r18, 0x0206	; 0x800206 <_ZL8prevData>
     2fc:	90 e0       	ldi	r25, 0x00	; 0
     2fe:	82 1b       	sub	r24, r18
     300:	91 09       	sbc	r25, r1
     302:	90 93 d0 01 	sts	0x01D0, r25	; 0x8001d0 <_ZL8newSlope+0x1>
     306:	80 93 cf 01 	sts	0x01CF, r24	; 0x8001cf <_ZL8newSlope>
     30a:	80 91 cf 01 	lds	r24, 0x01CF	; 0x8001cf <_ZL8newSlope>
     30e:	90 91 d0 01 	lds	r25, 0x01D0	; 0x8001d0 <_ZL8newSlope+0x1>
     312:	40 91 d1 01 	lds	r20, 0x01D1	; 0x8001d1 <_ZL8maxSlope>
     316:	50 91 d2 01 	lds	r21, 0x01D2	; 0x8001d2 <_ZL8maxSlope+0x1>
     31a:	20 91 64 00 	lds	r18, 0x0064	; 0x800064 <_ZL8slopeTol>
     31e:	84 1b       	sub	r24, r20
     320:	95 0b       	sbc	r25, r21
     322:	ac 01       	movw	r20, r24
     324:	22 f4       	brpl	.+8      	; 0x32e <__vector_14+0x290>
     326:	44 27       	eor	r20, r20
     328:	55 27       	eor	r21, r21
     32a:	48 1b       	sub	r20, r24
     32c:	59 0b       	sbc	r21, r25
     32e:	82 2f       	mov	r24, r18
     330:	90 e0       	ldi	r25, 0x00	; 0
     332:	48 17       	cp	r20, r24
     334:	59 07       	cpc	r21, r25
     336:	0c f4       	brge	.+2      	; 0x33a <__vector_14+0x29c>
     338:	d9 ce       	rjmp	.-590    	; 0xec <__vector_14+0x4e>
     33a:	7a cf       	rjmp	.-268    	; 0x230 <__vector_14+0x192>
     33c:	80 91 d7 01 	lds	r24, 0x01D7	; 0x8001d7 <_ZL5index>
     340:	8f 5f       	subi	r24, 0xFF	; 255
     342:	80 93 d7 01 	sts	0x01D7, r24	; 0x8001d7 <_ZL5index>
     346:	80 91 d7 01 	lds	r24, 0x01D7	; 0x8001d7 <_ZL5index>
     34a:	8a 30       	cpi	r24, 0x0A	; 10
     34c:	08 f4       	brcc	.+2      	; 0x350 <__vector_14+0x2b2>
     34e:	96 cf       	rjmp	.-212    	; 0x27c <__vector_14+0x1de>
     350:	6d cf       	rjmp	.-294    	; 0x22c <__vector_14+0x18e>
     352:	10 92 db 01 	sts	0x01DB, r1	; 0x8001db <_ZL10totalTimer+0x1>
     356:	10 92 da 01 	sts	0x01DA, r1	; 0x8001da <_ZL10totalTimer>
     35a:	80 91 d7 01 	lds	r24, 0x01D7	; 0x8001d7 <_ZL5index>
     35e:	81 11       	cpse	r24, r1
     360:	25 cf       	rjmp	.-438    	; 0x1ac <__vector_14+0x10e>
     362:	3c cf       	rjmp	.-392    	; 0x1dc <__vector_14+0x13e>
     364:	81 e0       	ldi	r24, 0x01	; 1
     366:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <_ZL8clipping>
     36a:	8f cf       	rjmp	.-226    	; 0x28a <__vector_14+0x1ec>
     36c:	ff 91       	pop	r31
     36e:	ef 91       	pop	r30
     370:	bf 91       	pop	r27
     372:	af 91       	pop	r26
     374:	9f 91       	pop	r25
     376:	8f 91       	pop	r24
     378:	7f 91       	pop	r23
     37a:	6f 91       	pop	r22
     37c:	5f 91       	pop	r21
     37e:	4f 91       	pop	r20
     380:	3f 91       	pop	r19
     382:	2f 91       	pop	r18
     384:	0f 90       	pop	r0
     386:	0f be       	out	0x3f, r0	; 63
     388:	0f 90       	pop	r0
     38a:	1f 90       	pop	r1
     38c:	18 95       	reti

0000038e <_Z6get_avPdi>:
const int SHORT_FREQ_AR_LEN = 10;
double short_last_frequencies[SHORT_FREQ_AR_LEN];
int short_freq_ar_i = 0;

// Get average from double array
double get_av(double* ar, int len) {
     38e:	8f 92       	push	r8
     390:	9f 92       	push	r9
     392:	af 92       	push	r10
     394:	bf 92       	push	r11
     396:	cf 92       	push	r12
     398:	df 92       	push	r13
     39a:	ef 92       	push	r14
     39c:	ff 92       	push	r15
     39e:	0f 93       	push	r16
     3a0:	1f 93       	push	r17
     3a2:	cf 93       	push	r28
     3a4:	df 93       	push	r29
     3a6:	6c 01       	movw	r12, r24
     3a8:	7b 01       	movw	r14, r22
	double sum = 0;
	for (int i = 0; i < len; i++) {
     3aa:	16 16       	cp	r1, r22
     3ac:	17 06       	cpc	r1, r23
     3ae:	d4 f4       	brge	.+52     	; 0x3e4 <_Z6get_avPdi+0x56>
     3b0:	8c 01       	movw	r16, r24
     3b2:	c0 e0       	ldi	r28, 0x00	; 0
     3b4:	d0 e0       	ldi	r29, 0x00	; 0
     3b6:	81 2c       	mov	r8, r1
     3b8:	91 2c       	mov	r9, r1
     3ba:	54 01       	movw	r10, r8
		if (ar > 0) {
     3bc:	c1 14       	cp	r12, r1
     3be:	d1 04       	cpc	r13, r1
     3c0:	51 f0       	breq	.+20     	; 0x3d6 <_Z6get_avPdi+0x48>
			sum += ar[i];
     3c2:	f8 01       	movw	r30, r16
     3c4:	20 81       	ld	r18, Z
     3c6:	31 81       	ldd	r19, Z+1	; 0x01
     3c8:	42 81       	ldd	r20, Z+2	; 0x02
     3ca:	53 81       	ldd	r21, Z+3	; 0x03
     3cc:	c5 01       	movw	r24, r10
     3ce:	b4 01       	movw	r22, r8
     3d0:	d6 d2       	rcall	.+1452   	; 0x97e <__addsf3>
     3d2:	4b 01       	movw	r8, r22
     3d4:	5c 01       	movw	r10, r24
int short_freq_ar_i = 0;

// Get average from double array
double get_av(double* ar, int len) {
	double sum = 0;
	for (int i = 0; i < len; i++) {
     3d6:	21 96       	adiw	r28, 0x01	; 1
     3d8:	0c 5f       	subi	r16, 0xFC	; 252
     3da:	1f 4f       	sbci	r17, 0xFF	; 255
     3dc:	ec 16       	cp	r14, r28
     3de:	fd 06       	cpc	r15, r29
     3e0:	69 f7       	brne	.-38     	; 0x3bc <_Z6get_avPdi+0x2e>
     3e2:	03 c0       	rjmp	.+6      	; 0x3ea <_Z6get_avPdi+0x5c>
double short_last_frequencies[SHORT_FREQ_AR_LEN];
int short_freq_ar_i = 0;

// Get average from double array
double get_av(double* ar, int len) {
	double sum = 0;
     3e4:	81 2c       	mov	r8, r1
     3e6:	91 2c       	mov	r9, r1
     3e8:	54 01       	movw	r10, r8
		if (ar > 0) {
			sum += ar[i];
		}
	}

	return sum/(double)len;
     3ea:	b7 01       	movw	r22, r14
     3ec:	ff 0c       	add	r15, r15
     3ee:	88 0b       	sbc	r24, r24
     3f0:	99 0b       	sbc	r25, r25
     3f2:	c8 d3       	rcall	.+1936   	; 0xb84 <__floatsisf>
     3f4:	9b 01       	movw	r18, r22
     3f6:	ac 01       	movw	r20, r24
     3f8:	c5 01       	movw	r24, r10
     3fa:	b4 01       	movw	r22, r8
     3fc:	28 d3       	rcall	.+1616   	; 0xa4e <__divsf3>
}
     3fe:	df 91       	pop	r29
     400:	cf 91       	pop	r28
     402:	1f 91       	pop	r17
     404:	0f 91       	pop	r16
     406:	ff 90       	pop	r15
     408:	ef 90       	pop	r14
     40a:	df 90       	pop	r13
     40c:	cf 90       	pop	r12
     40e:	bf 90       	pop	r11
     410:	af 90       	pop	r10
     412:	9f 90       	pop	r9
     414:	8f 90       	pop	r8
     416:	08 95       	ret

00000418 <main>:


int main() {
     418:	cf 93       	push	r28
     41a:	df 93       	push	r29
     41c:	00 d0       	rcall	.+0      	; 0x41e <main+0x6>
     41e:	1f 92       	push	r1
     420:	cd b7       	in	r28, 0x3d	; 61
     422:	de b7       	in	r29, 0x3e	; 62
	//DDRD = 0xFF;
	//PORTD = 0x00;
	
	setup();
     424:	27 de       	rcall	.-946    	; 0x74 <_Z5setupv>
	
	char newLine[] = "\r\n";
     426:	8d e0       	ldi	r24, 0x0D	; 13
     428:	9a e0       	ldi	r25, 0x0A	; 10
     42a:	9a 83       	std	Y+2, r25	; 0x02
     42c:	89 83       	std	Y+1, r24	; 0x01
     42e:	1b 82       	std	Y+3, r1	; 0x03
	char maxAmpStr[] = "MaxAmp: ";
	char voltageStr[] = "New Data: ";
	char freqStr[] = "Frequency: ";
	
	USART_Init ( MYUBRR );
     430:	83 e3       	ldi	r24, 0x33	; 51
     432:	90 e0       	ldi	r25, 0x00	; 0
     434:	7c d2       	rcall	.+1272   	; 0x92e <_Z10USART_Initj>
	while(1) {
		float voltage = newData * (5.0 / 1023.0);
     436:	80 91 07 02 	lds	r24, 0x0207	; 0x800207 <_ZL7newData>
		
		//PORTD = 0;
		if (checkMaxAmp > ampThreshold) /* && checkMaxAmp < maxAmpThreshold) */ {
     43a:	90 91 ca 01 	lds	r25, 0x01CA	; 0x8001ca <_ZL11checkMaxAmp>
     43e:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <_ZL12ampThreshold>
     442:	89 17       	cp	r24, r25
     444:	08 f0       	brcs	.+2      	; 0x448 <main+0x30>
     446:	a1 c0       	rjmp	.+322    	; 0x58a <__stack+0x12b>
			frequency = 38462.0/float(period);//calculate frequency timer rate/period
     448:	60 91 d8 01 	lds	r22, 0x01D8	; 0x8001d8 <_ZL6period>
     44c:	70 91 d9 01 	lds	r23, 0x01D9	; 0x8001d9 <_ZL6period+0x1>
     450:	80 e0       	ldi	r24, 0x00	; 0
     452:	90 e0       	ldi	r25, 0x00	; 0
     454:	95 d3       	rcall	.+1834   	; 0xb80 <__floatunsisf>
     456:	9b 01       	movw	r18, r22
     458:	ac 01       	movw	r20, r24
     45a:	60 e0       	ldi	r22, 0x00	; 0
     45c:	7e e3       	ldi	r23, 0x3E	; 62
     45e:	86 e1       	ldi	r24, 0x16	; 22
     460:	97 e4       	ldi	r25, 0x47	; 71
     462:	f5 d2       	rcall	.+1514   	; 0xa4e <__divsf3>
     464:	60 93 d3 01 	sts	0x01D3, r22	; 0x8001d3 <_ZL9frequency>
     468:	70 93 d4 01 	sts	0x01D4, r23	; 0x8001d4 <_ZL9frequency+0x1>
     46c:	80 93 d5 01 	sts	0x01D5, r24	; 0x8001d5 <_ZL9frequency+0x2>
     470:	90 93 d6 01 	sts	0x01D6, r25	; 0x8001d6 <_ZL9frequency+0x3>
			
			// Ignore noise and big swings
			long_last_frequencies[long_freq_ar_i++] = frequency;
     474:	80 91 d8 00 	lds	r24, 0x00D8	; 0x8000d8 <long_freq_ar_i>
     478:	90 91 d9 00 	lds	r25, 0x00D9	; 0x8000d9 <long_freq_ar_i+0x1>
     47c:	9c 01       	movw	r18, r24
     47e:	2f 5f       	subi	r18, 0xFF	; 255
     480:	3f 4f       	sbci	r19, 0xFF	; 255
     482:	30 93 d9 00 	sts	0x00D9, r19	; 0x8000d9 <long_freq_ar_i+0x1>
     486:	20 93 d8 00 	sts	0x00D8, r18	; 0x8000d8 <long_freq_ar_i>
     48a:	40 91 d3 01 	lds	r20, 0x01D3	; 0x8001d3 <_ZL9frequency>
     48e:	50 91 d4 01 	lds	r21, 0x01D4	; 0x8001d4 <_ZL9frequency+0x1>
     492:	60 91 d5 01 	lds	r22, 0x01D5	; 0x8001d5 <_ZL9frequency+0x2>
     496:	70 91 d6 01 	lds	r23, 0x01D6	; 0x8001d6 <_ZL9frequency+0x3>
     49a:	88 0f       	add	r24, r24
     49c:	99 1f       	adc	r25, r25
     49e:	88 0f       	add	r24, r24
     4a0:	99 1f       	adc	r25, r25
     4a2:	fc 01       	movw	r30, r24
     4a4:	e6 52       	subi	r30, 0x26	; 38
     4a6:	ff 4f       	sbci	r31, 0xFF	; 255
     4a8:	40 83       	st	Z, r20
     4aa:	51 83       	std	Z+1, r21	; 0x01
     4ac:	62 83       	std	Z+2, r22	; 0x02
     4ae:	73 83       	std	Z+3, r23	; 0x03
			if (long_freq_ar_i >= LONG_FREQ_AR_LEN) long_freq_ar_i = 0;
     4b0:	2c 33       	cpi	r18, 0x3C	; 60
     4b2:	31 05       	cpc	r19, r1
     4b4:	24 f0       	brlt	.+8      	; 0x4be <__stack+0x5f>
     4b6:	10 92 d9 00 	sts	0x00D9, r1	; 0x8000d9 <long_freq_ar_i+0x1>
     4ba:	10 92 d8 00 	sts	0x00D8, r1	; 0x8000d8 <long_freq_ar_i>
			float long_average_freq = get_av(long_last_frequencies, LONG_FREQ_AR_LEN);
     4be:	6c e3       	ldi	r22, 0x3C	; 60
     4c0:	70 e0       	ldi	r23, 0x00	; 0
     4c2:	8a ed       	ldi	r24, 0xDA	; 218
     4c4:	90 e0       	ldi	r25, 0x00	; 0
     4c6:	63 df       	rcall	.-314    	; 0x38e <_Z6get_avPdi>
     4c8:	6b 01       	movw	r12, r22
     4ca:	7c 01       	movw	r14, r24
			float diff = abs(long_average_freq - frequency);
     4cc:	20 91 d3 01 	lds	r18, 0x01D3	; 0x8001d3 <_ZL9frequency>
     4d0:	30 91 d4 01 	lds	r19, 0x01D4	; 0x8001d4 <_ZL9frequency+0x1>
     4d4:	40 91 d5 01 	lds	r20, 0x01D5	; 0x8001d5 <_ZL9frequency+0x2>
     4d8:	50 91 d6 01 	lds	r21, 0x01D6	; 0x8001d6 <_ZL9frequency+0x3>
			float max_diff = long_average_freq * FREQ_MAX_DIFF;

			if (diff < max_diff){
     4dc:	4f d2       	rcall	.+1182   	; 0x97c <__subsf3>
     4de:	1f d3       	rcall	.+1598   	; 0xb1e <__fixsfsi>
     4e0:	9b 01       	movw	r18, r22
     4e2:	77 23       	and	r23, r23
     4e4:	24 f4       	brge	.+8      	; 0x4ee <__stack+0x8f>
     4e6:	22 27       	eor	r18, r18
     4e8:	33 27       	eor	r19, r19
     4ea:	26 1b       	sub	r18, r22
     4ec:	37 0b       	sbc	r19, r23
     4ee:	b9 01       	movw	r22, r18
     4f0:	33 0f       	add	r19, r19
     4f2:	88 0b       	sbc	r24, r24
     4f4:	99 0b       	sbc	r25, r25
     4f6:	46 d3       	rcall	.+1676   	; 0xb84 <__floatsisf>
     4f8:	4b 01       	movw	r8, r22
     4fa:	5c 01       	movw	r10, r24
     4fc:	2d ec       	ldi	r18, 0xCD	; 205
     4fe:	3c ec       	ldi	r19, 0xCC	; 204
     500:	4c e4       	ldi	r20, 0x4C	; 76
     502:	5e e3       	ldi	r21, 0x3E	; 62
     504:	c7 01       	movw	r24, r14
     506:	b6 01       	movw	r22, r12
     508:	f1 d3       	rcall	.+2018   	; 0xcec <__mulsf3>
     50a:	9b 01       	movw	r18, r22
     50c:	ac 01       	movw	r20, r24
     50e:	c5 01       	movw	r24, r10
     510:	b4 01       	movw	r22, r8
     512:	99 d2       	rcall	.+1330   	; 0xa46 <__cmpsf2>
     514:	88 23       	and	r24, r24
     516:	cc f5       	brge	.+114    	; 0x58a <__stack+0x12b>
				// get average freq
				short_last_frequencies[short_freq_ar_i++] = frequency;
     518:	80 91 ae 00 	lds	r24, 0x00AE	; 0x8000ae <__data_end>
     51c:	90 91 af 00 	lds	r25, 0x00AF	; 0x8000af <__data_end+0x1>
     520:	9c 01       	movw	r18, r24
     522:	2f 5f       	subi	r18, 0xFF	; 255
     524:	3f 4f       	sbci	r19, 0xFF	; 255
     526:	30 93 af 00 	sts	0x00AF, r19	; 0x8000af <__data_end+0x1>
     52a:	20 93 ae 00 	sts	0x00AE, r18	; 0x8000ae <__data_end>
     52e:	40 91 d3 01 	lds	r20, 0x01D3	; 0x8001d3 <_ZL9frequency>
     532:	50 91 d4 01 	lds	r21, 0x01D4	; 0x8001d4 <_ZL9frequency+0x1>
     536:	60 91 d5 01 	lds	r22, 0x01D5	; 0x8001d5 <_ZL9frequency+0x2>
     53a:	70 91 d6 01 	lds	r23, 0x01D6	; 0x8001d6 <_ZL9frequency+0x3>
     53e:	88 0f       	add	r24, r24
     540:	99 1f       	adc	r25, r25
     542:	88 0f       	add	r24, r24
     544:	99 1f       	adc	r25, r25
     546:	fc 01       	movw	r30, r24
     548:	e0 55       	subi	r30, 0x50	; 80
     54a:	ff 4f       	sbci	r31, 0xFF	; 255
     54c:	40 83       	st	Z, r20
     54e:	51 83       	std	Z+1, r21	; 0x01
     550:	62 83       	std	Z+2, r22	; 0x02
     552:	73 83       	std	Z+3, r23	; 0x03
				if (short_freq_ar_i >= SHORT_FREQ_AR_LEN) short_freq_ar_i = 0;
     554:	2a 30       	cpi	r18, 0x0A	; 10
     556:	31 05       	cpc	r19, r1
     558:	24 f0       	brlt	.+8      	; 0x562 <__stack+0x103>
     55a:	10 92 af 00 	sts	0x00AF, r1	; 0x8000af <__data_end+0x1>
     55e:	10 92 ae 00 	sts	0x00AE, r1	; 0x8000ae <__data_end>
				float short_average_freq = get_av(short_last_frequencies, SHORT_FREQ_AR_LEN);
     562:	6a e0       	ldi	r22, 0x0A	; 10
     564:	70 e0       	ldi	r23, 0x00	; 0
     566:	80 eb       	ldi	r24, 0xB0	; 176
     568:	90 e0       	ldi	r25, 0x00	; 0
     56a:	11 df       	rcall	.-478    	; 0x38e <_Z6get_avPdi>
     56c:	ab 01       	movw	r20, r22
     56e:	bc 01       	movw	r22, r24

				getNoteByFreq(&currentNote, short_average_freq); // RECOGNIZE NOTE
     570:	89 e0       	ldi	r24, 0x09	; 9
     572:	92 e0       	ldi	r25, 0x02	; 2
     574:	14 d0       	rcall	.+40     	; 0x59e <_Z13getNoteByFreqP4Noted>
				if (currentNote.valid) {
     576:	80 91 17 02 	lds	r24, 0x0217	; 0x800217 <currentNote+0xe>
     57a:	88 23       	and	r24, r24
     57c:	31 f0       	breq	.+12     	; 0x58a <__stack+0x12b>
					//printFreqNote(short_average_freq, currentNote);
					//displ->displayNote(currentNote, short_average_freq); // DISPLAY NOTE
					
					USART_Transmit(currentNote.note);
     57e:	80 91 09 02 	lds	r24, 0x0209	; 0x800209 <currentNote>
     582:	dc d1       	rcall	.+952    	; 0x93c <_Z14USART_Transmith>
					USART_Transmit_ar(newLine);
     584:	ce 01       	movw	r24, r28
     586:	01 96       	adiw	r24, 0x01	; 1
     588:	dd d1       	rcall	.+954    	; 0x944 <_Z17USART_Transmit_arPc>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     58a:	8f e1       	ldi	r24, 0x1F	; 31
     58c:	9e e4       	ldi	r25, 0x4E	; 78
     58e:	01 97       	sbiw	r24, 0x01	; 1
     590:	f1 f7       	brne	.-4      	; 0x58e <__stack+0x12f>
     592:	00 c0       	rjmp	.+0      	; 0x594 <__stack+0x135>
     594:	00 00       	nop
     596:	4f cf       	rjmp	.-354    	; 0x436 <main+0x1e>

00000598 <_GLOBAL__sub_I_currentNote>:
};

const char noteNames[] = {'C', 'C', 'D', 'D', 'E', 'F', 'F', 'G', 'G', 'A', 'A', 'B'};
const bool noteSharps[] = {false, true, false, true, false, false, true, false, true, false, true, false};

typedef struct {
     598:	10 92 17 02 	sts	0x0217, r1	; 0x800217 <currentNote+0xe>
     59c:	08 95       	ret

0000059e <_Z13getNoteByFreqP4Noted>:
	}

	return multiplier;
}

void getNoteByFreq(Note* note, double freq) {
     59e:	2f 92       	push	r2
     5a0:	3f 92       	push	r3
     5a2:	4f 92       	push	r4
     5a4:	5f 92       	push	r5
     5a6:	6f 92       	push	r6
     5a8:	7f 92       	push	r7
     5aa:	8f 92       	push	r8
     5ac:	9f 92       	push	r9
     5ae:	af 92       	push	r10
     5b0:	bf 92       	push	r11
     5b2:	cf 92       	push	r12
     5b4:	df 92       	push	r13
     5b6:	ef 92       	push	r14
     5b8:	ff 92       	push	r15
     5ba:	0f 93       	push	r16
     5bc:	1f 93       	push	r17
     5be:	cf 93       	push	r28
     5c0:	df 93       	push	r29
     5c2:	cd b7       	in	r28, 0x3d	; 61
     5c4:	de b7       	in	r29, 0x3e	; 62
     5c6:	2c 97       	sbiw	r28, 0x0c	; 12
     5c8:	0f b6       	in	r0, 0x3f	; 63
     5ca:	f8 94       	cli
     5cc:	de bf       	out	0x3e, r29	; 62
     5ce:	0f be       	out	0x3f, r0	; 63
     5d0:	cd bf       	out	0x3d, r28	; 61
     5d2:	9e 83       	std	Y+6, r25	; 0x06
     5d4:	8d 83       	std	Y+5, r24	; 0x05
     5d6:	49 83       	std	Y+1, r20	; 0x01
     5d8:	5a 83       	std	Y+2, r21	; 0x02
     5da:	6b 83       	std	Y+3, r22	; 0x03
     5dc:	7c 83       	std	Y+4, r23	; 0x04

#include "freqDetect.h"


bool isFreqLegal(double freq) {
	return freq >= MIN_FREQ && freq < MAX_FREQ;
     5de:	2b e9       	ldi	r18, 0x9B	; 155
     5e0:	38 e4       	ldi	r19, 0x48	; 72
     5e2:	4e e7       	ldi	r20, 0x7E	; 126
     5e4:	51 e4       	ldi	r21, 0x41	; 65
     5e6:	69 81       	ldd	r22, Y+1	; 0x01
     5e8:	7a 81       	ldd	r23, Y+2	; 0x02
     5ea:	8b 81       	ldd	r24, Y+3	; 0x03
     5ec:	9c 81       	ldd	r25, Y+4	; 0x04
     5ee:	7a d3       	rcall	.+1780   	; 0xce4 <__gesf2>
     5f0:	88 23       	and	r24, r24
     5f2:	0c f4       	brge	.+2      	; 0x5f6 <_Z13getNoteByFreqP4Noted+0x58>
     5f4:	f9 c0       	rjmp	.+498    	; 0x7e8 <_Z13getNoteByFreqP4Noted+0x24a>
     5f6:	22 e5       	ldi	r18, 0x52	; 82
     5f8:	38 e4       	ldi	r19, 0x48	; 72
     5fa:	4e ef       	ldi	r20, 0xFE	; 254
     5fc:	53 e4       	ldi	r21, 0x43	; 67
     5fe:	69 81       	ldd	r22, Y+1	; 0x01
     600:	7a 81       	ldd	r23, Y+2	; 0x02
     602:	8b 81       	ldd	r24, Y+3	; 0x03
     604:	9c 81       	ldd	r25, Y+4	; 0x04
     606:	1f d2       	rcall	.+1086   	; 0xa46 <__cmpsf2>
     608:	88 23       	and	r24, r24
     60a:	0c f0       	brlt	.+2      	; 0x60e <_Z13getNoteByFreqP4Noted+0x70>
     60c:	ed c0       	rjmp	.+474    	; 0x7e8 <_Z13getNoteByFreqP4Noted+0x24a>
     60e:	f0 c0       	rjmp	.+480    	; 0x7f0 <_Z13getNoteByFreqP4Noted+0x252>

// Determine in which octave lies the frequency and get a multiplier required to work with that octave
double get_octave_multiplier(double freq) {
	double multiplier = 1.0;
	// double last_octave_freq = 0;
	while (freq > FIRST_OCT_MAX_FREQ * multiplier) {
     610:	0f 2e       	mov	r0, r31
     612:	c1 2c       	mov	r12, r1
     614:	d1 2c       	mov	r13, r1
     616:	f0 e8       	ldi	r31, 0x80	; 128
     618:	ef 2e       	mov	r14, r31
     61a:	ff e3       	ldi	r31, 0x3F	; 63
     61c:	ff 2e       	mov	r15, r31
     61e:	f0 2d       	mov	r31, r0
		multiplier *= 2.0;
     620:	a7 01       	movw	r20, r14
     622:	96 01       	movw	r18, r12
     624:	c7 01       	movw	r24, r14
     626:	b6 01       	movw	r22, r12
     628:	aa d1       	rcall	.+852    	; 0x97e <__addsf3>
     62a:	6b 01       	movw	r12, r22
     62c:	7c 01       	movw	r14, r24

// Determine in which octave lies the frequency and get a multiplier required to work with that octave
double get_octave_multiplier(double freq) {
	double multiplier = 1.0;
	// double last_octave_freq = 0;
	while (freq > FIRST_OCT_MAX_FREQ * multiplier) {
     62e:	2b e9       	ldi	r18, 0x9B	; 155
     630:	38 e4       	ldi	r19, 0x48	; 72
     632:	4e ef       	ldi	r20, 0xFE	; 254
     634:	51 e4       	ldi	r21, 0x41	; 65
     636:	5a d3       	rcall	.+1716   	; 0xcec <__mulsf3>
     638:	4b 01       	movw	r8, r22
     63a:	5c 01       	movw	r10, r24
     63c:	9b 01       	movw	r18, r22
     63e:	ac 01       	movw	r20, r24
     640:	69 81       	ldd	r22, Y+1	; 0x01
     642:	7a 81       	ldd	r23, Y+2	; 0x02
     644:	8b 81       	ldd	r24, Y+3	; 0x03
     646:	9c 81       	ldd	r25, Y+4	; 0x04
     648:	4d d3       	rcall	.+1690   	; 0xce4 <__gesf2>
     64a:	18 16       	cp	r1, r24
     64c:	4c f3       	brlt	.-46     	; 0x620 <_Z13getNoteByFreqP4Noted+0x82>
     64e:	8f 82       	std	Y+7, r8	; 0x07
     650:	98 86       	std	Y+8, r9	; 0x08
     652:	a9 86       	std	Y+9, r10	; 0x09
     654:	ba 86       	std	Y+10, r11	; 0x0a
     656:	e8 c0       	rjmp	.+464    	; 0x828 <_Z13getNoteByFreqP4Noted+0x28a>
	double multiplier = get_octave_multiplier(freq);

	// Find closest note in O(n) time
	double min_distance = MAX_FREQ;
	int closest_i = -1;
	for (int note_i = 0; note_i < NOTES_IN_OCTAVE; note_i++) {
     658:	1c 01       	movw	r2, r24
     65a:	51 01       	movw	r10, r2
     65c:	81 e0       	ldi	r24, 0x01	; 1
     65e:	a8 1a       	sub	r10, r24
     660:	b1 08       	sbc	r11, r1
		double distance = abs(freq - (firstOctaveFreqs[note_i]*multiplier));
     662:	ab 85       	ldd	r26, Y+11	; 0x0b
     664:	bc 85       	ldd	r27, Y+12	; 0x0c
     666:	6d 91       	ld	r22, X+
     668:	7d 91       	ld	r23, X+
     66a:	8d 91       	ld	r24, X+
     66c:	9d 91       	ld	r25, X+
     66e:	bc 87       	std	Y+12, r27	; 0x0c
     670:	ab 87       	std	Y+11, r26	; 0x0b
     672:	a7 01       	movw	r20, r14
     674:	96 01       	movw	r18, r12
     676:	3a d3       	rcall	.+1652   	; 0xcec <__mulsf3>
     678:	9b 01       	movw	r18, r22
     67a:	ac 01       	movw	r20, r24
     67c:	69 81       	ldd	r22, Y+1	; 0x01
     67e:	7a 81       	ldd	r23, Y+2	; 0x02
     680:	8b 81       	ldd	r24, Y+3	; 0x03
     682:	9c 81       	ldd	r25, Y+4	; 0x04
     684:	7b d1       	rcall	.+758    	; 0x97c <__subsf3>
     686:	4b d2       	rcall	.+1174   	; 0xb1e <__fixsfsi>
     688:	9b 01       	movw	r18, r22
     68a:	77 23       	and	r23, r23
     68c:	24 f4       	brge	.+8      	; 0x696 <_Z13getNoteByFreqP4Noted+0xf8>
     68e:	22 27       	eor	r18, r18
     690:	33 27       	eor	r19, r19
     692:	26 1b       	sub	r18, r22
     694:	37 0b       	sbc	r19, r23
     696:	b9 01       	movw	r22, r18
     698:	33 0f       	add	r19, r19
     69a:	88 0b       	sbc	r24, r24
     69c:	99 0b       	sbc	r25, r25
     69e:	72 d2       	rcall	.+1252   	; 0xb84 <__floatsisf>
     6a0:	96 2e       	mov	r9, r22
     6a2:	07 2f       	mov	r16, r23
     6a4:	18 2f       	mov	r17, r24
     6a6:	89 2e       	mov	r8, r25
		if (distance < min_distance) {
     6a8:	27 2d       	mov	r18, r7
     6aa:	34 2d       	mov	r19, r4
     6ac:	45 2d       	mov	r20, r5
     6ae:	56 2d       	mov	r21, r6
     6b0:	ca d1       	rcall	.+916    	; 0xa46 <__cmpsf2>
     6b2:	88 23       	and	r24, r24
     6b4:	54 f4       	brge	.+20     	; 0x6ca <_Z13getNoteByFreqP4Noted+0x12c>
	double multiplier = get_octave_multiplier(freq);

	// Find closest note in O(n) time
	double min_distance = MAX_FREQ;
	int closest_i = -1;
	for (int note_i = 0; note_i < NOTES_IN_OCTAVE; note_i++) {
     6b6:	c1 01       	movw	r24, r2
     6b8:	01 96       	adiw	r24, 0x01	; 1
		double distance = abs(freq - (firstOctaveFreqs[note_i]*multiplier));
     6ba:	79 2c       	mov	r7, r9
     6bc:	40 2e       	mov	r4, r16
     6be:	51 2e       	mov	r5, r17
     6c0:	68 2c       	mov	r6, r8
	double multiplier = get_octave_multiplier(freq);

	// Find closest note in O(n) time
	double min_distance = MAX_FREQ;
	int closest_i = -1;
	for (int note_i = 0; note_i < NOTES_IN_OCTAVE; note_i++) {
     6c2:	8c 30       	cpi	r24, 0x0C	; 12
     6c4:	91 05       	cpc	r25, r1
     6c6:	41 f6       	brne	.-112    	; 0x658 <_Z13getNoteByFreqP4Noted+0xba>
     6c8:	01 c0       	rjmp	.+2      	; 0x6cc <_Z13getNoteByFreqP4Noted+0x12e>
     6ca:	15 01       	movw	r2, r10
			break;
		}
	}

	// Fill note struct
	note->note = noteNames[closest_i];
     6cc:	f1 01       	movw	r30, r2
     6ce:	ef 58       	subi	r30, 0x8F	; 143
     6d0:	ff 4f       	sbci	r31, 0xFF	; 255
     6d2:	80 81       	ld	r24, Z
     6d4:	ed 81       	ldd	r30, Y+5	; 0x05
     6d6:	fe 81       	ldd	r31, Y+6	; 0x06
     6d8:	80 83       	st	Z, r24
	note->sharp = noteSharps[closest_i];
     6da:	f1 01       	movw	r30, r2
     6dc:	eb 59       	subi	r30, 0x9B	; 155
     6de:	ff 4f       	sbci	r31, 0xFF	; 255
     6e0:	80 81       	ld	r24, Z
     6e2:	ad 81       	ldd	r26, Y+5	; 0x05
     6e4:	be 81       	ldd	r27, Y+6	; 0x06
     6e6:	11 96       	adiw	r26, 0x01	; 1
     6e8:	8c 93       	st	X, r24
	note->freq = firstOctaveFreqs[closest_i]*multiplier;
     6ea:	f1 01       	movw	r30, r2
     6ec:	ee 0f       	add	r30, r30
     6ee:	ff 1f       	adc	r31, r31
     6f0:	ee 0f       	add	r30, r30
     6f2:	ff 1f       	adc	r31, r31
     6f4:	e3 58       	subi	r30, 0x83	; 131
     6f6:	ff 4f       	sbci	r31, 0xFF	; 255
     6f8:	20 81       	ld	r18, Z
     6fa:	31 81       	ldd	r19, Z+1	; 0x01
     6fc:	42 81       	ldd	r20, Z+2	; 0x02
     6fe:	53 81       	ldd	r21, Z+3	; 0x03
     700:	c7 01       	movw	r24, r14
     702:	b6 01       	movw	r22, r12
     704:	f3 d2       	rcall	.+1510   	; 0xcec <__mulsf3>
     706:	2b 01       	movw	r4, r22
     708:	3c 01       	movw	r6, r24
     70a:	ed 81       	ldd	r30, Y+5	; 0x05
     70c:	fe 81       	ldd	r31, Y+6	; 0x06
     70e:	62 83       	std	Z+2, r22	; 0x02
     710:	73 83       	std	Z+3, r23	; 0x03
     712:	84 83       	std	Z+4, r24	; 0x04
     714:	95 83       	std	Z+5, r25	; 0x05
	note->valid = true;
     716:	81 e0       	ldi	r24, 0x01	; 1
     718:	86 87       	std	Z+14, r24	; 0x0e

	if (closest_i == NOTES_IN_OCTAVE-1) {
     71a:	fb e0       	ldi	r31, 0x0B	; 11
     71c:	2f 16       	cp	r2, r31
     71e:	31 04       	cpc	r3, r1
     720:	59 f4       	brne	.+22     	; 0x738 <_Z13getNoteByFreqP4Noted+0x19a>
		note->max_freq = FIRST_OCT_MAX_FREQ*multiplier;
     722:	8f 81       	ldd	r24, Y+7	; 0x07
     724:	98 85       	ldd	r25, Y+8	; 0x08
     726:	a9 85       	ldd	r26, Y+9	; 0x09
     728:	ba 85       	ldd	r27, Y+10	; 0x0a
     72a:	ed 81       	ldd	r30, Y+5	; 0x05
     72c:	fe 81       	ldd	r31, Y+6	; 0x06
     72e:	82 87       	std	Z+10, r24	; 0x0a
     730:	93 87       	std	Z+11, r25	; 0x0b
     732:	a4 87       	std	Z+12, r26	; 0x0c
     734:	b5 87       	std	Z+13, r27	; 0x0d
     736:	32 c0       	rjmp	.+100    	; 0x79c <_Z13getNoteByFreqP4Noted+0x1fe>
		} else {
		note->max_freq = note->freq + (((firstOctaveFreqs[closest_i+1]*multiplier) - note->freq)/2.0);
     738:	f1 01       	movw	r30, r2
     73a:	ee 0f       	add	r30, r30
     73c:	ff 1f       	adc	r31, r31
     73e:	ee 0f       	add	r30, r30
     740:	ff 1f       	adc	r31, r31
     742:	ef 57       	subi	r30, 0x7F	; 127
     744:	ff 4f       	sbci	r31, 0xFF	; 255
     746:	20 81       	ld	r18, Z
     748:	31 81       	ldd	r19, Z+1	; 0x01
     74a:	42 81       	ldd	r20, Z+2	; 0x02
     74c:	53 81       	ldd	r21, Z+3	; 0x03
     74e:	c7 01       	movw	r24, r14
     750:	b6 01       	movw	r22, r12
     752:	cc d2       	rcall	.+1432   	; 0xcec <__mulsf3>
     754:	a3 01       	movw	r20, r6
     756:	92 01       	movw	r18, r4
     758:	11 d1       	rcall	.+546    	; 0x97c <__subsf3>
     75a:	20 e0       	ldi	r18, 0x00	; 0
     75c:	30 e0       	ldi	r19, 0x00	; 0
     75e:	40 e0       	ldi	r20, 0x00	; 0
     760:	5f e3       	ldi	r21, 0x3F	; 63
     762:	c4 d2       	rcall	.+1416   	; 0xcec <__mulsf3>
     764:	a3 01       	movw	r20, r6
     766:	92 01       	movw	r18, r4
     768:	0a d1       	rcall	.+532    	; 0x97e <__addsf3>
     76a:	ad 81       	ldd	r26, Y+5	; 0x05
     76c:	be 81       	ldd	r27, Y+6	; 0x06
     76e:	1a 96       	adiw	r26, 0x0a	; 10
     770:	6d 93       	st	X+, r22
     772:	7d 93       	st	X+, r23
     774:	8d 93       	st	X+, r24
     776:	9c 93       	st	X, r25
     778:	1d 97       	sbiw	r26, 0x0d	; 13
	}

	if (closest_i == 0) {
     77a:	21 14       	cp	r2, r1
     77c:	31 04       	cpc	r3, r1
     77e:	71 f4       	brne	.+28     	; 0x79c <_Z13getNoteByFreqP4Noted+0x1fe>
		note->min_freq = MIN_FREQ*multiplier;
     780:	2b e9       	ldi	r18, 0x9B	; 155
     782:	38 e4       	ldi	r19, 0x48	; 72
     784:	4e e7       	ldi	r20, 0x7E	; 126
     786:	51 e4       	ldi	r21, 0x41	; 65
     788:	c7 01       	movw	r24, r14
     78a:	b6 01       	movw	r22, r12
     78c:	af d2       	rcall	.+1374   	; 0xcec <__mulsf3>
     78e:	ed 81       	ldd	r30, Y+5	; 0x05
     790:	fe 81       	ldd	r31, Y+6	; 0x06
     792:	66 83       	std	Z+6, r22	; 0x06
     794:	77 83       	std	Z+7, r23	; 0x07
     796:	80 87       	std	Z+8, r24	; 0x08
     798:	91 87       	std	Z+9, r25	; 0x09
     79a:	b0 c0       	rjmp	.+352    	; 0x8fc <_Z13getNoteByFreqP4Noted+0x35e>
		} else {
		note->min_freq = note->freq - ((note->freq - (firstOctaveFreqs[closest_i-1]*multiplier))/2.0);
     79c:	f1 01       	movw	r30, r2
     79e:	ee 0f       	add	r30, r30
     7a0:	ff 1f       	adc	r31, r31
     7a2:	ee 0f       	add	r30, r30
     7a4:	ff 1f       	adc	r31, r31
     7a6:	e7 58       	subi	r30, 0x87	; 135
     7a8:	ff 4f       	sbci	r31, 0xFF	; 255
     7aa:	20 81       	ld	r18, Z
     7ac:	31 81       	ldd	r19, Z+1	; 0x01
     7ae:	42 81       	ldd	r20, Z+2	; 0x02
     7b0:	53 81       	ldd	r21, Z+3	; 0x03
     7b2:	c7 01       	movw	r24, r14
     7b4:	b6 01       	movw	r22, r12
     7b6:	9a d2       	rcall	.+1332   	; 0xcec <__mulsf3>
     7b8:	9b 01       	movw	r18, r22
     7ba:	ac 01       	movw	r20, r24
     7bc:	c3 01       	movw	r24, r6
     7be:	b2 01       	movw	r22, r4
     7c0:	dd d0       	rcall	.+442    	; 0x97c <__subsf3>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	5f e3       	ldi	r21, 0x3F	; 63
     7ca:	90 d2       	rcall	.+1312   	; 0xcec <__mulsf3>
     7cc:	9b 01       	movw	r18, r22
     7ce:	ac 01       	movw	r20, r24
     7d0:	c3 01       	movw	r24, r6
     7d2:	b2 01       	movw	r22, r4
     7d4:	d3 d0       	rcall	.+422    	; 0x97c <__subsf3>
     7d6:	ad 81       	ldd	r26, Y+5	; 0x05
     7d8:	be 81       	ldd	r27, Y+6	; 0x06
     7da:	16 96       	adiw	r26, 0x06	; 6
     7dc:	6d 93       	st	X+, r22
     7de:	7d 93       	st	X+, r23
     7e0:	8d 93       	st	X+, r24
     7e2:	9c 93       	st	X, r25
     7e4:	19 97       	sbiw	r26, 0x09	; 9
     7e6:	8a c0       	rjmp	.+276    	; 0x8fc <_Z13getNoteByFreqP4Noted+0x35e>
	return multiplier;
}

void getNoteByFreq(Note* note, double freq) {
	if (!isFreqLegal(freq)) {
		note->valid = false;
     7e8:	ed 81       	ldd	r30, Y+5	; 0x05
     7ea:	fe 81       	ldd	r31, Y+6	; 0x06
     7ec:	16 86       	std	Z+14, r1	; 0x0e
		return;
     7ee:	86 c0       	rjmp	.+268    	; 0x8fc <_Z13getNoteByFreqP4Noted+0x35e>

// Determine in which octave lies the frequency and get a multiplier required to work with that octave
double get_octave_multiplier(double freq) {
	double multiplier = 1.0;
	// double last_octave_freq = 0;
	while (freq > FIRST_OCT_MAX_FREQ * multiplier) {
     7f0:	2b e9       	ldi	r18, 0x9B	; 155
     7f2:	38 e4       	ldi	r19, 0x48	; 72
     7f4:	4e ef       	ldi	r20, 0xFE	; 254
     7f6:	51 e4       	ldi	r21, 0x41	; 65
     7f8:	69 81       	ldd	r22, Y+1	; 0x01
     7fa:	7a 81       	ldd	r23, Y+2	; 0x02
     7fc:	8b 81       	ldd	r24, Y+3	; 0x03
     7fe:	9c 81       	ldd	r25, Y+4	; 0x04
     800:	71 d2       	rcall	.+1250   	; 0xce4 <__gesf2>
     802:	18 16       	cp	r1, r24
     804:	0c f4       	brge	.+2      	; 0x808 <_Z13getNoteByFreqP4Noted+0x26a>
     806:	04 cf       	rjmp	.-504    	; 0x610 <_Z13getNoteByFreqP4Noted+0x72>
     808:	8b e9       	ldi	r24, 0x9B	; 155
     80a:	98 e4       	ldi	r25, 0x48	; 72
     80c:	ae ef       	ldi	r26, 0xFE	; 254
     80e:	b1 e4       	ldi	r27, 0x41	; 65
     810:	8f 83       	std	Y+7, r24	; 0x07
     812:	98 87       	std	Y+8, r25	; 0x08
     814:	a9 87       	std	Y+9, r26	; 0x09
     816:	ba 87       	std	Y+10, r27	; 0x0a
     818:	0f 2e       	mov	r0, r31
     81a:	c1 2c       	mov	r12, r1
     81c:	d1 2c       	mov	r13, r1
     81e:	f0 e8       	ldi	r31, 0x80	; 128
     820:	ef 2e       	mov	r14, r31
     822:	ff e3       	ldi	r31, 0x3F	; 63
     824:	ff 2e       	mov	r15, r31
     826:	f0 2d       	mov	r31, r0

	// Find closest note in O(n) time
	double min_distance = MAX_FREQ;
	int closest_i = -1;
	for (int note_i = 0; note_i < NOTES_IN_OCTAVE; note_i++) {
		double distance = abs(freq - (firstOctaveFreqs[note_i]*multiplier));
     828:	23 e1       	ldi	r18, 0x13	; 19
     82a:	30 ed       	ldi	r19, 0xD0	; 208
     82c:	42 e8       	ldi	r20, 0x82	; 130
     82e:	51 e4       	ldi	r21, 0x41	; 65
     830:	c7 01       	movw	r24, r14
     832:	b6 01       	movw	r22, r12
     834:	5b d2       	rcall	.+1206   	; 0xcec <__mulsf3>
     836:	9b 01       	movw	r18, r22
     838:	ac 01       	movw	r20, r24
     83a:	69 81       	ldd	r22, Y+1	; 0x01
     83c:	7a 81       	ldd	r23, Y+2	; 0x02
     83e:	8b 81       	ldd	r24, Y+3	; 0x03
     840:	9c 81       	ldd	r25, Y+4	; 0x04
     842:	9c d0       	rcall	.+312    	; 0x97c <__subsf3>
     844:	6c d1       	rcall	.+728    	; 0xb1e <__fixsfsi>
     846:	9b 01       	movw	r18, r22
     848:	77 23       	and	r23, r23
     84a:	24 f4       	brge	.+8      	; 0x854 <_Z13getNoteByFreqP4Noted+0x2b6>
     84c:	22 27       	eor	r18, r18
     84e:	33 27       	eor	r19, r19
     850:	26 1b       	sub	r18, r22
     852:	37 0b       	sbc	r19, r23
     854:	b9 01       	movw	r22, r18
     856:	33 0f       	add	r19, r19
     858:	88 0b       	sbc	r24, r24
     85a:	99 0b       	sbc	r25, r25
     85c:	93 d1       	rcall	.+806    	; 0xb84 <__floatsisf>
     85e:	76 2e       	mov	r7, r22
     860:	47 2e       	mov	r4, r23
     862:	58 2e       	mov	r5, r24
     864:	69 2e       	mov	r6, r25
		if (distance < min_distance) {
     866:	22 e5       	ldi	r18, 0x52	; 82
     868:	38 e4       	ldi	r19, 0x48	; 72
     86a:	4e ef       	ldi	r20, 0xFE	; 254
     86c:	53 e4       	ldi	r21, 0x43	; 67
     86e:	eb d0       	rcall	.+470    	; 0xa46 <__cmpsf2>
     870:	88 23       	and	r24, r24
     872:	44 f4       	brge	.+16     	; 0x884 <_Z13getNoteByFreqP4Noted+0x2e6>
     874:	a1 e8       	ldi	r26, 0x81	; 129
     876:	b0 e0       	ldi	r27, 0x00	; 0
	double multiplier = get_octave_multiplier(freq);

	// Find closest note in O(n) time
	double min_distance = MAX_FREQ;
	int closest_i = -1;
	for (int note_i = 0; note_i < NOTES_IN_OCTAVE; note_i++) {
     878:	22 24       	eor	r2, r2
     87a:	23 94       	inc	r2
     87c:	31 2c       	mov	r3, r1
     87e:	bc 87       	std	Y+12, r27	; 0x0c
     880:	ab 87       	std	Y+11, r26	; 0x0b
     882:	eb ce       	rjmp	.-554    	; 0x65a <_Z13getNoteByFreqP4Noted+0xbc>
			break;
		}
	}

	// Fill note struct
	note->note = noteNames[closest_i];
     884:	80 91 70 00 	lds	r24, 0x0070	; 0x800070 <_ZL10noteSharps+0xb>
     888:	ed 81       	ldd	r30, Y+5	; 0x05
     88a:	fe 81       	ldd	r31, Y+6	; 0x06
     88c:	80 83       	st	Z, r24
	note->sharp = noteSharps[closest_i];
     88e:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <_ZL8slopeTol>
     892:	81 83       	std	Z+1, r24	; 0x01
	note->freq = firstOctaveFreqs[closest_i]*multiplier;
     894:	20 91 79 00 	lds	r18, 0x0079	; 0x800079 <_ZL9noteNames+0x8>
     898:	30 91 7a 00 	lds	r19, 0x007A	; 0x80007a <_ZL9noteNames+0x9>
     89c:	40 91 7b 00 	lds	r20, 0x007B	; 0x80007b <_ZL9noteNames+0xa>
     8a0:	50 91 7c 00 	lds	r21, 0x007C	; 0x80007c <_ZL9noteNames+0xb>
     8a4:	c7 01       	movw	r24, r14
     8a6:	b6 01       	movw	r22, r12
     8a8:	21 d2       	rcall	.+1090   	; 0xcec <__mulsf3>
     8aa:	2b 01       	movw	r4, r22
     8ac:	3c 01       	movw	r6, r24
     8ae:	ad 81       	ldd	r26, Y+5	; 0x05
     8b0:	be 81       	ldd	r27, Y+6	; 0x06
     8b2:	12 96       	adiw	r26, 0x02	; 2
     8b4:	6d 93       	st	X+, r22
     8b6:	7d 93       	st	X+, r23
     8b8:	8d 93       	st	X+, r24
     8ba:	9c 93       	st	X, r25
     8bc:	15 97       	sbiw	r26, 0x05	; 5
	note->valid = true;
     8be:	81 e0       	ldi	r24, 0x01	; 1
     8c0:	1e 96       	adiw	r26, 0x0e	; 14
     8c2:	8c 93       	st	X, r24

	if (closest_i == NOTES_IN_OCTAVE-1) {
		note->max_freq = FIRST_OCT_MAX_FREQ*multiplier;
		} else {
		note->max_freq = note->freq + (((firstOctaveFreqs[closest_i+1]*multiplier) - note->freq)/2.0);
     8c4:	23 e1       	ldi	r18, 0x13	; 19
     8c6:	30 ed       	ldi	r19, 0xD0	; 208
     8c8:	42 e8       	ldi	r20, 0x82	; 130
     8ca:	51 e4       	ldi	r21, 0x41	; 65
     8cc:	c7 01       	movw	r24, r14
     8ce:	b6 01       	movw	r22, r12
     8d0:	0d d2       	rcall	.+1050   	; 0xcec <__mulsf3>
     8d2:	a3 01       	movw	r20, r6
     8d4:	92 01       	movw	r18, r4
     8d6:	52 d0       	rcall	.+164    	; 0x97c <__subsf3>
     8d8:	20 e0       	ldi	r18, 0x00	; 0
     8da:	30 e0       	ldi	r19, 0x00	; 0
     8dc:	40 e0       	ldi	r20, 0x00	; 0
     8de:	5f e3       	ldi	r21, 0x3F	; 63
     8e0:	05 d2       	rcall	.+1034   	; 0xcec <__mulsf3>
     8e2:	a3 01       	movw	r20, r6
     8e4:	92 01       	movw	r18, r4
     8e6:	4b d0       	rcall	.+150    	; 0x97e <__addsf3>
     8e8:	ed 81       	ldd	r30, Y+5	; 0x05
     8ea:	fe 81       	ldd	r31, Y+6	; 0x06
     8ec:	62 87       	std	Z+10, r22	; 0x0a
     8ee:	73 87       	std	Z+11, r23	; 0x0b
     8f0:	84 87       	std	Z+12, r24	; 0x0c
     8f2:	95 87       	std	Z+13, r25	; 0x0d
     8f4:	22 24       	eor	r2, r2
     8f6:	2a 94       	dec	r2
     8f8:	32 2c       	mov	r3, r2
     8fa:	50 cf       	rjmp	.-352    	; 0x79c <_Z13getNoteByFreqP4Noted+0x1fe>
	if (closest_i == 0) {
		note->min_freq = MIN_FREQ*multiplier;
		} else {
		note->min_freq = note->freq - ((note->freq - (firstOctaveFreqs[closest_i-1]*multiplier))/2.0);
	}
}
     8fc:	2c 96       	adiw	r28, 0x0c	; 12
     8fe:	0f b6       	in	r0, 0x3f	; 63
     900:	f8 94       	cli
     902:	de bf       	out	0x3e, r29	; 62
     904:	0f be       	out	0x3f, r0	; 63
     906:	cd bf       	out	0x3d, r28	; 61
     908:	df 91       	pop	r29
     90a:	cf 91       	pop	r28
     90c:	1f 91       	pop	r17
     90e:	0f 91       	pop	r16
     910:	ff 90       	pop	r15
     912:	ef 90       	pop	r14
     914:	df 90       	pop	r13
     916:	cf 90       	pop	r12
     918:	bf 90       	pop	r11
     91a:	af 90       	pop	r10
     91c:	9f 90       	pop	r9
     91e:	8f 90       	pop	r8
     920:	7f 90       	pop	r7
     922:	6f 90       	pop	r6
     924:	5f 90       	pop	r5
     926:	4f 90       	pop	r4
     928:	3f 90       	pop	r3
     92a:	2f 90       	pop	r2
     92c:	08 95       	ret

0000092e <_Z10USART_Initj>:
#include "serial.h"

void USART_Init (unsigned int ubrr)
{
	/* Set baud rate */
	UBRRH = (unsigned char)(ubrr>>8);
     92e:	90 bd       	out	0x20, r25	; 32
	UBRRL = (unsigned char)ubrr;
     930:	89 b9       	out	0x09, r24	; 9
	/* Enable receiver and transmitter */
	UCSRB = (1<<RXEN)|(1<<TXEN);
     932:	88 e1       	ldi	r24, 0x18	; 24
     934:	8a b9       	out	0x0a, r24	; 10
	/* Set frame format: 8data, 2stop bit */
	UCSRC = (1<<URSEL)|(1<<USBS)|(3<<UCSZ0);
     936:	8e e8       	ldi	r24, 0x8E	; 142
     938:	80 bd       	out	0x20, r24	; 32
     93a:	08 95       	ret

0000093c <_Z14USART_Transmith>:
}

void USART_Transmit (unsigned char data) {
	/* Wait for empty transmit buffer */
	while ( !( UCSRA & (1<<UDRE)) );
     93c:	5d 9b       	sbis	0x0b, 5	; 11
     93e:	fe cf       	rjmp	.-4      	; 0x93c <_Z14USART_Transmith>
	/* Put data into buffer, sends the data */
	UDR = data;
     940:	8c b9       	out	0x0c, r24	; 12
     942:	08 95       	ret

00000944 <_Z17USART_Transmit_arPc>:
}

void USART_Transmit_ar (char* data) {
     944:	0f 93       	push	r16
     946:	1f 93       	push	r17
     948:	cf 93       	push	r28
     94a:	df 93       	push	r29
	int len = strlen(data);
     94c:	fc 01       	movw	r30, r24
     94e:	01 90       	ld	r0, Z+
     950:	00 20       	and	r0, r0
     952:	e9 f7       	brne	.-6      	; 0x94e <_Z17USART_Transmit_arPc+0xa>
     954:	31 97       	sbiw	r30, 0x01	; 1
     956:	e8 1b       	sub	r30, r24
     958:	f9 0b       	sbc	r31, r25
	for (int i = 0; i < len; i++) {
     95a:	1e 16       	cp	r1, r30
     95c:	1f 06       	cpc	r1, r31
     95e:	4c f4       	brge	.+18     	; 0x972 <_Z17USART_Transmit_arPc+0x2e>
     960:	ec 01       	movw	r28, r24
     962:	8c 01       	movw	r16, r24
     964:	0e 0f       	add	r16, r30
     966:	1f 1f       	adc	r17, r31
		USART_Transmit(data[i]);
     968:	89 91       	ld	r24, Y+
     96a:	e8 df       	rcall	.-48     	; 0x93c <_Z14USART_Transmith>
	UDR = data;
}

void USART_Transmit_ar (char* data) {
	int len = strlen(data);
	for (int i = 0; i < len; i++) {
     96c:	c0 17       	cp	r28, r16
     96e:	d1 07       	cpc	r29, r17
     970:	d9 f7       	brne	.-10     	; 0x968 <_Z17USART_Transmit_arPc+0x24>
		USART_Transmit(data[i]);
	}
}
     972:	df 91       	pop	r29
     974:	cf 91       	pop	r28
     976:	1f 91       	pop	r17
     978:	0f 91       	pop	r16
     97a:	08 95       	ret

0000097c <__subsf3>:
     97c:	50 58       	subi	r21, 0x80	; 128

0000097e <__addsf3>:
     97e:	bb 27       	eor	r27, r27
     980:	aa 27       	eor	r26, r26
     982:	0e d0       	rcall	.+28     	; 0x9a0 <__addsf3x>
     984:	75 c1       	rjmp	.+746    	; 0xc70 <__fp_round>
     986:	66 d1       	rcall	.+716    	; 0xc54 <__fp_pscA>
     988:	30 f0       	brcs	.+12     	; 0x996 <__addsf3+0x18>
     98a:	6b d1       	rcall	.+726    	; 0xc62 <__fp_pscB>
     98c:	20 f0       	brcs	.+8      	; 0x996 <__addsf3+0x18>
     98e:	31 f4       	brne	.+12     	; 0x99c <__addsf3+0x1e>
     990:	9f 3f       	cpi	r25, 0xFF	; 255
     992:	11 f4       	brne	.+4      	; 0x998 <__addsf3+0x1a>
     994:	1e f4       	brtc	.+6      	; 0x99c <__addsf3+0x1e>
     996:	5b c1       	rjmp	.+694    	; 0xc4e <__fp_nan>
     998:	0e f4       	brtc	.+2      	; 0x99c <__addsf3+0x1e>
     99a:	e0 95       	com	r30
     99c:	e7 fb       	bst	r30, 7
     99e:	51 c1       	rjmp	.+674    	; 0xc42 <__fp_inf>

000009a0 <__addsf3x>:
     9a0:	e9 2f       	mov	r30, r25
     9a2:	77 d1       	rcall	.+750    	; 0xc92 <__fp_split3>
     9a4:	80 f3       	brcs	.-32     	; 0x986 <__addsf3+0x8>
     9a6:	ba 17       	cp	r27, r26
     9a8:	62 07       	cpc	r22, r18
     9aa:	73 07       	cpc	r23, r19
     9ac:	84 07       	cpc	r24, r20
     9ae:	95 07       	cpc	r25, r21
     9b0:	18 f0       	brcs	.+6      	; 0x9b8 <__addsf3x+0x18>
     9b2:	71 f4       	brne	.+28     	; 0x9d0 <__addsf3x+0x30>
     9b4:	9e f5       	brtc	.+102    	; 0xa1c <__addsf3x+0x7c>
     9b6:	8f c1       	rjmp	.+798    	; 0xcd6 <__fp_zero>
     9b8:	0e f4       	brtc	.+2      	; 0x9bc <__addsf3x+0x1c>
     9ba:	e0 95       	com	r30
     9bc:	0b 2e       	mov	r0, r27
     9be:	ba 2f       	mov	r27, r26
     9c0:	a0 2d       	mov	r26, r0
     9c2:	0b 01       	movw	r0, r22
     9c4:	b9 01       	movw	r22, r18
     9c6:	90 01       	movw	r18, r0
     9c8:	0c 01       	movw	r0, r24
     9ca:	ca 01       	movw	r24, r20
     9cc:	a0 01       	movw	r20, r0
     9ce:	11 24       	eor	r1, r1
     9d0:	ff 27       	eor	r31, r31
     9d2:	59 1b       	sub	r21, r25
     9d4:	99 f0       	breq	.+38     	; 0x9fc <__addsf3x+0x5c>
     9d6:	59 3f       	cpi	r21, 0xF9	; 249
     9d8:	50 f4       	brcc	.+20     	; 0x9ee <__addsf3x+0x4e>
     9da:	50 3e       	cpi	r21, 0xE0	; 224
     9dc:	68 f1       	brcs	.+90     	; 0xa38 <__addsf3x+0x98>
     9de:	1a 16       	cp	r1, r26
     9e0:	f0 40       	sbci	r31, 0x00	; 0
     9e2:	a2 2f       	mov	r26, r18
     9e4:	23 2f       	mov	r18, r19
     9e6:	34 2f       	mov	r19, r20
     9e8:	44 27       	eor	r20, r20
     9ea:	58 5f       	subi	r21, 0xF8	; 248
     9ec:	f3 cf       	rjmp	.-26     	; 0x9d4 <__addsf3x+0x34>
     9ee:	46 95       	lsr	r20
     9f0:	37 95       	ror	r19
     9f2:	27 95       	ror	r18
     9f4:	a7 95       	ror	r26
     9f6:	f0 40       	sbci	r31, 0x00	; 0
     9f8:	53 95       	inc	r21
     9fa:	c9 f7       	brne	.-14     	; 0x9ee <__addsf3x+0x4e>
     9fc:	7e f4       	brtc	.+30     	; 0xa1c <__addsf3x+0x7c>
     9fe:	1f 16       	cp	r1, r31
     a00:	ba 0b       	sbc	r27, r26
     a02:	62 0b       	sbc	r22, r18
     a04:	73 0b       	sbc	r23, r19
     a06:	84 0b       	sbc	r24, r20
     a08:	ba f0       	brmi	.+46     	; 0xa38 <__addsf3x+0x98>
     a0a:	91 50       	subi	r25, 0x01	; 1
     a0c:	a1 f0       	breq	.+40     	; 0xa36 <__addsf3x+0x96>
     a0e:	ff 0f       	add	r31, r31
     a10:	bb 1f       	adc	r27, r27
     a12:	66 1f       	adc	r22, r22
     a14:	77 1f       	adc	r23, r23
     a16:	88 1f       	adc	r24, r24
     a18:	c2 f7       	brpl	.-16     	; 0xa0a <__addsf3x+0x6a>
     a1a:	0e c0       	rjmp	.+28     	; 0xa38 <__addsf3x+0x98>
     a1c:	ba 0f       	add	r27, r26
     a1e:	62 1f       	adc	r22, r18
     a20:	73 1f       	adc	r23, r19
     a22:	84 1f       	adc	r24, r20
     a24:	48 f4       	brcc	.+18     	; 0xa38 <__addsf3x+0x98>
     a26:	87 95       	ror	r24
     a28:	77 95       	ror	r23
     a2a:	67 95       	ror	r22
     a2c:	b7 95       	ror	r27
     a2e:	f7 95       	ror	r31
     a30:	9e 3f       	cpi	r25, 0xFE	; 254
     a32:	08 f0       	brcs	.+2      	; 0xa36 <__addsf3x+0x96>
     a34:	b3 cf       	rjmp	.-154    	; 0x99c <__addsf3+0x1e>
     a36:	93 95       	inc	r25
     a38:	88 0f       	add	r24, r24
     a3a:	08 f0       	brcs	.+2      	; 0xa3e <__addsf3x+0x9e>
     a3c:	99 27       	eor	r25, r25
     a3e:	ee 0f       	add	r30, r30
     a40:	97 95       	ror	r25
     a42:	87 95       	ror	r24
     a44:	08 95       	ret

00000a46 <__cmpsf2>:
     a46:	d9 d0       	rcall	.+434    	; 0xbfa <__fp_cmp>
     a48:	08 f4       	brcc	.+2      	; 0xa4c <__cmpsf2+0x6>
     a4a:	81 e0       	ldi	r24, 0x01	; 1
     a4c:	08 95       	ret

00000a4e <__divsf3>:
     a4e:	0c d0       	rcall	.+24     	; 0xa68 <__divsf3x>
     a50:	0f c1       	rjmp	.+542    	; 0xc70 <__fp_round>
     a52:	07 d1       	rcall	.+526    	; 0xc62 <__fp_pscB>
     a54:	40 f0       	brcs	.+16     	; 0xa66 <__divsf3+0x18>
     a56:	fe d0       	rcall	.+508    	; 0xc54 <__fp_pscA>
     a58:	30 f0       	brcs	.+12     	; 0xa66 <__divsf3+0x18>
     a5a:	21 f4       	brne	.+8      	; 0xa64 <__divsf3+0x16>
     a5c:	5f 3f       	cpi	r21, 0xFF	; 255
     a5e:	19 f0       	breq	.+6      	; 0xa66 <__divsf3+0x18>
     a60:	f0 c0       	rjmp	.+480    	; 0xc42 <__fp_inf>
     a62:	51 11       	cpse	r21, r1
     a64:	39 c1       	rjmp	.+626    	; 0xcd8 <__fp_szero>
     a66:	f3 c0       	rjmp	.+486    	; 0xc4e <__fp_nan>

00000a68 <__divsf3x>:
     a68:	14 d1       	rcall	.+552    	; 0xc92 <__fp_split3>
     a6a:	98 f3       	brcs	.-26     	; 0xa52 <__divsf3+0x4>

00000a6c <__divsf3_pse>:
     a6c:	99 23       	and	r25, r25
     a6e:	c9 f3       	breq	.-14     	; 0xa62 <__divsf3+0x14>
     a70:	55 23       	and	r21, r21
     a72:	b1 f3       	breq	.-20     	; 0xa60 <__divsf3+0x12>
     a74:	95 1b       	sub	r25, r21
     a76:	55 0b       	sbc	r21, r21
     a78:	bb 27       	eor	r27, r27
     a7a:	aa 27       	eor	r26, r26
     a7c:	62 17       	cp	r22, r18
     a7e:	73 07       	cpc	r23, r19
     a80:	84 07       	cpc	r24, r20
     a82:	38 f0       	brcs	.+14     	; 0xa92 <__divsf3_pse+0x26>
     a84:	9f 5f       	subi	r25, 0xFF	; 255
     a86:	5f 4f       	sbci	r21, 0xFF	; 255
     a88:	22 0f       	add	r18, r18
     a8a:	33 1f       	adc	r19, r19
     a8c:	44 1f       	adc	r20, r20
     a8e:	aa 1f       	adc	r26, r26
     a90:	a9 f3       	breq	.-22     	; 0xa7c <__divsf3_pse+0x10>
     a92:	33 d0       	rcall	.+102    	; 0xafa <__divsf3_pse+0x8e>
     a94:	0e 2e       	mov	r0, r30
     a96:	3a f0       	brmi	.+14     	; 0xaa6 <__divsf3_pse+0x3a>
     a98:	e0 e8       	ldi	r30, 0x80	; 128
     a9a:	30 d0       	rcall	.+96     	; 0xafc <__divsf3_pse+0x90>
     a9c:	91 50       	subi	r25, 0x01	; 1
     a9e:	50 40       	sbci	r21, 0x00	; 0
     aa0:	e6 95       	lsr	r30
     aa2:	00 1c       	adc	r0, r0
     aa4:	ca f7       	brpl	.-14     	; 0xa98 <__divsf3_pse+0x2c>
     aa6:	29 d0       	rcall	.+82     	; 0xafa <__divsf3_pse+0x8e>
     aa8:	fe 2f       	mov	r31, r30
     aaa:	27 d0       	rcall	.+78     	; 0xafa <__divsf3_pse+0x8e>
     aac:	66 0f       	add	r22, r22
     aae:	77 1f       	adc	r23, r23
     ab0:	88 1f       	adc	r24, r24
     ab2:	bb 1f       	adc	r27, r27
     ab4:	26 17       	cp	r18, r22
     ab6:	37 07       	cpc	r19, r23
     ab8:	48 07       	cpc	r20, r24
     aba:	ab 07       	cpc	r26, r27
     abc:	b0 e8       	ldi	r27, 0x80	; 128
     abe:	09 f0       	breq	.+2      	; 0xac2 <__divsf3_pse+0x56>
     ac0:	bb 0b       	sbc	r27, r27
     ac2:	80 2d       	mov	r24, r0
     ac4:	bf 01       	movw	r22, r30
     ac6:	ff 27       	eor	r31, r31
     ac8:	93 58       	subi	r25, 0x83	; 131
     aca:	5f 4f       	sbci	r21, 0xFF	; 255
     acc:	2a f0       	brmi	.+10     	; 0xad8 <__divsf3_pse+0x6c>
     ace:	9e 3f       	cpi	r25, 0xFE	; 254
     ad0:	51 05       	cpc	r21, r1
     ad2:	68 f0       	brcs	.+26     	; 0xaee <__divsf3_pse+0x82>
     ad4:	b6 c0       	rjmp	.+364    	; 0xc42 <__fp_inf>
     ad6:	00 c1       	rjmp	.+512    	; 0xcd8 <__fp_szero>
     ad8:	5f 3f       	cpi	r21, 0xFF	; 255
     ada:	ec f3       	brlt	.-6      	; 0xad6 <__divsf3_pse+0x6a>
     adc:	98 3e       	cpi	r25, 0xE8	; 232
     ade:	dc f3       	brlt	.-10     	; 0xad6 <__divsf3_pse+0x6a>
     ae0:	86 95       	lsr	r24
     ae2:	77 95       	ror	r23
     ae4:	67 95       	ror	r22
     ae6:	b7 95       	ror	r27
     ae8:	f7 95       	ror	r31
     aea:	9f 5f       	subi	r25, 0xFF	; 255
     aec:	c9 f7       	brne	.-14     	; 0xae0 <__divsf3_pse+0x74>
     aee:	88 0f       	add	r24, r24
     af0:	91 1d       	adc	r25, r1
     af2:	96 95       	lsr	r25
     af4:	87 95       	ror	r24
     af6:	97 f9       	bld	r25, 7
     af8:	08 95       	ret
     afa:	e1 e0       	ldi	r30, 0x01	; 1
     afc:	66 0f       	add	r22, r22
     afe:	77 1f       	adc	r23, r23
     b00:	88 1f       	adc	r24, r24
     b02:	bb 1f       	adc	r27, r27
     b04:	62 17       	cp	r22, r18
     b06:	73 07       	cpc	r23, r19
     b08:	84 07       	cpc	r24, r20
     b0a:	ba 07       	cpc	r27, r26
     b0c:	20 f0       	brcs	.+8      	; 0xb16 <__divsf3_pse+0xaa>
     b0e:	62 1b       	sub	r22, r18
     b10:	73 0b       	sbc	r23, r19
     b12:	84 0b       	sbc	r24, r20
     b14:	ba 0b       	sbc	r27, r26
     b16:	ee 1f       	adc	r30, r30
     b18:	88 f7       	brcc	.-30     	; 0xafc <__divsf3_pse+0x90>
     b1a:	e0 95       	com	r30
     b1c:	08 95       	ret

00000b1e <__fixsfsi>:
     b1e:	04 d0       	rcall	.+8      	; 0xb28 <__fixunssfsi>
     b20:	68 94       	set
     b22:	b1 11       	cpse	r27, r1
     b24:	d9 c0       	rjmp	.+434    	; 0xcd8 <__fp_szero>
     b26:	08 95       	ret

00000b28 <__fixunssfsi>:
     b28:	bc d0       	rcall	.+376    	; 0xca2 <__fp_splitA>
     b2a:	88 f0       	brcs	.+34     	; 0xb4e <__fixunssfsi+0x26>
     b2c:	9f 57       	subi	r25, 0x7F	; 127
     b2e:	90 f0       	brcs	.+36     	; 0xb54 <__fixunssfsi+0x2c>
     b30:	b9 2f       	mov	r27, r25
     b32:	99 27       	eor	r25, r25
     b34:	b7 51       	subi	r27, 0x17	; 23
     b36:	a0 f0       	brcs	.+40     	; 0xb60 <__fixunssfsi+0x38>
     b38:	d1 f0       	breq	.+52     	; 0xb6e <__fixunssfsi+0x46>
     b3a:	66 0f       	add	r22, r22
     b3c:	77 1f       	adc	r23, r23
     b3e:	88 1f       	adc	r24, r24
     b40:	99 1f       	adc	r25, r25
     b42:	1a f0       	brmi	.+6      	; 0xb4a <__fixunssfsi+0x22>
     b44:	ba 95       	dec	r27
     b46:	c9 f7       	brne	.-14     	; 0xb3a <__fixunssfsi+0x12>
     b48:	12 c0       	rjmp	.+36     	; 0xb6e <__fixunssfsi+0x46>
     b4a:	b1 30       	cpi	r27, 0x01	; 1
     b4c:	81 f0       	breq	.+32     	; 0xb6e <__fixunssfsi+0x46>
     b4e:	c3 d0       	rcall	.+390    	; 0xcd6 <__fp_zero>
     b50:	b1 e0       	ldi	r27, 0x01	; 1
     b52:	08 95       	ret
     b54:	c0 c0       	rjmp	.+384    	; 0xcd6 <__fp_zero>
     b56:	67 2f       	mov	r22, r23
     b58:	78 2f       	mov	r23, r24
     b5a:	88 27       	eor	r24, r24
     b5c:	b8 5f       	subi	r27, 0xF8	; 248
     b5e:	39 f0       	breq	.+14     	; 0xb6e <__fixunssfsi+0x46>
     b60:	b9 3f       	cpi	r27, 0xF9	; 249
     b62:	cc f3       	brlt	.-14     	; 0xb56 <__fixunssfsi+0x2e>
     b64:	86 95       	lsr	r24
     b66:	77 95       	ror	r23
     b68:	67 95       	ror	r22
     b6a:	b3 95       	inc	r27
     b6c:	d9 f7       	brne	.-10     	; 0xb64 <__fixunssfsi+0x3c>
     b6e:	3e f4       	brtc	.+14     	; 0xb7e <__fixunssfsi+0x56>
     b70:	90 95       	com	r25
     b72:	80 95       	com	r24
     b74:	70 95       	com	r23
     b76:	61 95       	neg	r22
     b78:	7f 4f       	sbci	r23, 0xFF	; 255
     b7a:	8f 4f       	sbci	r24, 0xFF	; 255
     b7c:	9f 4f       	sbci	r25, 0xFF	; 255
     b7e:	08 95       	ret

00000b80 <__floatunsisf>:
     b80:	e8 94       	clt
     b82:	09 c0       	rjmp	.+18     	; 0xb96 <__floatsisf+0x12>

00000b84 <__floatsisf>:
     b84:	97 fb       	bst	r25, 7
     b86:	3e f4       	brtc	.+14     	; 0xb96 <__floatsisf+0x12>
     b88:	90 95       	com	r25
     b8a:	80 95       	com	r24
     b8c:	70 95       	com	r23
     b8e:	61 95       	neg	r22
     b90:	7f 4f       	sbci	r23, 0xFF	; 255
     b92:	8f 4f       	sbci	r24, 0xFF	; 255
     b94:	9f 4f       	sbci	r25, 0xFF	; 255
     b96:	99 23       	and	r25, r25
     b98:	a9 f0       	breq	.+42     	; 0xbc4 <__floatsisf+0x40>
     b9a:	f9 2f       	mov	r31, r25
     b9c:	96 e9       	ldi	r25, 0x96	; 150
     b9e:	bb 27       	eor	r27, r27
     ba0:	93 95       	inc	r25
     ba2:	f6 95       	lsr	r31
     ba4:	87 95       	ror	r24
     ba6:	77 95       	ror	r23
     ba8:	67 95       	ror	r22
     baa:	b7 95       	ror	r27
     bac:	f1 11       	cpse	r31, r1
     bae:	f8 cf       	rjmp	.-16     	; 0xba0 <__floatsisf+0x1c>
     bb0:	fa f4       	brpl	.+62     	; 0xbf0 <__floatsisf+0x6c>
     bb2:	bb 0f       	add	r27, r27
     bb4:	11 f4       	brne	.+4      	; 0xbba <__floatsisf+0x36>
     bb6:	60 ff       	sbrs	r22, 0
     bb8:	1b c0       	rjmp	.+54     	; 0xbf0 <__floatsisf+0x6c>
     bba:	6f 5f       	subi	r22, 0xFF	; 255
     bbc:	7f 4f       	sbci	r23, 0xFF	; 255
     bbe:	8f 4f       	sbci	r24, 0xFF	; 255
     bc0:	9f 4f       	sbci	r25, 0xFF	; 255
     bc2:	16 c0       	rjmp	.+44     	; 0xbf0 <__floatsisf+0x6c>
     bc4:	88 23       	and	r24, r24
     bc6:	11 f0       	breq	.+4      	; 0xbcc <__floatsisf+0x48>
     bc8:	96 e9       	ldi	r25, 0x96	; 150
     bca:	11 c0       	rjmp	.+34     	; 0xbee <__floatsisf+0x6a>
     bcc:	77 23       	and	r23, r23
     bce:	21 f0       	breq	.+8      	; 0xbd8 <__floatsisf+0x54>
     bd0:	9e e8       	ldi	r25, 0x8E	; 142
     bd2:	87 2f       	mov	r24, r23
     bd4:	76 2f       	mov	r23, r22
     bd6:	05 c0       	rjmp	.+10     	; 0xbe2 <__floatsisf+0x5e>
     bd8:	66 23       	and	r22, r22
     bda:	71 f0       	breq	.+28     	; 0xbf8 <__floatsisf+0x74>
     bdc:	96 e8       	ldi	r25, 0x86	; 134
     bde:	86 2f       	mov	r24, r22
     be0:	70 e0       	ldi	r23, 0x00	; 0
     be2:	60 e0       	ldi	r22, 0x00	; 0
     be4:	2a f0       	brmi	.+10     	; 0xbf0 <__floatsisf+0x6c>
     be6:	9a 95       	dec	r25
     be8:	66 0f       	add	r22, r22
     bea:	77 1f       	adc	r23, r23
     bec:	88 1f       	adc	r24, r24
     bee:	da f7       	brpl	.-10     	; 0xbe6 <__floatsisf+0x62>
     bf0:	88 0f       	add	r24, r24
     bf2:	96 95       	lsr	r25
     bf4:	87 95       	ror	r24
     bf6:	97 f9       	bld	r25, 7
     bf8:	08 95       	ret

00000bfa <__fp_cmp>:
     bfa:	99 0f       	add	r25, r25
     bfc:	00 08       	sbc	r0, r0
     bfe:	55 0f       	add	r21, r21
     c00:	aa 0b       	sbc	r26, r26
     c02:	e0 e8       	ldi	r30, 0x80	; 128
     c04:	fe ef       	ldi	r31, 0xFE	; 254
     c06:	16 16       	cp	r1, r22
     c08:	17 06       	cpc	r1, r23
     c0a:	e8 07       	cpc	r30, r24
     c0c:	f9 07       	cpc	r31, r25
     c0e:	c0 f0       	brcs	.+48     	; 0xc40 <__fp_cmp+0x46>
     c10:	12 16       	cp	r1, r18
     c12:	13 06       	cpc	r1, r19
     c14:	e4 07       	cpc	r30, r20
     c16:	f5 07       	cpc	r31, r21
     c18:	98 f0       	brcs	.+38     	; 0xc40 <__fp_cmp+0x46>
     c1a:	62 1b       	sub	r22, r18
     c1c:	73 0b       	sbc	r23, r19
     c1e:	84 0b       	sbc	r24, r20
     c20:	95 0b       	sbc	r25, r21
     c22:	39 f4       	brne	.+14     	; 0xc32 <__fp_cmp+0x38>
     c24:	0a 26       	eor	r0, r26
     c26:	61 f0       	breq	.+24     	; 0xc40 <__fp_cmp+0x46>
     c28:	23 2b       	or	r18, r19
     c2a:	24 2b       	or	r18, r20
     c2c:	25 2b       	or	r18, r21
     c2e:	21 f4       	brne	.+8      	; 0xc38 <__fp_cmp+0x3e>
     c30:	08 95       	ret
     c32:	0a 26       	eor	r0, r26
     c34:	09 f4       	brne	.+2      	; 0xc38 <__fp_cmp+0x3e>
     c36:	a1 40       	sbci	r26, 0x01	; 1
     c38:	a6 95       	lsr	r26
     c3a:	8f ef       	ldi	r24, 0xFF	; 255
     c3c:	81 1d       	adc	r24, r1
     c3e:	81 1d       	adc	r24, r1
     c40:	08 95       	ret

00000c42 <__fp_inf>:
     c42:	97 f9       	bld	r25, 7
     c44:	9f 67       	ori	r25, 0x7F	; 127
     c46:	80 e8       	ldi	r24, 0x80	; 128
     c48:	70 e0       	ldi	r23, 0x00	; 0
     c4a:	60 e0       	ldi	r22, 0x00	; 0
     c4c:	08 95       	ret

00000c4e <__fp_nan>:
     c4e:	9f ef       	ldi	r25, 0xFF	; 255
     c50:	80 ec       	ldi	r24, 0xC0	; 192
     c52:	08 95       	ret

00000c54 <__fp_pscA>:
     c54:	00 24       	eor	r0, r0
     c56:	0a 94       	dec	r0
     c58:	16 16       	cp	r1, r22
     c5a:	17 06       	cpc	r1, r23
     c5c:	18 06       	cpc	r1, r24
     c5e:	09 06       	cpc	r0, r25
     c60:	08 95       	ret

00000c62 <__fp_pscB>:
     c62:	00 24       	eor	r0, r0
     c64:	0a 94       	dec	r0
     c66:	12 16       	cp	r1, r18
     c68:	13 06       	cpc	r1, r19
     c6a:	14 06       	cpc	r1, r20
     c6c:	05 06       	cpc	r0, r21
     c6e:	08 95       	ret

00000c70 <__fp_round>:
     c70:	09 2e       	mov	r0, r25
     c72:	03 94       	inc	r0
     c74:	00 0c       	add	r0, r0
     c76:	11 f4       	brne	.+4      	; 0xc7c <__fp_round+0xc>
     c78:	88 23       	and	r24, r24
     c7a:	52 f0       	brmi	.+20     	; 0xc90 <__fp_round+0x20>
     c7c:	bb 0f       	add	r27, r27
     c7e:	40 f4       	brcc	.+16     	; 0xc90 <__fp_round+0x20>
     c80:	bf 2b       	or	r27, r31
     c82:	11 f4       	brne	.+4      	; 0xc88 <__fp_round+0x18>
     c84:	60 ff       	sbrs	r22, 0
     c86:	04 c0       	rjmp	.+8      	; 0xc90 <__fp_round+0x20>
     c88:	6f 5f       	subi	r22, 0xFF	; 255
     c8a:	7f 4f       	sbci	r23, 0xFF	; 255
     c8c:	8f 4f       	sbci	r24, 0xFF	; 255
     c8e:	9f 4f       	sbci	r25, 0xFF	; 255
     c90:	08 95       	ret

00000c92 <__fp_split3>:
     c92:	57 fd       	sbrc	r21, 7
     c94:	90 58       	subi	r25, 0x80	; 128
     c96:	44 0f       	add	r20, r20
     c98:	55 1f       	adc	r21, r21
     c9a:	59 f0       	breq	.+22     	; 0xcb2 <__fp_splitA+0x10>
     c9c:	5f 3f       	cpi	r21, 0xFF	; 255
     c9e:	71 f0       	breq	.+28     	; 0xcbc <__fp_splitA+0x1a>
     ca0:	47 95       	ror	r20

00000ca2 <__fp_splitA>:
     ca2:	88 0f       	add	r24, r24
     ca4:	97 fb       	bst	r25, 7
     ca6:	99 1f       	adc	r25, r25
     ca8:	61 f0       	breq	.+24     	; 0xcc2 <__fp_splitA+0x20>
     caa:	9f 3f       	cpi	r25, 0xFF	; 255
     cac:	79 f0       	breq	.+30     	; 0xccc <__fp_splitA+0x2a>
     cae:	87 95       	ror	r24
     cb0:	08 95       	ret
     cb2:	12 16       	cp	r1, r18
     cb4:	13 06       	cpc	r1, r19
     cb6:	14 06       	cpc	r1, r20
     cb8:	55 1f       	adc	r21, r21
     cba:	f2 cf       	rjmp	.-28     	; 0xca0 <__fp_split3+0xe>
     cbc:	46 95       	lsr	r20
     cbe:	f1 df       	rcall	.-30     	; 0xca2 <__fp_splitA>
     cc0:	08 c0       	rjmp	.+16     	; 0xcd2 <__fp_splitA+0x30>
     cc2:	16 16       	cp	r1, r22
     cc4:	17 06       	cpc	r1, r23
     cc6:	18 06       	cpc	r1, r24
     cc8:	99 1f       	adc	r25, r25
     cca:	f1 cf       	rjmp	.-30     	; 0xcae <__fp_splitA+0xc>
     ccc:	86 95       	lsr	r24
     cce:	71 05       	cpc	r23, r1
     cd0:	61 05       	cpc	r22, r1
     cd2:	08 94       	sec
     cd4:	08 95       	ret

00000cd6 <__fp_zero>:
     cd6:	e8 94       	clt

00000cd8 <__fp_szero>:
     cd8:	bb 27       	eor	r27, r27
     cda:	66 27       	eor	r22, r22
     cdc:	77 27       	eor	r23, r23
     cde:	cb 01       	movw	r24, r22
     ce0:	97 f9       	bld	r25, 7
     ce2:	08 95       	ret

00000ce4 <__gesf2>:
     ce4:	8a df       	rcall	.-236    	; 0xbfa <__fp_cmp>
     ce6:	08 f4       	brcc	.+2      	; 0xcea <__gesf2+0x6>
     ce8:	8f ef       	ldi	r24, 0xFF	; 255
     cea:	08 95       	ret

00000cec <__mulsf3>:
     cec:	0b d0       	rcall	.+22     	; 0xd04 <__mulsf3x>
     cee:	c0 cf       	rjmp	.-128    	; 0xc70 <__fp_round>
     cf0:	b1 df       	rcall	.-158    	; 0xc54 <__fp_pscA>
     cf2:	28 f0       	brcs	.+10     	; 0xcfe <__mulsf3+0x12>
     cf4:	b6 df       	rcall	.-148    	; 0xc62 <__fp_pscB>
     cf6:	18 f0       	brcs	.+6      	; 0xcfe <__mulsf3+0x12>
     cf8:	95 23       	and	r25, r21
     cfa:	09 f0       	breq	.+2      	; 0xcfe <__mulsf3+0x12>
     cfc:	a2 cf       	rjmp	.-188    	; 0xc42 <__fp_inf>
     cfe:	a7 cf       	rjmp	.-178    	; 0xc4e <__fp_nan>
     d00:	11 24       	eor	r1, r1
     d02:	ea cf       	rjmp	.-44     	; 0xcd8 <__fp_szero>

00000d04 <__mulsf3x>:
     d04:	c6 df       	rcall	.-116    	; 0xc92 <__fp_split3>
     d06:	a0 f3       	brcs	.-24     	; 0xcf0 <__mulsf3+0x4>

00000d08 <__mulsf3_pse>:
     d08:	95 9f       	mul	r25, r21
     d0a:	d1 f3       	breq	.-12     	; 0xd00 <__mulsf3+0x14>
     d0c:	95 0f       	add	r25, r21
     d0e:	50 e0       	ldi	r21, 0x00	; 0
     d10:	55 1f       	adc	r21, r21
     d12:	62 9f       	mul	r22, r18
     d14:	f0 01       	movw	r30, r0
     d16:	72 9f       	mul	r23, r18
     d18:	bb 27       	eor	r27, r27
     d1a:	f0 0d       	add	r31, r0
     d1c:	b1 1d       	adc	r27, r1
     d1e:	63 9f       	mul	r22, r19
     d20:	aa 27       	eor	r26, r26
     d22:	f0 0d       	add	r31, r0
     d24:	b1 1d       	adc	r27, r1
     d26:	aa 1f       	adc	r26, r26
     d28:	64 9f       	mul	r22, r20
     d2a:	66 27       	eor	r22, r22
     d2c:	b0 0d       	add	r27, r0
     d2e:	a1 1d       	adc	r26, r1
     d30:	66 1f       	adc	r22, r22
     d32:	82 9f       	mul	r24, r18
     d34:	22 27       	eor	r18, r18
     d36:	b0 0d       	add	r27, r0
     d38:	a1 1d       	adc	r26, r1
     d3a:	62 1f       	adc	r22, r18
     d3c:	73 9f       	mul	r23, r19
     d3e:	b0 0d       	add	r27, r0
     d40:	a1 1d       	adc	r26, r1
     d42:	62 1f       	adc	r22, r18
     d44:	83 9f       	mul	r24, r19
     d46:	a0 0d       	add	r26, r0
     d48:	61 1d       	adc	r22, r1
     d4a:	22 1f       	adc	r18, r18
     d4c:	74 9f       	mul	r23, r20
     d4e:	33 27       	eor	r19, r19
     d50:	a0 0d       	add	r26, r0
     d52:	61 1d       	adc	r22, r1
     d54:	23 1f       	adc	r18, r19
     d56:	84 9f       	mul	r24, r20
     d58:	60 0d       	add	r22, r0
     d5a:	21 1d       	adc	r18, r1
     d5c:	82 2f       	mov	r24, r18
     d5e:	76 2f       	mov	r23, r22
     d60:	6a 2f       	mov	r22, r26
     d62:	11 24       	eor	r1, r1
     d64:	9f 57       	subi	r25, 0x7F	; 127
     d66:	50 40       	sbci	r21, 0x00	; 0
     d68:	8a f0       	brmi	.+34     	; 0xd8c <__mulsf3_pse+0x84>
     d6a:	e1 f0       	breq	.+56     	; 0xda4 <__mulsf3_pse+0x9c>
     d6c:	88 23       	and	r24, r24
     d6e:	4a f0       	brmi	.+18     	; 0xd82 <__mulsf3_pse+0x7a>
     d70:	ee 0f       	add	r30, r30
     d72:	ff 1f       	adc	r31, r31
     d74:	bb 1f       	adc	r27, r27
     d76:	66 1f       	adc	r22, r22
     d78:	77 1f       	adc	r23, r23
     d7a:	88 1f       	adc	r24, r24
     d7c:	91 50       	subi	r25, 0x01	; 1
     d7e:	50 40       	sbci	r21, 0x00	; 0
     d80:	a9 f7       	brne	.-22     	; 0xd6c <__mulsf3_pse+0x64>
     d82:	9e 3f       	cpi	r25, 0xFE	; 254
     d84:	51 05       	cpc	r21, r1
     d86:	70 f0       	brcs	.+28     	; 0xda4 <__mulsf3_pse+0x9c>
     d88:	5c cf       	rjmp	.-328    	; 0xc42 <__fp_inf>
     d8a:	a6 cf       	rjmp	.-180    	; 0xcd8 <__fp_szero>
     d8c:	5f 3f       	cpi	r21, 0xFF	; 255
     d8e:	ec f3       	brlt	.-6      	; 0xd8a <__mulsf3_pse+0x82>
     d90:	98 3e       	cpi	r25, 0xE8	; 232
     d92:	dc f3       	brlt	.-10     	; 0xd8a <__mulsf3_pse+0x82>
     d94:	86 95       	lsr	r24
     d96:	77 95       	ror	r23
     d98:	67 95       	ror	r22
     d9a:	b7 95       	ror	r27
     d9c:	f7 95       	ror	r31
     d9e:	e7 95       	ror	r30
     da0:	9f 5f       	subi	r25, 0xFF	; 255
     da2:	c1 f7       	brne	.-16     	; 0xd94 <__mulsf3_pse+0x8c>
     da4:	fe 2b       	or	r31, r30
     da6:	88 0f       	add	r24, r24
     da8:	91 1d       	adc	r25, r1
     daa:	96 95       	lsr	r25
     dac:	87 95       	ror	r24
     dae:	97 f9       	bld	r25, 7
     db0:	08 95       	ret

00000db2 <__tablejump2__>:
     db2:	ee 0f       	add	r30, r30
     db4:	ff 1f       	adc	r31, r31
     db6:	05 90       	lpm	r0, Z+
     db8:	f4 91       	lpm	r31, Z
     dba:	e0 2d       	mov	r30, r0
     dbc:	09 94       	ijmp

00000dbe <vfprintf>:
     dbe:	ab e0       	ldi	r26, 0x0B	; 11
     dc0:	b0 e0       	ldi	r27, 0x00	; 0
     dc2:	e4 ee       	ldi	r30, 0xE4	; 228
     dc4:	f6 e0       	ldi	r31, 0x06	; 6
     dc6:	7d c2       	rjmp	.+1274   	; 0x12c2 <__prologue_saves__>
     dc8:	6c 01       	movw	r12, r24
     dca:	7b 01       	movw	r14, r22
     dcc:	8a 01       	movw	r16, r20
     dce:	fc 01       	movw	r30, r24
     dd0:	17 82       	std	Z+7, r1	; 0x07
     dd2:	16 82       	std	Z+6, r1	; 0x06
     dd4:	83 81       	ldd	r24, Z+3	; 0x03
     dd6:	81 ff       	sbrs	r24, 1
     dd8:	bf c1       	rjmp	.+894    	; 0x1158 <vfprintf+0x39a>
     dda:	ce 01       	movw	r24, r28
     ddc:	01 96       	adiw	r24, 0x01	; 1
     dde:	3c 01       	movw	r6, r24
     de0:	f6 01       	movw	r30, r12
     de2:	93 81       	ldd	r25, Z+3	; 0x03
     de4:	f7 01       	movw	r30, r14
     de6:	93 fd       	sbrc	r25, 3
     de8:	85 91       	lpm	r24, Z+
     dea:	93 ff       	sbrs	r25, 3
     dec:	81 91       	ld	r24, Z+
     dee:	7f 01       	movw	r14, r30
     df0:	88 23       	and	r24, r24
     df2:	09 f4       	brne	.+2      	; 0xdf6 <vfprintf+0x38>
     df4:	ad c1       	rjmp	.+858    	; 0x1150 <vfprintf+0x392>
     df6:	85 32       	cpi	r24, 0x25	; 37
     df8:	39 f4       	brne	.+14     	; 0xe08 <vfprintf+0x4a>
     dfa:	93 fd       	sbrc	r25, 3
     dfc:	85 91       	lpm	r24, Z+
     dfe:	93 ff       	sbrs	r25, 3
     e00:	81 91       	ld	r24, Z+
     e02:	7f 01       	movw	r14, r30
     e04:	85 32       	cpi	r24, 0x25	; 37
     e06:	21 f4       	brne	.+8      	; 0xe10 <vfprintf+0x52>
     e08:	b6 01       	movw	r22, r12
     e0a:	90 e0       	ldi	r25, 0x00	; 0
     e0c:	c0 d1       	rcall	.+896    	; 0x118e <fputc>
     e0e:	e8 cf       	rjmp	.-48     	; 0xde0 <vfprintf+0x22>
     e10:	91 2c       	mov	r9, r1
     e12:	21 2c       	mov	r2, r1
     e14:	31 2c       	mov	r3, r1
     e16:	ff e1       	ldi	r31, 0x1F	; 31
     e18:	f3 15       	cp	r31, r3
     e1a:	d8 f0       	brcs	.+54     	; 0xe52 <vfprintf+0x94>
     e1c:	8b 32       	cpi	r24, 0x2B	; 43
     e1e:	79 f0       	breq	.+30     	; 0xe3e <vfprintf+0x80>
     e20:	38 f4       	brcc	.+14     	; 0xe30 <vfprintf+0x72>
     e22:	80 32       	cpi	r24, 0x20	; 32
     e24:	79 f0       	breq	.+30     	; 0xe44 <vfprintf+0x86>
     e26:	83 32       	cpi	r24, 0x23	; 35
     e28:	a1 f4       	brne	.+40     	; 0xe52 <vfprintf+0x94>
     e2a:	23 2d       	mov	r18, r3
     e2c:	20 61       	ori	r18, 0x10	; 16
     e2e:	1d c0       	rjmp	.+58     	; 0xe6a <vfprintf+0xac>
     e30:	8d 32       	cpi	r24, 0x2D	; 45
     e32:	61 f0       	breq	.+24     	; 0xe4c <vfprintf+0x8e>
     e34:	80 33       	cpi	r24, 0x30	; 48
     e36:	69 f4       	brne	.+26     	; 0xe52 <vfprintf+0x94>
     e38:	23 2d       	mov	r18, r3
     e3a:	21 60       	ori	r18, 0x01	; 1
     e3c:	16 c0       	rjmp	.+44     	; 0xe6a <vfprintf+0xac>
     e3e:	83 2d       	mov	r24, r3
     e40:	82 60       	ori	r24, 0x02	; 2
     e42:	38 2e       	mov	r3, r24
     e44:	e3 2d       	mov	r30, r3
     e46:	e4 60       	ori	r30, 0x04	; 4
     e48:	3e 2e       	mov	r3, r30
     e4a:	2a c0       	rjmp	.+84     	; 0xea0 <vfprintf+0xe2>
     e4c:	f3 2d       	mov	r31, r3
     e4e:	f8 60       	ori	r31, 0x08	; 8
     e50:	1d c0       	rjmp	.+58     	; 0xe8c <vfprintf+0xce>
     e52:	37 fc       	sbrc	r3, 7
     e54:	2d c0       	rjmp	.+90     	; 0xeb0 <vfprintf+0xf2>
     e56:	20 ed       	ldi	r18, 0xD0	; 208
     e58:	28 0f       	add	r18, r24
     e5a:	2a 30       	cpi	r18, 0x0A	; 10
     e5c:	40 f0       	brcs	.+16     	; 0xe6e <vfprintf+0xb0>
     e5e:	8e 32       	cpi	r24, 0x2E	; 46
     e60:	b9 f4       	brne	.+46     	; 0xe90 <vfprintf+0xd2>
     e62:	36 fc       	sbrc	r3, 6
     e64:	75 c1       	rjmp	.+746    	; 0x1150 <vfprintf+0x392>
     e66:	23 2d       	mov	r18, r3
     e68:	20 64       	ori	r18, 0x40	; 64
     e6a:	32 2e       	mov	r3, r18
     e6c:	19 c0       	rjmp	.+50     	; 0xea0 <vfprintf+0xe2>
     e6e:	36 fe       	sbrs	r3, 6
     e70:	06 c0       	rjmp	.+12     	; 0xe7e <vfprintf+0xc0>
     e72:	8a e0       	ldi	r24, 0x0A	; 10
     e74:	98 9e       	mul	r9, r24
     e76:	20 0d       	add	r18, r0
     e78:	11 24       	eor	r1, r1
     e7a:	92 2e       	mov	r9, r18
     e7c:	11 c0       	rjmp	.+34     	; 0xea0 <vfprintf+0xe2>
     e7e:	ea e0       	ldi	r30, 0x0A	; 10
     e80:	2e 9e       	mul	r2, r30
     e82:	20 0d       	add	r18, r0
     e84:	11 24       	eor	r1, r1
     e86:	22 2e       	mov	r2, r18
     e88:	f3 2d       	mov	r31, r3
     e8a:	f0 62       	ori	r31, 0x20	; 32
     e8c:	3f 2e       	mov	r3, r31
     e8e:	08 c0       	rjmp	.+16     	; 0xea0 <vfprintf+0xe2>
     e90:	8c 36       	cpi	r24, 0x6C	; 108
     e92:	21 f4       	brne	.+8      	; 0xe9c <vfprintf+0xde>
     e94:	83 2d       	mov	r24, r3
     e96:	80 68       	ori	r24, 0x80	; 128
     e98:	38 2e       	mov	r3, r24
     e9a:	02 c0       	rjmp	.+4      	; 0xea0 <vfprintf+0xe2>
     e9c:	88 36       	cpi	r24, 0x68	; 104
     e9e:	41 f4       	brne	.+16     	; 0xeb0 <vfprintf+0xf2>
     ea0:	f7 01       	movw	r30, r14
     ea2:	93 fd       	sbrc	r25, 3
     ea4:	85 91       	lpm	r24, Z+
     ea6:	93 ff       	sbrs	r25, 3
     ea8:	81 91       	ld	r24, Z+
     eaa:	7f 01       	movw	r14, r30
     eac:	81 11       	cpse	r24, r1
     eae:	b3 cf       	rjmp	.-154    	; 0xe16 <vfprintf+0x58>
     eb0:	98 2f       	mov	r25, r24
     eb2:	9f 7d       	andi	r25, 0xDF	; 223
     eb4:	95 54       	subi	r25, 0x45	; 69
     eb6:	93 30       	cpi	r25, 0x03	; 3
     eb8:	28 f4       	brcc	.+10     	; 0xec4 <vfprintf+0x106>
     eba:	0c 5f       	subi	r16, 0xFC	; 252
     ebc:	1f 4f       	sbci	r17, 0xFF	; 255
     ebe:	9f e3       	ldi	r25, 0x3F	; 63
     ec0:	99 83       	std	Y+1, r25	; 0x01
     ec2:	0d c0       	rjmp	.+26     	; 0xede <vfprintf+0x120>
     ec4:	83 36       	cpi	r24, 0x63	; 99
     ec6:	31 f0       	breq	.+12     	; 0xed4 <vfprintf+0x116>
     ec8:	83 37       	cpi	r24, 0x73	; 115
     eca:	71 f0       	breq	.+28     	; 0xee8 <vfprintf+0x12a>
     ecc:	83 35       	cpi	r24, 0x53	; 83
     ece:	09 f0       	breq	.+2      	; 0xed2 <vfprintf+0x114>
     ed0:	55 c0       	rjmp	.+170    	; 0xf7c <vfprintf+0x1be>
     ed2:	20 c0       	rjmp	.+64     	; 0xf14 <vfprintf+0x156>
     ed4:	f8 01       	movw	r30, r16
     ed6:	80 81       	ld	r24, Z
     ed8:	89 83       	std	Y+1, r24	; 0x01
     eda:	0e 5f       	subi	r16, 0xFE	; 254
     edc:	1f 4f       	sbci	r17, 0xFF	; 255
     ede:	88 24       	eor	r8, r8
     ee0:	83 94       	inc	r8
     ee2:	91 2c       	mov	r9, r1
     ee4:	53 01       	movw	r10, r6
     ee6:	12 c0       	rjmp	.+36     	; 0xf0c <vfprintf+0x14e>
     ee8:	28 01       	movw	r4, r16
     eea:	f2 e0       	ldi	r31, 0x02	; 2
     eec:	4f 0e       	add	r4, r31
     eee:	51 1c       	adc	r5, r1
     ef0:	f8 01       	movw	r30, r16
     ef2:	a0 80       	ld	r10, Z
     ef4:	b1 80       	ldd	r11, Z+1	; 0x01
     ef6:	36 fe       	sbrs	r3, 6
     ef8:	03 c0       	rjmp	.+6      	; 0xf00 <vfprintf+0x142>
     efa:	69 2d       	mov	r22, r9
     efc:	70 e0       	ldi	r23, 0x00	; 0
     efe:	02 c0       	rjmp	.+4      	; 0xf04 <vfprintf+0x146>
     f00:	6f ef       	ldi	r22, 0xFF	; 255
     f02:	7f ef       	ldi	r23, 0xFF	; 255
     f04:	c5 01       	movw	r24, r10
     f06:	38 d1       	rcall	.+624    	; 0x1178 <strnlen>
     f08:	4c 01       	movw	r8, r24
     f0a:	82 01       	movw	r16, r4
     f0c:	f3 2d       	mov	r31, r3
     f0e:	ff 77       	andi	r31, 0x7F	; 127
     f10:	3f 2e       	mov	r3, r31
     f12:	15 c0       	rjmp	.+42     	; 0xf3e <vfprintf+0x180>
     f14:	28 01       	movw	r4, r16
     f16:	22 e0       	ldi	r18, 0x02	; 2
     f18:	42 0e       	add	r4, r18
     f1a:	51 1c       	adc	r5, r1
     f1c:	f8 01       	movw	r30, r16
     f1e:	a0 80       	ld	r10, Z
     f20:	b1 80       	ldd	r11, Z+1	; 0x01
     f22:	36 fe       	sbrs	r3, 6
     f24:	03 c0       	rjmp	.+6      	; 0xf2c <vfprintf+0x16e>
     f26:	69 2d       	mov	r22, r9
     f28:	70 e0       	ldi	r23, 0x00	; 0
     f2a:	02 c0       	rjmp	.+4      	; 0xf30 <vfprintf+0x172>
     f2c:	6f ef       	ldi	r22, 0xFF	; 255
     f2e:	7f ef       	ldi	r23, 0xFF	; 255
     f30:	c5 01       	movw	r24, r10
     f32:	17 d1       	rcall	.+558    	; 0x1162 <strnlen_P>
     f34:	4c 01       	movw	r8, r24
     f36:	f3 2d       	mov	r31, r3
     f38:	f0 68       	ori	r31, 0x80	; 128
     f3a:	3f 2e       	mov	r3, r31
     f3c:	82 01       	movw	r16, r4
     f3e:	33 fc       	sbrc	r3, 3
     f40:	19 c0       	rjmp	.+50     	; 0xf74 <vfprintf+0x1b6>
     f42:	82 2d       	mov	r24, r2
     f44:	90 e0       	ldi	r25, 0x00	; 0
     f46:	88 16       	cp	r8, r24
     f48:	99 06       	cpc	r9, r25
     f4a:	a0 f4       	brcc	.+40     	; 0xf74 <vfprintf+0x1b6>
     f4c:	b6 01       	movw	r22, r12
     f4e:	80 e2       	ldi	r24, 0x20	; 32
     f50:	90 e0       	ldi	r25, 0x00	; 0
     f52:	1d d1       	rcall	.+570    	; 0x118e <fputc>
     f54:	2a 94       	dec	r2
     f56:	f5 cf       	rjmp	.-22     	; 0xf42 <vfprintf+0x184>
     f58:	f5 01       	movw	r30, r10
     f5a:	37 fc       	sbrc	r3, 7
     f5c:	85 91       	lpm	r24, Z+
     f5e:	37 fe       	sbrs	r3, 7
     f60:	81 91       	ld	r24, Z+
     f62:	5f 01       	movw	r10, r30
     f64:	b6 01       	movw	r22, r12
     f66:	90 e0       	ldi	r25, 0x00	; 0
     f68:	12 d1       	rcall	.+548    	; 0x118e <fputc>
     f6a:	21 10       	cpse	r2, r1
     f6c:	2a 94       	dec	r2
     f6e:	21 e0       	ldi	r18, 0x01	; 1
     f70:	82 1a       	sub	r8, r18
     f72:	91 08       	sbc	r9, r1
     f74:	81 14       	cp	r8, r1
     f76:	91 04       	cpc	r9, r1
     f78:	79 f7       	brne	.-34     	; 0xf58 <vfprintf+0x19a>
     f7a:	e1 c0       	rjmp	.+450    	; 0x113e <vfprintf+0x380>
     f7c:	84 36       	cpi	r24, 0x64	; 100
     f7e:	11 f0       	breq	.+4      	; 0xf84 <vfprintf+0x1c6>
     f80:	89 36       	cpi	r24, 0x69	; 105
     f82:	39 f5       	brne	.+78     	; 0xfd2 <vfprintf+0x214>
     f84:	f8 01       	movw	r30, r16
     f86:	37 fe       	sbrs	r3, 7
     f88:	07 c0       	rjmp	.+14     	; 0xf98 <vfprintf+0x1da>
     f8a:	60 81       	ld	r22, Z
     f8c:	71 81       	ldd	r23, Z+1	; 0x01
     f8e:	82 81       	ldd	r24, Z+2	; 0x02
     f90:	93 81       	ldd	r25, Z+3	; 0x03
     f92:	0c 5f       	subi	r16, 0xFC	; 252
     f94:	1f 4f       	sbci	r17, 0xFF	; 255
     f96:	08 c0       	rjmp	.+16     	; 0xfa8 <vfprintf+0x1ea>
     f98:	60 81       	ld	r22, Z
     f9a:	71 81       	ldd	r23, Z+1	; 0x01
     f9c:	07 2e       	mov	r0, r23
     f9e:	00 0c       	add	r0, r0
     fa0:	88 0b       	sbc	r24, r24
     fa2:	99 0b       	sbc	r25, r25
     fa4:	0e 5f       	subi	r16, 0xFE	; 254
     fa6:	1f 4f       	sbci	r17, 0xFF	; 255
     fa8:	f3 2d       	mov	r31, r3
     faa:	ff 76       	andi	r31, 0x6F	; 111
     fac:	3f 2e       	mov	r3, r31
     fae:	97 ff       	sbrs	r25, 7
     fb0:	09 c0       	rjmp	.+18     	; 0xfc4 <vfprintf+0x206>
     fb2:	90 95       	com	r25
     fb4:	80 95       	com	r24
     fb6:	70 95       	com	r23
     fb8:	61 95       	neg	r22
     fba:	7f 4f       	sbci	r23, 0xFF	; 255
     fbc:	8f 4f       	sbci	r24, 0xFF	; 255
     fbe:	9f 4f       	sbci	r25, 0xFF	; 255
     fc0:	f0 68       	ori	r31, 0x80	; 128
     fc2:	3f 2e       	mov	r3, r31
     fc4:	2a e0       	ldi	r18, 0x0A	; 10
     fc6:	30 e0       	ldi	r19, 0x00	; 0
     fc8:	a3 01       	movw	r20, r6
     fca:	1d d1       	rcall	.+570    	; 0x1206 <__ultoa_invert>
     fcc:	88 2e       	mov	r8, r24
     fce:	86 18       	sub	r8, r6
     fd0:	44 c0       	rjmp	.+136    	; 0x105a <vfprintf+0x29c>
     fd2:	85 37       	cpi	r24, 0x75	; 117
     fd4:	31 f4       	brne	.+12     	; 0xfe2 <vfprintf+0x224>
     fd6:	23 2d       	mov	r18, r3
     fd8:	2f 7e       	andi	r18, 0xEF	; 239
     fda:	b2 2e       	mov	r11, r18
     fdc:	2a e0       	ldi	r18, 0x0A	; 10
     fde:	30 e0       	ldi	r19, 0x00	; 0
     fe0:	25 c0       	rjmp	.+74     	; 0x102c <vfprintf+0x26e>
     fe2:	93 2d       	mov	r25, r3
     fe4:	99 7f       	andi	r25, 0xF9	; 249
     fe6:	b9 2e       	mov	r11, r25
     fe8:	8f 36       	cpi	r24, 0x6F	; 111
     fea:	c1 f0       	breq	.+48     	; 0x101c <vfprintf+0x25e>
     fec:	18 f4       	brcc	.+6      	; 0xff4 <vfprintf+0x236>
     fee:	88 35       	cpi	r24, 0x58	; 88
     ff0:	79 f0       	breq	.+30     	; 0x1010 <vfprintf+0x252>
     ff2:	ae c0       	rjmp	.+348    	; 0x1150 <vfprintf+0x392>
     ff4:	80 37       	cpi	r24, 0x70	; 112
     ff6:	19 f0       	breq	.+6      	; 0xffe <vfprintf+0x240>
     ff8:	88 37       	cpi	r24, 0x78	; 120
     ffa:	21 f0       	breq	.+8      	; 0x1004 <vfprintf+0x246>
     ffc:	a9 c0       	rjmp	.+338    	; 0x1150 <vfprintf+0x392>
     ffe:	e9 2f       	mov	r30, r25
    1000:	e0 61       	ori	r30, 0x10	; 16
    1002:	be 2e       	mov	r11, r30
    1004:	b4 fe       	sbrs	r11, 4
    1006:	0d c0       	rjmp	.+26     	; 0x1022 <vfprintf+0x264>
    1008:	fb 2d       	mov	r31, r11
    100a:	f4 60       	ori	r31, 0x04	; 4
    100c:	bf 2e       	mov	r11, r31
    100e:	09 c0       	rjmp	.+18     	; 0x1022 <vfprintf+0x264>
    1010:	34 fe       	sbrs	r3, 4
    1012:	0a c0       	rjmp	.+20     	; 0x1028 <vfprintf+0x26a>
    1014:	29 2f       	mov	r18, r25
    1016:	26 60       	ori	r18, 0x06	; 6
    1018:	b2 2e       	mov	r11, r18
    101a:	06 c0       	rjmp	.+12     	; 0x1028 <vfprintf+0x26a>
    101c:	28 e0       	ldi	r18, 0x08	; 8
    101e:	30 e0       	ldi	r19, 0x00	; 0
    1020:	05 c0       	rjmp	.+10     	; 0x102c <vfprintf+0x26e>
    1022:	20 e1       	ldi	r18, 0x10	; 16
    1024:	30 e0       	ldi	r19, 0x00	; 0
    1026:	02 c0       	rjmp	.+4      	; 0x102c <vfprintf+0x26e>
    1028:	20 e1       	ldi	r18, 0x10	; 16
    102a:	32 e0       	ldi	r19, 0x02	; 2
    102c:	f8 01       	movw	r30, r16
    102e:	b7 fe       	sbrs	r11, 7
    1030:	07 c0       	rjmp	.+14     	; 0x1040 <vfprintf+0x282>
    1032:	60 81       	ld	r22, Z
    1034:	71 81       	ldd	r23, Z+1	; 0x01
    1036:	82 81       	ldd	r24, Z+2	; 0x02
    1038:	93 81       	ldd	r25, Z+3	; 0x03
    103a:	0c 5f       	subi	r16, 0xFC	; 252
    103c:	1f 4f       	sbci	r17, 0xFF	; 255
    103e:	06 c0       	rjmp	.+12     	; 0x104c <vfprintf+0x28e>
    1040:	60 81       	ld	r22, Z
    1042:	71 81       	ldd	r23, Z+1	; 0x01
    1044:	80 e0       	ldi	r24, 0x00	; 0
    1046:	90 e0       	ldi	r25, 0x00	; 0
    1048:	0e 5f       	subi	r16, 0xFE	; 254
    104a:	1f 4f       	sbci	r17, 0xFF	; 255
    104c:	a3 01       	movw	r20, r6
    104e:	db d0       	rcall	.+438    	; 0x1206 <__ultoa_invert>
    1050:	88 2e       	mov	r8, r24
    1052:	86 18       	sub	r8, r6
    1054:	fb 2d       	mov	r31, r11
    1056:	ff 77       	andi	r31, 0x7F	; 127
    1058:	3f 2e       	mov	r3, r31
    105a:	36 fe       	sbrs	r3, 6
    105c:	0d c0       	rjmp	.+26     	; 0x1078 <vfprintf+0x2ba>
    105e:	23 2d       	mov	r18, r3
    1060:	2e 7f       	andi	r18, 0xFE	; 254
    1062:	a2 2e       	mov	r10, r18
    1064:	89 14       	cp	r8, r9
    1066:	58 f4       	brcc	.+22     	; 0x107e <vfprintf+0x2c0>
    1068:	34 fe       	sbrs	r3, 4
    106a:	0b c0       	rjmp	.+22     	; 0x1082 <vfprintf+0x2c4>
    106c:	32 fc       	sbrc	r3, 2
    106e:	09 c0       	rjmp	.+18     	; 0x1082 <vfprintf+0x2c4>
    1070:	83 2d       	mov	r24, r3
    1072:	8e 7e       	andi	r24, 0xEE	; 238
    1074:	a8 2e       	mov	r10, r24
    1076:	05 c0       	rjmp	.+10     	; 0x1082 <vfprintf+0x2c4>
    1078:	b8 2c       	mov	r11, r8
    107a:	a3 2c       	mov	r10, r3
    107c:	03 c0       	rjmp	.+6      	; 0x1084 <vfprintf+0x2c6>
    107e:	b8 2c       	mov	r11, r8
    1080:	01 c0       	rjmp	.+2      	; 0x1084 <vfprintf+0x2c6>
    1082:	b9 2c       	mov	r11, r9
    1084:	a4 fe       	sbrs	r10, 4
    1086:	0f c0       	rjmp	.+30     	; 0x10a6 <vfprintf+0x2e8>
    1088:	fe 01       	movw	r30, r28
    108a:	e8 0d       	add	r30, r8
    108c:	f1 1d       	adc	r31, r1
    108e:	80 81       	ld	r24, Z
    1090:	80 33       	cpi	r24, 0x30	; 48
    1092:	21 f4       	brne	.+8      	; 0x109c <vfprintf+0x2de>
    1094:	9a 2d       	mov	r25, r10
    1096:	99 7e       	andi	r25, 0xE9	; 233
    1098:	a9 2e       	mov	r10, r25
    109a:	09 c0       	rjmp	.+18     	; 0x10ae <vfprintf+0x2f0>
    109c:	a2 fe       	sbrs	r10, 2
    109e:	06 c0       	rjmp	.+12     	; 0x10ac <vfprintf+0x2ee>
    10a0:	b3 94       	inc	r11
    10a2:	b3 94       	inc	r11
    10a4:	04 c0       	rjmp	.+8      	; 0x10ae <vfprintf+0x2f0>
    10a6:	8a 2d       	mov	r24, r10
    10a8:	86 78       	andi	r24, 0x86	; 134
    10aa:	09 f0       	breq	.+2      	; 0x10ae <vfprintf+0x2f0>
    10ac:	b3 94       	inc	r11
    10ae:	a3 fc       	sbrc	r10, 3
    10b0:	10 c0       	rjmp	.+32     	; 0x10d2 <vfprintf+0x314>
    10b2:	a0 fe       	sbrs	r10, 0
    10b4:	06 c0       	rjmp	.+12     	; 0x10c2 <vfprintf+0x304>
    10b6:	b2 14       	cp	r11, r2
    10b8:	80 f4       	brcc	.+32     	; 0x10da <vfprintf+0x31c>
    10ba:	28 0c       	add	r2, r8
    10bc:	92 2c       	mov	r9, r2
    10be:	9b 18       	sub	r9, r11
    10c0:	0d c0       	rjmp	.+26     	; 0x10dc <vfprintf+0x31e>
    10c2:	b2 14       	cp	r11, r2
    10c4:	58 f4       	brcc	.+22     	; 0x10dc <vfprintf+0x31e>
    10c6:	b6 01       	movw	r22, r12
    10c8:	80 e2       	ldi	r24, 0x20	; 32
    10ca:	90 e0       	ldi	r25, 0x00	; 0
    10cc:	60 d0       	rcall	.+192    	; 0x118e <fputc>
    10ce:	b3 94       	inc	r11
    10d0:	f8 cf       	rjmp	.-16     	; 0x10c2 <vfprintf+0x304>
    10d2:	b2 14       	cp	r11, r2
    10d4:	18 f4       	brcc	.+6      	; 0x10dc <vfprintf+0x31e>
    10d6:	2b 18       	sub	r2, r11
    10d8:	02 c0       	rjmp	.+4      	; 0x10de <vfprintf+0x320>
    10da:	98 2c       	mov	r9, r8
    10dc:	21 2c       	mov	r2, r1
    10de:	a4 fe       	sbrs	r10, 4
    10e0:	0f c0       	rjmp	.+30     	; 0x1100 <vfprintf+0x342>
    10e2:	b6 01       	movw	r22, r12
    10e4:	80 e3       	ldi	r24, 0x30	; 48
    10e6:	90 e0       	ldi	r25, 0x00	; 0
    10e8:	52 d0       	rcall	.+164    	; 0x118e <fputc>
    10ea:	a2 fe       	sbrs	r10, 2
    10ec:	16 c0       	rjmp	.+44     	; 0x111a <vfprintf+0x35c>
    10ee:	a1 fc       	sbrc	r10, 1
    10f0:	03 c0       	rjmp	.+6      	; 0x10f8 <vfprintf+0x33a>
    10f2:	88 e7       	ldi	r24, 0x78	; 120
    10f4:	90 e0       	ldi	r25, 0x00	; 0
    10f6:	02 c0       	rjmp	.+4      	; 0x10fc <vfprintf+0x33e>
    10f8:	88 e5       	ldi	r24, 0x58	; 88
    10fa:	90 e0       	ldi	r25, 0x00	; 0
    10fc:	b6 01       	movw	r22, r12
    10fe:	0c c0       	rjmp	.+24     	; 0x1118 <vfprintf+0x35a>
    1100:	8a 2d       	mov	r24, r10
    1102:	86 78       	andi	r24, 0x86	; 134
    1104:	51 f0       	breq	.+20     	; 0x111a <vfprintf+0x35c>
    1106:	a1 fe       	sbrs	r10, 1
    1108:	02 c0       	rjmp	.+4      	; 0x110e <vfprintf+0x350>
    110a:	8b e2       	ldi	r24, 0x2B	; 43
    110c:	01 c0       	rjmp	.+2      	; 0x1110 <vfprintf+0x352>
    110e:	80 e2       	ldi	r24, 0x20	; 32
    1110:	a7 fc       	sbrc	r10, 7
    1112:	8d e2       	ldi	r24, 0x2D	; 45
    1114:	b6 01       	movw	r22, r12
    1116:	90 e0       	ldi	r25, 0x00	; 0
    1118:	3a d0       	rcall	.+116    	; 0x118e <fputc>
    111a:	89 14       	cp	r8, r9
    111c:	30 f4       	brcc	.+12     	; 0x112a <vfprintf+0x36c>
    111e:	b6 01       	movw	r22, r12
    1120:	80 e3       	ldi	r24, 0x30	; 48
    1122:	90 e0       	ldi	r25, 0x00	; 0
    1124:	34 d0       	rcall	.+104    	; 0x118e <fputc>
    1126:	9a 94       	dec	r9
    1128:	f8 cf       	rjmp	.-16     	; 0x111a <vfprintf+0x35c>
    112a:	8a 94       	dec	r8
    112c:	f3 01       	movw	r30, r6
    112e:	e8 0d       	add	r30, r8
    1130:	f1 1d       	adc	r31, r1
    1132:	80 81       	ld	r24, Z
    1134:	b6 01       	movw	r22, r12
    1136:	90 e0       	ldi	r25, 0x00	; 0
    1138:	2a d0       	rcall	.+84     	; 0x118e <fputc>
    113a:	81 10       	cpse	r8, r1
    113c:	f6 cf       	rjmp	.-20     	; 0x112a <vfprintf+0x36c>
    113e:	22 20       	and	r2, r2
    1140:	09 f4       	brne	.+2      	; 0x1144 <vfprintf+0x386>
    1142:	4e ce       	rjmp	.-868    	; 0xde0 <vfprintf+0x22>
    1144:	b6 01       	movw	r22, r12
    1146:	80 e2       	ldi	r24, 0x20	; 32
    1148:	90 e0       	ldi	r25, 0x00	; 0
    114a:	21 d0       	rcall	.+66     	; 0x118e <fputc>
    114c:	2a 94       	dec	r2
    114e:	f7 cf       	rjmp	.-18     	; 0x113e <vfprintf+0x380>
    1150:	f6 01       	movw	r30, r12
    1152:	86 81       	ldd	r24, Z+6	; 0x06
    1154:	97 81       	ldd	r25, Z+7	; 0x07
    1156:	02 c0       	rjmp	.+4      	; 0x115c <vfprintf+0x39e>
    1158:	8f ef       	ldi	r24, 0xFF	; 255
    115a:	9f ef       	ldi	r25, 0xFF	; 255
    115c:	2b 96       	adiw	r28, 0x0b	; 11
    115e:	e2 e1       	ldi	r30, 0x12	; 18
    1160:	cc c0       	rjmp	.+408    	; 0x12fa <__epilogue_restores__>

00001162 <strnlen_P>:
    1162:	fc 01       	movw	r30, r24
    1164:	05 90       	lpm	r0, Z+
    1166:	61 50       	subi	r22, 0x01	; 1
    1168:	70 40       	sbci	r23, 0x00	; 0
    116a:	01 10       	cpse	r0, r1
    116c:	d8 f7       	brcc	.-10     	; 0x1164 <strnlen_P+0x2>
    116e:	80 95       	com	r24
    1170:	90 95       	com	r25
    1172:	8e 0f       	add	r24, r30
    1174:	9f 1f       	adc	r25, r31
    1176:	08 95       	ret

00001178 <strnlen>:
    1178:	fc 01       	movw	r30, r24
    117a:	61 50       	subi	r22, 0x01	; 1
    117c:	70 40       	sbci	r23, 0x00	; 0
    117e:	01 90       	ld	r0, Z+
    1180:	01 10       	cpse	r0, r1
    1182:	d8 f7       	brcc	.-10     	; 0x117a <strnlen+0x2>
    1184:	80 95       	com	r24
    1186:	90 95       	com	r25
    1188:	8e 0f       	add	r24, r30
    118a:	9f 1f       	adc	r25, r31
    118c:	08 95       	ret

0000118e <fputc>:
    118e:	0f 93       	push	r16
    1190:	1f 93       	push	r17
    1192:	cf 93       	push	r28
    1194:	df 93       	push	r29
    1196:	fb 01       	movw	r30, r22
    1198:	23 81       	ldd	r18, Z+3	; 0x03
    119a:	21 fd       	sbrc	r18, 1
    119c:	03 c0       	rjmp	.+6      	; 0x11a4 <fputc+0x16>
    119e:	8f ef       	ldi	r24, 0xFF	; 255
    11a0:	9f ef       	ldi	r25, 0xFF	; 255
    11a2:	2c c0       	rjmp	.+88     	; 0x11fc <fputc+0x6e>
    11a4:	22 ff       	sbrs	r18, 2
    11a6:	16 c0       	rjmp	.+44     	; 0x11d4 <fputc+0x46>
    11a8:	46 81       	ldd	r20, Z+6	; 0x06
    11aa:	57 81       	ldd	r21, Z+7	; 0x07
    11ac:	24 81       	ldd	r18, Z+4	; 0x04
    11ae:	35 81       	ldd	r19, Z+5	; 0x05
    11b0:	42 17       	cp	r20, r18
    11b2:	53 07       	cpc	r21, r19
    11b4:	44 f4       	brge	.+16     	; 0x11c6 <fputc+0x38>
    11b6:	a0 81       	ld	r26, Z
    11b8:	b1 81       	ldd	r27, Z+1	; 0x01
    11ba:	9d 01       	movw	r18, r26
    11bc:	2f 5f       	subi	r18, 0xFF	; 255
    11be:	3f 4f       	sbci	r19, 0xFF	; 255
    11c0:	31 83       	std	Z+1, r19	; 0x01
    11c2:	20 83       	st	Z, r18
    11c4:	8c 93       	st	X, r24
    11c6:	26 81       	ldd	r18, Z+6	; 0x06
    11c8:	37 81       	ldd	r19, Z+7	; 0x07
    11ca:	2f 5f       	subi	r18, 0xFF	; 255
    11cc:	3f 4f       	sbci	r19, 0xFF	; 255
    11ce:	37 83       	std	Z+7, r19	; 0x07
    11d0:	26 83       	std	Z+6, r18	; 0x06
    11d2:	14 c0       	rjmp	.+40     	; 0x11fc <fputc+0x6e>
    11d4:	8b 01       	movw	r16, r22
    11d6:	ec 01       	movw	r28, r24
    11d8:	fb 01       	movw	r30, r22
    11da:	00 84       	ldd	r0, Z+8	; 0x08
    11dc:	f1 85       	ldd	r31, Z+9	; 0x09
    11de:	e0 2d       	mov	r30, r0
    11e0:	09 95       	icall
    11e2:	89 2b       	or	r24, r25
    11e4:	e1 f6       	brne	.-72     	; 0x119e <fputc+0x10>
    11e6:	d8 01       	movw	r26, r16
    11e8:	16 96       	adiw	r26, 0x06	; 6
    11ea:	8d 91       	ld	r24, X+
    11ec:	9c 91       	ld	r25, X
    11ee:	17 97       	sbiw	r26, 0x07	; 7
    11f0:	01 96       	adiw	r24, 0x01	; 1
    11f2:	17 96       	adiw	r26, 0x07	; 7
    11f4:	9c 93       	st	X, r25
    11f6:	8e 93       	st	-X, r24
    11f8:	16 97       	sbiw	r26, 0x06	; 6
    11fa:	ce 01       	movw	r24, r28
    11fc:	df 91       	pop	r29
    11fe:	cf 91       	pop	r28
    1200:	1f 91       	pop	r17
    1202:	0f 91       	pop	r16
    1204:	08 95       	ret

00001206 <__ultoa_invert>:
    1206:	fa 01       	movw	r30, r20
    1208:	aa 27       	eor	r26, r26
    120a:	28 30       	cpi	r18, 0x08	; 8
    120c:	51 f1       	breq	.+84     	; 0x1262 <__ultoa_invert+0x5c>
    120e:	20 31       	cpi	r18, 0x10	; 16
    1210:	81 f1       	breq	.+96     	; 0x1272 <__ultoa_invert+0x6c>
    1212:	e8 94       	clt
    1214:	6f 93       	push	r22
    1216:	6e 7f       	andi	r22, 0xFE	; 254
    1218:	6e 5f       	subi	r22, 0xFE	; 254
    121a:	7f 4f       	sbci	r23, 0xFF	; 255
    121c:	8f 4f       	sbci	r24, 0xFF	; 255
    121e:	9f 4f       	sbci	r25, 0xFF	; 255
    1220:	af 4f       	sbci	r26, 0xFF	; 255
    1222:	b1 e0       	ldi	r27, 0x01	; 1
    1224:	3e d0       	rcall	.+124    	; 0x12a2 <__ultoa_invert+0x9c>
    1226:	b4 e0       	ldi	r27, 0x04	; 4
    1228:	3c d0       	rcall	.+120    	; 0x12a2 <__ultoa_invert+0x9c>
    122a:	67 0f       	add	r22, r23
    122c:	78 1f       	adc	r23, r24
    122e:	89 1f       	adc	r24, r25
    1230:	9a 1f       	adc	r25, r26
    1232:	a1 1d       	adc	r26, r1
    1234:	68 0f       	add	r22, r24
    1236:	79 1f       	adc	r23, r25
    1238:	8a 1f       	adc	r24, r26
    123a:	91 1d       	adc	r25, r1
    123c:	a1 1d       	adc	r26, r1
    123e:	6a 0f       	add	r22, r26
    1240:	71 1d       	adc	r23, r1
    1242:	81 1d       	adc	r24, r1
    1244:	91 1d       	adc	r25, r1
    1246:	a1 1d       	adc	r26, r1
    1248:	20 d0       	rcall	.+64     	; 0x128a <__ultoa_invert+0x84>
    124a:	09 f4       	brne	.+2      	; 0x124e <__ultoa_invert+0x48>
    124c:	68 94       	set
    124e:	3f 91       	pop	r19
    1250:	2a e0       	ldi	r18, 0x0A	; 10
    1252:	26 9f       	mul	r18, r22
    1254:	11 24       	eor	r1, r1
    1256:	30 19       	sub	r19, r0
    1258:	30 5d       	subi	r19, 0xD0	; 208
    125a:	31 93       	st	Z+, r19
    125c:	de f6       	brtc	.-74     	; 0x1214 <__ultoa_invert+0xe>
    125e:	cf 01       	movw	r24, r30
    1260:	08 95       	ret
    1262:	46 2f       	mov	r20, r22
    1264:	47 70       	andi	r20, 0x07	; 7
    1266:	40 5d       	subi	r20, 0xD0	; 208
    1268:	41 93       	st	Z+, r20
    126a:	b3 e0       	ldi	r27, 0x03	; 3
    126c:	0f d0       	rcall	.+30     	; 0x128c <__ultoa_invert+0x86>
    126e:	c9 f7       	brne	.-14     	; 0x1262 <__ultoa_invert+0x5c>
    1270:	f6 cf       	rjmp	.-20     	; 0x125e <__ultoa_invert+0x58>
    1272:	46 2f       	mov	r20, r22
    1274:	4f 70       	andi	r20, 0x0F	; 15
    1276:	40 5d       	subi	r20, 0xD0	; 208
    1278:	4a 33       	cpi	r20, 0x3A	; 58
    127a:	18 f0       	brcs	.+6      	; 0x1282 <__ultoa_invert+0x7c>
    127c:	49 5d       	subi	r20, 0xD9	; 217
    127e:	31 fd       	sbrc	r19, 1
    1280:	40 52       	subi	r20, 0x20	; 32
    1282:	41 93       	st	Z+, r20
    1284:	02 d0       	rcall	.+4      	; 0x128a <__ultoa_invert+0x84>
    1286:	a9 f7       	brne	.-22     	; 0x1272 <__ultoa_invert+0x6c>
    1288:	ea cf       	rjmp	.-44     	; 0x125e <__ultoa_invert+0x58>
    128a:	b4 e0       	ldi	r27, 0x04	; 4
    128c:	a6 95       	lsr	r26
    128e:	97 95       	ror	r25
    1290:	87 95       	ror	r24
    1292:	77 95       	ror	r23
    1294:	67 95       	ror	r22
    1296:	ba 95       	dec	r27
    1298:	c9 f7       	brne	.-14     	; 0x128c <__ultoa_invert+0x86>
    129a:	00 97       	sbiw	r24, 0x00	; 0
    129c:	61 05       	cpc	r22, r1
    129e:	71 05       	cpc	r23, r1
    12a0:	08 95       	ret
    12a2:	9b 01       	movw	r18, r22
    12a4:	ac 01       	movw	r20, r24
    12a6:	0a 2e       	mov	r0, r26
    12a8:	06 94       	lsr	r0
    12aa:	57 95       	ror	r21
    12ac:	47 95       	ror	r20
    12ae:	37 95       	ror	r19
    12b0:	27 95       	ror	r18
    12b2:	ba 95       	dec	r27
    12b4:	c9 f7       	brne	.-14     	; 0x12a8 <__ultoa_invert+0xa2>
    12b6:	62 0f       	add	r22, r18
    12b8:	73 1f       	adc	r23, r19
    12ba:	84 1f       	adc	r24, r20
    12bc:	95 1f       	adc	r25, r21
    12be:	a0 1d       	adc	r26, r0
    12c0:	08 95       	ret

000012c2 <__prologue_saves__>:
    12c2:	2f 92       	push	r2
    12c4:	3f 92       	push	r3
    12c6:	4f 92       	push	r4
    12c8:	5f 92       	push	r5
    12ca:	6f 92       	push	r6
    12cc:	7f 92       	push	r7
    12ce:	8f 92       	push	r8
    12d0:	9f 92       	push	r9
    12d2:	af 92       	push	r10
    12d4:	bf 92       	push	r11
    12d6:	cf 92       	push	r12
    12d8:	df 92       	push	r13
    12da:	ef 92       	push	r14
    12dc:	ff 92       	push	r15
    12de:	0f 93       	push	r16
    12e0:	1f 93       	push	r17
    12e2:	cf 93       	push	r28
    12e4:	df 93       	push	r29
    12e6:	cd b7       	in	r28, 0x3d	; 61
    12e8:	de b7       	in	r29, 0x3e	; 62
    12ea:	ca 1b       	sub	r28, r26
    12ec:	db 0b       	sbc	r29, r27
    12ee:	0f b6       	in	r0, 0x3f	; 63
    12f0:	f8 94       	cli
    12f2:	de bf       	out	0x3e, r29	; 62
    12f4:	0f be       	out	0x3f, r0	; 63
    12f6:	cd bf       	out	0x3d, r28	; 61
    12f8:	09 94       	ijmp

000012fa <__epilogue_restores__>:
    12fa:	2a 88       	ldd	r2, Y+18	; 0x12
    12fc:	39 88       	ldd	r3, Y+17	; 0x11
    12fe:	48 88       	ldd	r4, Y+16	; 0x10
    1300:	5f 84       	ldd	r5, Y+15	; 0x0f
    1302:	6e 84       	ldd	r6, Y+14	; 0x0e
    1304:	7d 84       	ldd	r7, Y+13	; 0x0d
    1306:	8c 84       	ldd	r8, Y+12	; 0x0c
    1308:	9b 84       	ldd	r9, Y+11	; 0x0b
    130a:	aa 84       	ldd	r10, Y+10	; 0x0a
    130c:	b9 84       	ldd	r11, Y+9	; 0x09
    130e:	c8 84       	ldd	r12, Y+8	; 0x08
    1310:	df 80       	ldd	r13, Y+7	; 0x07
    1312:	ee 80       	ldd	r14, Y+6	; 0x06
    1314:	fd 80       	ldd	r15, Y+5	; 0x05
    1316:	0c 81       	ldd	r16, Y+4	; 0x04
    1318:	1b 81       	ldd	r17, Y+3	; 0x03
    131a:	aa 81       	ldd	r26, Y+2	; 0x02
    131c:	b9 81       	ldd	r27, Y+1	; 0x01
    131e:	ce 0f       	add	r28, r30
    1320:	d1 1d       	adc	r29, r1
    1322:	0f b6       	in	r0, 0x3f	; 63
    1324:	f8 94       	cli
    1326:	de bf       	out	0x3e, r29	; 62
    1328:	0f be       	out	0x3f, r0	; 63
    132a:	cd bf       	out	0x3d, r28	; 61
    132c:	ed 01       	movw	r28, r26
    132e:	08 95       	ret

00001330 <_exit>:
    1330:	f8 94       	cli

00001332 <__stop_program>:
    1332:	ff cf       	rjmp	.-2      	; 0x1332 <__stop_program>
